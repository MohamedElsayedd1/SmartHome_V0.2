

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Apr 27 16:31:58 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1,inline
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1,inline
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=3
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=3
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=3
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=3
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1,inline
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1,inline
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1
    94                           	psect	text80,global,reloc=2,class=CODE,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1
    96                           	psect	text82,global,reloc=2,class=CODE,delta=1
    97                           	psect	text83,global,reloc=2,class=CODE,delta=1
    98                           	psect	text84,global,reloc=2,class=CODE,delta=1
    99                           	psect	text85,global,reloc=2,class=CODE,delta=1
   100                           	psect	text86,global,reloc=2,class=CODE,delta=1
   101                           	psect	text87,global,reloc=2,class=CODE,delta=1
   102                           	psect	text88,global,reloc=2,class=CODE,delta=1
   103                           	psect	text89,global,reloc=2,class=CODE,delta=1
   104                           	psect	text90,global,reloc=2,class=CODE,delta=1
   105                           	psect	text91,global,reloc=2,class=CODE,delta=1
   106                           	psect	text92,global,reloc=2,class=CODE,delta=1
   107                           	psect	text93,global,reloc=2,class=CODE,delta=1
   108                           	psect	text94,global,reloc=2,class=CODE,delta=1
   109                           	psect	text95,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text96,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text97,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text98,global,reloc=2,class=CODE,delta=1,inline
   113                           	psect	text99,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text100,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text101,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	text102,global,reloc=2,class=CODE,delta=1
   117                           	psect	text103,global,reloc=2,class=CODE,delta=1
   118                           	psect	text104,global,reloc=2,class=CODE,delta=1
   119                           	psect	text105,global,reloc=2,class=CODE,delta=1
   120                           	psect	text106,global,reloc=2,class=CODE,delta=1
   121                           	psect	text107,global,reloc=2,class=CODE,delta=1
   122                           	psect	text108,global,reloc=2,class=CODE,delta=1
   123                           	psect	text109,global,reloc=2,class=CODE,delta=1
   124                           	psect	text110,global,reloc=2,class=CODE,delta=1
   125                           	psect	text111,global,reloc=2,class=CODE,delta=1
   126                           	psect	text112,global,reloc=2,class=CODE,delta=1,inline
   127                           	psect	text113,global,reloc=2,class=CODE,delta=1,inline
   128                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   129                           	psect	text114,global,reloc=2,class=CODE,delta=1,inline
   130                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   131                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   132                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   133   000000                     
   134                           ; Generated 12/10/2023 GMT
   135                           ; 
   136                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   137                           ; All rights reserved.
   138                           ; 
   139                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   140                           ; 
   141                           ; Redistribution and use in source and binary forms, with or without modification, are
   142                           ; permitted provided that the following conditions are met:
   143                           ; 
   144                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   145                           ;        conditions and the following disclaimer.
   146                           ; 
   147                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   148                           ;        of conditions and the following disclaimer in the documentation and/or other
   149                           ;        materials provided with the distribution. Publication is not required when
   150                           ;        this file is used in an embedded application.
   151                           ; 
   152                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   153                           ;        software without specific prior written permission.
   154                           ; 
   155                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   156                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   157                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   158                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   159                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   160                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   161                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   162                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   163                           ; 
   164                           ; 
   165                           ; Code-generator required, PIC18F46K20 Definitions
   166                           ; 
   167                           ; SFR Addresses
   168   000000                     
   169 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   170   000000                     
   171 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
   172   000000                     
   173 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
   174   000000                     
   175 ;; Function _EUSART_Deinitialize is unused but had its address taken
   176   000000                     
   177 ;; Function _EUSART_TransmitEnable is unused but had its address taken
   178   000000                     
   179 ;; Function _EUSART_TransmitDisable is unused but had its address taken
   180   000000                     
   181 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
   182   000000                     
   183 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
   184   000000                     
   185 ;; Function _EUSART_IsRxReady is unused but had its address taken
   186   000000                     
   187 ;; Function _EUSART_IsTxDone is unused but had its address taken
   188   000000                     
   189 ;; Function _EUSART_ErrorGet is unused but had its address taken
   190   000000                     
   191 ;; Function _EUSART_Read is unused but had its address taken
   192   000000                     
   193 ;; Function _EUSART_DefaultFramingErrorCallback is unused but had its address taken
   194   000000                     
   195 ;; Function _EUSART_DefaultOverrunErrorCallback is unused but had its address taken
   196   000000                     
   197                           	psect	idataCOMRAM
   198   002DF8                     __pidataCOMRAM:
   199                           	callstack 0
   200                           
   201                           ;initializer for _ret
   202   002DF8  01                 	db	1
   203                           
   204                           ;initializer for _my_lcd_4bit
   205   002DF9  13                 	db	19
   206   002DFA  1B                 	db	27
   207   002DFB  23                 	db	35
   208   002DFC  2B                 	db	43
   209   002DFD  03                 	db	3
   210   002DFE  0B                 	db	11
   211                           
   212                           	psect	idataBANK0
   213   002BAE                     __pidataBANK0:
   214                           	callstack 0
   215                           
   216                           ;initializer for _port_registers
   217   002BAE  80                 	db	128
   218   002BAF  0F                 	db	15
   219   002BB0  81                 	db	129
   220   002BB1  0F                 	db	15
   221   002BB2  82                 	db	130
   222   002BB3  0F                 	db	15
   223   002BB4  83                 	db	131
   224   002BB5  0F                 	db	15
   225   002BB6  84                 	db	132
   226   002BB7  0F                 	db	15
   227                           
   228                           ;initializer for _lat_registers
   229   002BB8  89                 	db	137
   230   002BB9  0F                 	db	15
   231   002BBA  8A                 	db	138
   232   002BBB  0F                 	db	15
   233   002BBC  8B                 	db	139
   234   002BBD  0F                 	db	15
   235   002BBE  8C                 	db	140
   236   002BBF  0F                 	db	15
   237   002BC0  8D                 	db	141
   238   002BC1  0F                 	db	15
   239                           
   240                           ;initializer for _tris_registers
   241   002BC2  92                 	db	146
   242   002BC3  0F                 	db	15
   243   002BC4  93                 	db	147
   244   002BC5  0F                 	db	15
   245   002BC6  94                 	db	148
   246   002BC7  0F                 	db	15
   247   002BC8  95                 	db	149
   248   002BC9  0F                 	db	15
   249   002BCA  96                 	db	150
   250   002BCB  0F                 	db	15
   251                           
   252                           	psect	smallconst
   253   001000                     __psmallconst:
   254                           	callstack 0
   255   001000  00                 	db	0
   256   001001                     _UART1:
   257                           	callstack 0
   258   001001  C0                 	db	low _EUSART_Initialize
   259   001002  28                 	db	high _EUSART_Initialize
   260   001003  00                 	db	0
   261   001004  00                 	db	0
   262   001005  00                 	db	0
   263   001006  00                 	db	0
   264   001007  B0                 	db	low _EUSART_Write
   265   001008  2D                 	db	high _EUSART_Write
   266   001009  00                 	db	0
   267   00100A  00                 	db	0
   268   00100B  FC                 	db	low _EUSART_IsTxReady
   269   00100C  2A                 	db	high _EUSART_IsTxReady
   270   00100D  00                 	db	0
   271   00100E  00                 	db	0
   272   00100F  00                 	db	0
   273   001010  00                 	db	0
   274   001011  00                 	db	0
   275   001012  00                 	db	0
   276   001013  00                 	db	0
   277   001014  00                 	db	0
   278   001015  00                 	db	0
   279   001016  00                 	db	0
   280   001017  00                 	db	0
   281   001018  00                 	db	0
   282   001019  00                 	db	0
   283   00101A  00                 	db	0
   284   00101B  00                 	db	0
   285   00101C  00                 	db	0
   286   00101D  00                 	db	0
   287   00101E  00                 	db	0
   288   00101F  00                 	db	0
   289   001020  00                 	db	0
   290   001021  00                 	db	0
   291   001022  00                 	db	0
   292   001023  00                 	db	0
   293   001024  00                 	db	0
   294   001025  00                 	db	0
   295   001026  00                 	db	0
   296   001027  00                 	db	0
   297   001028  00                 	db	0
   298   001029  E8                 	db	low _EUSART_FramingErrorCallbackRegister
   299   00102A  2B                 	db	high _EUSART_FramingErrorCallbackRegister
   300   00102B  CC                 	db	low _EUSART_OverrunErrorCallbackRegister
   301   00102C  2B                 	db	high _EUSART_OverrunErrorCallbackRegister
   302   00102D  00                 	db	0
   303   00102E  00                 	db	0
   304   00102F  00                 	db	0
   305   001030  00                 	db	0
   306   001031                     __end_of_UART1:
   307                           	callstack 0
   308   001031                     _i2c_fsmStateTable:
   309                           	callstack 0
   310   001031  6A                 	db	low _I2C_DO_IDLE
   311   001032  2D                 	db	high _I2C_DO_IDLE
   312   001033  34                 	db	low _I2C_DO_SEND_ADR_READ
   313   001034  2D                 	db	high _I2C_DO_SEND_ADR_READ
   314   001035  44                 	db	low _I2C_DO_SEND_ADR_WRITE
   315   001036  2D                 	db	high _I2C_DO_SEND_ADR_WRITE
   316   001037  3E                 	db	low _I2C_DO_TX
   317   001038  19                 	db	high _I2C_DO_TX
   318   001039  E8                 	db	low _I2C_DO_RX
   319   00103A  1E                 	db	high _I2C_DO_RX
   320   00103B  5E                 	db	low _I2C_DO_RCEN
   321   00103C  2D                 	db	high _I2C_DO_RCEN
   322   00103D  40                 	db	low _I2C_DO_TX_EMPTY
   323   00103E  21                 	db	high _I2C_DO_TX_EMPTY
   324   00103F  E8                 	db	low _I2C_DO_SEND_RESTART_READ
   325   001040  2D                 	db	high _I2C_DO_SEND_RESTART_READ
   326   001041  E0                 	db	low _I2C_DO_SEND_RESTART_WRITE
   327   001042  2D                 	db	high _I2C_DO_SEND_RESTART_WRITE
   328   001043  D8                 	db	low _I2C_DO_SEND_RESTART
   329   001044  2D                 	db	high _I2C_DO_SEND_RESTART
   330   001045  D0                 	db	low _I2C_DO_SEND_STOP
   331   001046  2D                 	db	high _I2C_DO_SEND_STOP
   332   001047  C8                 	db	low _I2C_DO_RX_ACK
   333   001048  2D                 	db	high _I2C_DO_RX_ACK
   334   001049  C0                 	db	low _I2C_DO_RX_NACK_STOP
   335   00104A  2D                 	db	high _I2C_DO_RX_NACK_STOP
   336   00104B  B8                 	db	low _I2C_DO_RX_NACK_RESTART
   337   00104C  2D                 	db	high _I2C_DO_RX_NACK_RESTART
   338   00104D  52                 	db	low _I2C_DO_RESET
   339   00104E  2D                 	db	high _I2C_DO_RESET
   340   00104F  A8                 	db	low _I2C_DO_ADDRESS_NACK
   341   001050  24                 	db	high _I2C_DO_ADDRESS_NACK
   342   001051                     __end_of_i2c_fsmStateTable:
   343                           	callstack 0
   344   000000                     _TXREG	set	4013
   345   000000                     _RCREG	set	4014
   346   000000                     _SPBRG	set	4015
   347   000000                     _TXSTA	set	4012
   348   000000                     _EEDATA	set	4008
   349   000000                     _EEADR	set	4009
   350   000000                     _EECON2	set	4007
   351   000000                     _TRISC	set	3988
   352   000000                     _TRISB	set	3987
   353   000000                     _BAUDCONbits	set	4024
   354   000000                     _TXSTAbits	set	4012
   355   000000                     _RCSTAbits	set	4011
   356   000000                     _SSPSTATbits	set	4039
   357   000000                     _SSPCON2bits	set	4037
   358   000000                     _SSPCON1bits	set	4038
   359   000000                     _TRISD	set	3989
   360   000000                     _WPUB	set	3964
   361   000000                     _ANSELH	set	3967
   362   000000                     _TRISDbits	set	3989
   363   000000                     _PIE1bits	set	3997
   364   000000                     _PIR2bits	set	4001
   365   000000                     _SSPCON2	set	4037
   366   000000                     _SSPCON1	set	4038
   367   000000                     _SSPSTAT	set	4039
   368   000000                     _LATA	set	3977
   369   000000                     _RCONbits	set	4048
   370   000000                     _OSCCON	set	4051
   371   000000                     _INTCONbits	set	4082
   372   000000                     _TABLAT	set	4085
   373   000000                     _TBLPTRL	set	4086
   374   000000                     _TBLPTRH	set	4087
   375   000000                     _TBLPTRU	set	4088
   376   000000                     _SSPBUF	set	4041
   377   000000                     _SSPADD	set	4040
   378   000000                     _EECON1bits	set	4006
   379   000000                     _PIE2bits	set	4000
   380   000000                     _PIR1bits	set	3998
   381   000000                     _RCSTA	set	4011
   382   000000                     _BAUDCON	set	4024
   383   000000                     _OSCTUNE	set	3995
   384   000000                     _TRISE	set	3990
   385   000000                     _TRISA	set	3986
   386   000000                     _LATE	set	3981
   387   000000                     _LATD	set	3980
   388   000000                     _LATC	set	3979
   389   000000                     _LATB	set	3978
   390   000000                     _PORTE	set	3972
   391   000000                     _PORTD	set	3971
   392   000000                     _PORTC	set	3970
   393   000000                     _PORTB	set	3969
   394   000000                     _PORTA	set	3968
   395   000000                     _IOCB	set	3965
   396   000000                     _INTCON3bits	set	4080
   397   000000                     _INTCON2bits	set	4081
   398   000000                     _SPBRGH	set	4016
   399   001051                     STR_4:
   400   001051  53                 	db	83	;'S'
   401   001052  79                 	db	121	;'y'
   402   001053  73                 	db	115	;'s'
   403   001054  74                 	db	116	;'t'
   404   001055  65                 	db	101	;'e'
   405   001056  6D                 	db	109	;'m'
   406   001057  20                 	db	32
   407   001058  69                 	db	105	;'i'
   408   001059  73                 	db	115	;'s'
   409   00105A  20                 	db	32
   410   00105B  6F                 	db	111	;'o'
   411   00105C  70                 	db	112	;'p'
   412   00105D  65                 	db	101	;'e'
   413   00105E  6E                 	db	110	;'n'
   414   00105F  65                 	db	101	;'e'
   415   001060  64                 	db	100	;'d'
   416   001061  20                 	db	32
   417   001062  0D                 	db	13
   418   001063  00                 	db	0
   419   001064                     STR_11:
   420   001064  53                 	db	83	;'S'
   421   001065  6D                 	db	109	;'m'
   422   001066  61                 	db	97	;'a'
   423   001067  72                 	db	114	;'r'
   424   001068  74                 	db	116	;'t'
   425   001069  20                 	db	32
   426   00106A  48                 	db	72	;'H'
   427   00106B  6F                 	db	111	;'o'
   428   00106C  6D                 	db	109	;'m'
   429   00106D  65                 	db	101	;'e'
   430   00106E  20                 	db	32
   431   00106F  50                 	db	80	;'P'
   432   001070  72                 	db	114	;'r'
   433   001071  6F                 	db	111	;'o'
   434   001072  6A                 	db	106	;'j'
   435   001073  65                 	db	101	;'e'
   436   001074  63                 	db	99	;'c'
   437   001075  74                 	db	116	;'t'
   438   001076  00                 	db	0
   439   001077                     STR_1:
   440   001077  20                 	db	32
   441   001078  54                 	db	84	;'T'
   442   001079  65                 	db	101	;'e'
   443   00107A  6D                 	db	109	;'m'
   444   00107B  70                 	db	112	;'p'
   445   00107C  65                 	db	101	;'e'
   446   00107D  72                 	db	114	;'r'
   447   00107E  61                 	db	97	;'a'
   448   00107F  74                 	db	116	;'t'
   449   001080  75                 	db	117	;'u'
   450   001081  72                 	db	114	;'r'
   451   001082  65                 	db	101	;'e'
   452   001083  20                 	db	32
   453   001084  3A                 	db	58	;':'
   454   001085  20                 	db	32
   455   001086  00                 	db	0
   456   001087                     STR_12:
   457   001087  4D                 	db	77	;'M'
   458   001088  6F                 	db	111	;'o'
   459   001089  68                 	db	104	;'h'
   460   00108A  61                 	db	97	;'a'
   461   00108B  6D                 	db	109	;'m'
   462   00108C  65                 	db	101	;'e'
   463   00108D  64                 	db	100	;'d'
   464   00108E  20                 	db	32
   465   00108F  45                 	db	69	;'E'
   466   001090  6C                 	db	108	;'l'
   467   001091  73                 	db	115	;'s'
   468   001092  61                 	db	97	;'a'
   469   001093  79                 	db	121	;'y'
   470   001094  65                 	db	101	;'e'
   471   001095  64                 	db	100	;'d'
   472   001096  00                 	db	0
   473   001097                     STR_13:
   474   001097  73                 	db	115	;'s'
   475   001098  74                 	db	116	;'t'
   476   001099  61                 	db	97	;'a'
   477   00109A  72                 	db	114	;'r'
   478   00109B  74                 	db	116	;'t'
   479   00109C  73                 	db	115	;'s'
   480   00109D  20                 	db	32
   481   00109E  69                 	db	105	;'i'
   482   00109F  6E                 	db	110	;'n'
   483   0010A0  2E                 	db	46
   484   0010A1  2E                 	db	46
   485   0010A2  20                 	db	32
   486   0010A3  33                 	db	51	;'3'
   487   0010A4  00                 	db	0
   488   0010A5                     STR_8:
   489   0010A5  20                 	db	32
   490   0010A6  28                 	db	40
   491   0010A7  69                 	db	105	;'i'
   492   0010A8  6E                 	db	110	;'n'
   493   0010A9  20                 	db	32
   494   0010AA  68                 	db	104	;'h'
   495   0010AB  65                 	db	101	;'e'
   496   0010AC  78                 	db	120	;'x'
   497   0010AD  61                 	db	97	;'a'
   498   0010AE  29                 	db	41
   499   0010AF  20                 	db	32
   500   0010B0  00                 	db	0
   501   0010B1                     STR_3:
   502   0010B1  20                 	db	32
   503   0010B2  54                 	db	84	;'T'
   504   0010B3  69                 	db	105	;'i'
   505   0010B4  6D                 	db	109	;'m'
   506   0010B5  65                 	db	101	;'e'
   507   0010B6  20                 	db	32
   508   0010B7  3A                 	db	58	;':'
   509   0010B8  20                 	db	32
   510   0010B9  00                 	db	0
   511   0010BA                     STR_2:
   512   0010BA  20                 	db	32
   513   0010BB  44                 	db	68	;'D'
   514   0010BC  61                 	db	97	;'a'
   515   0010BD  74                 	db	116	;'t'
   516   0010BE  65                 	db	101	;'e'
   517   0010BF  20                 	db	32
   518   0010C0  3A                 	db	58	;':'
   519   0010C1  20                 	db	32
   520   0010C2  00                 	db	0
   521   0010C3                     STR_10:
   522   0010C3  25                 	db	37
   523   0010C4  64                 	db	100	;'d'
   524   0010C5  00                 	db	0
   525   0010C6                     STR_9:
   526   0010C6  25                 	db	37
   527   0010C7  78                 	db	120	;'x'
   528   0010C8  00                 	db	0
   529   0010C9                     STR_14:
   530   0010C9  30                 	db	48	;'0'
   531   0010CA  78                 	db	120	;'x'
   532   0010CB  00                 	db	0
   533   0010CC  00                 	db	0	; dummy byte at the end
   534   000000                     
   535                           ; #config settings
   536                           
   537                           	psect	cinit
   538   002574                     __pcinit:
   539                           	callstack 0
   540   002574                     start_initialization:
   541                           	callstack 0
   542   002574                     __initialization:
   543                           	callstack 0
   544                           
   545                           ; Initialize objects allocated to BANK0 (30 bytes)
   546                           ; load TBLPTR registers with __pidataBANK0
   547   002574  0EAE               	movlw	low __pidataBANK0
   548   002576  6EF6               	movwf	tblptrl,c
   549   002578  0E2B               	movlw	high __pidataBANK0
   550   00257A  6EF7               	movwf	tblptrh,c
   551   00257C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   552   00257E  6EF8               	movwf	tblptru,c
   553   002580  EE00  F0BA         	lfsr	0,__pdataBANK0
   554   002584  EE10 F01E          	lfsr	1,30
   555   002588                     copy_data0:
   556   002588  0009               	tblrd		*+
   557   00258A  CFF5 FFEE          	movff	tablat,postinc0
   558   00258E  50E5               	movf	postdec1,w,c
   559   002590  50E1               	movf	fsr1l,w,c
   560   002592  E1FA               	bnz	copy_data0
   561                           
   562                           ; Initialize objects allocated to COMRAM (7 bytes)
   563                           ; load TBLPTR registers with __pidataCOMRAM
   564   002594  0EF8               	movlw	low __pidataCOMRAM
   565   002596  6EF6               	movwf	tblptrl,c
   566   002598  0E2D               	movlw	high __pidataCOMRAM
   567   00259A  6EF7               	movwf	tblptrh,c
   568   00259C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   569   00259E  6EF8               	movwf	tblptru,c
   570   0025A0  EE00  F057         	lfsr	0,__pdataCOMRAM
   571   0025A4  EE10 F007          	lfsr	1,7
   572   0025A8                     copy_data1:
   573   0025A8  0009               	tblrd		*+
   574   0025AA  CFF5 FFEE          	movff	tablat,postinc0
   575   0025AE  50E5               	movf	postdec1,w,c
   576   0025B0  50E1               	movf	fsr1l,w,c
   577   0025B2  E1FA               	bnz	copy_data1
   578                           
   579                           ; Clear objects allocated to BANK0 (90 bytes)
   580   0025B4  EE00  F060         	lfsr	0,__pbssBANK0
   581   0025B8  0E5A               	movlw	90
   582   0025BA                     clear_0:
   583   0025BA  6AEE               	clrf	postinc0,c
   584   0025BC  06E8               	decf	wreg,f,c
   585   0025BE  E1FD               	bnz	clear_0
   586                           
   587                           ; Clear objects allocated to COMRAM (18 bytes)
   588   0025C0  EE00  F045         	lfsr	0,__pbssCOMRAM
   589   0025C4  0E12               	movlw	18
   590   0025C6                     clear_1:
   591   0025C6  6AEE               	clrf	postinc0,c
   592   0025C8  06E8               	decf	wreg,f,c
   593   0025CA  E1FD               	bnz	clear_1
   594   0025CC                     end_of_initialization:
   595                           	callstack 0
   596   0025CC                     __end_of__initialization:
   597                           	callstack 0
   598   0025CC  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   599   0025CE  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   600   0025D0  0100               	movlb	0
   601   0025D2  EF68  F00A         	goto	_main	;jump to C main() function
   602                           
   603                           	psect	bssCOMRAM
   604   000045                     __pbssCOMRAM:
   605                           	callstack 0
   606   000045                     _EUSART_FramingErrorHandler:
   607                           	callstack 0
   608   000045                     	ds	2
   609   000047                     _INT2_InterruptHandler:
   610                           	callstack 0
   611   000047                     	ds	2
   612   000049                     _INT1_InterruptHandler:
   613                           	callstack 0
   614   000049                     	ds	2
   615   00004B                     _INT0_InterruptHandler:
   616                           	callstack 0
   617   00004B                     	ds	2
   618   00004D                     _MSSP_InterruptHandler:
   619                           	callstack 0
   620   00004D                     	ds	2
   621   00004F                     _flags:
   622                           	callstack 0
   623   00004F                     	ds	1
   624   000050                     _decimal:
   625                           	callstack 0
   626   000050                     	ds	1
   627   000051                     _TC74_Temp:
   628                           	callstack 0
   629   000051                     	ds	1
   630   000052                     _received_data:
   631                           	callstack 0
   632   000052                     	ds	1
   633   000053                     _unlockKeyHigh:
   634                           	callstack 0
   635   000053                     	ds	1
   636   000054                     _unlockKeyLow:
   637                           	callstack 0
   638   000054                     	ds	1
   639   000055                     _dummy_str:
   640                           	callstack 0
   641   000055                     	ds	2
   642                           
   643                           	psect	dataCOMRAM
   644   000057                     __pdataCOMRAM:
   645                           	callstack 0
   646   000057                     _ret:
   647                           	callstack 0
   648   000057                     	ds	1
   649   000058                     _my_lcd_4bit:
   650                           	callstack 0
   651   000058                     	ds	6
   652                           
   653                           	psect	bssBANK0
   654   000060                     __pbssBANK0:
   655                           	callstack 0
   656   000060                     _I2C_Status:
   657                           	callstack 0
   658   000060                     	ds	36
   659   000084                     _dbuf:
   660                           	callstack 0
   661   000084                     	ds	32
   662   0000A4                     _DS1307_obj@DS1307$F91:
   663                           	callstack 0
   664   0000A4                     	ds	6
   665   0000AA                     _width:
   666                           	callstack 0
   667   0000AA                     	ds	2
   668   0000AC                     _prec:
   669                           	callstack 0
   670   0000AC                     	ds	2
   671   0000AE                     _EUSART_OverrunErrorHandler:
   672                           	callstack 0
   673   0000AE                     	ds	2
   674   0000B0                     _eusartRxLastError:
   675                           	callstack 0
   676   0000B0                     	ds	2
   677   0000B2                     _DS1307_obj:
   678                           	callstack 0
   679   0000B2                     	ds	6
   680   0000B8                     _hex_str:
   681                           	callstack 0
   682   0000B8                     	ds	2
   683                           
   684                           	psect	dataBANK0
   685   0000BA                     __pdataBANK0:
   686                           	callstack 0
   687   0000BA                     _port_registers:
   688                           	callstack 0
   689   0000BA                     	ds	10
   690   0000C4                     _lat_registers:
   691                           	callstack 0
   692   0000C4                     	ds	10
   693   0000CE                     _tris_registers:
   694                           	callstack 0
   695   0000CE                     	ds	10
   696                           
   697                           	psect	cstackCOMRAM
   698   000001                     __pcstackCOMRAM:
   699                           	callstack 0
   700   000001                     ??_I2C_DO_RX:
   701   000001                     ??_I2C_DO_TX_EMPTY:
   702   000001                     ??_I2C_DO_ADDRESS_NACK:
   703   000001                     I2C_MasterSendTxData@data:
   704                           	callstack 0
   705   000001                     i2I2C_SetBuffer@buffer:
   706                           	callstack 0
   707   000001                     i2I2C_SetCallback@cb:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x0
   711   000001                     	ds	1
   712   000002                     ??_I2C_DO_TX:
   713                           
   714                           ; 1 bytes @ 0x1
   715   000002                     	ds	1
   716   000003                     i2I2C_SetBuffer@bufferSize:
   717                           	callstack 0
   718   000003                     i2I2C_SetCallback@ptr:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x2
   722   000003                     	ds	1
   723   000004                     ??_I2C_MasterFsm:
   724                           
   725                           ; 1 bytes @ 0x3
   726   000004                     	ds	1
   727   000005                     i2I2C_SetCallback@idx:
   728                           	callstack 0
   729                           
   730                           ; 1 bytes @ 0x4
   731   000005                     	ds	1
   732   000006                     i2I2C_SetDataCompleteCallback@cb:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x5
   736   000006                     	ds	1
   737   000007                     ??_INTERRUPT_InterruptManagerHigh:
   738                           
   739                           ; 1 bytes @ 0x6
   740   000007                     	ds	1
   741   000008                     i2I2C_SetDataCompleteCallback@ptr:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x7
   745   000008                     	ds	2
   746   00000A                     rd1RegCompleteHandler@ptr:
   747                           	callstack 0
   748   00000A                     rd2RegCompleteHandler@ptr:
   749                           	callstack 0
   750   00000A                     wr1RegCompleteHandler@ptr:
   751                           	callstack 0
   752   00000A                     wr2RegCompleteHandler@ptr:
   753                           	callstack 0
   754   00000A                     rdBlkRegCompleteHandler@ptr:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x9
   758   00000A                     	ds	2
   759   00000C                     ??_rdBlkRegCompleteHandler:
   760                           
   761                           ; 1 bytes @ 0xB
   762   00000C                     	ds	5
   763   000011                     ?_strlen:
   764                           	callstack 0
   765   000011                     ?___awdiv:
   766                           	callstack 0
   767   000011                     ?___awmod:
   768                           	callstack 0
   769   000011                     I2C_Close@returnValue:
   770                           	callstack 0
   771   000011                     I2C_MasterOperation@read:
   772                           	callstack 0
   773   000011                     _EUSART_IsTxReady$2105:
   774                           	callstack 0
   775   000011                     EUSART_Write@txData:
   776                           	callstack 0
   777   000011                     gpio_pin_direction_intialize@_pin_config:
   778                           	callstack 0
   779   000011                     gpio_pin_write_logic@_pin_config:
   780                           	callstack 0
   781   000011                     memset@dest:
   782                           	callstack 0
   783   000011                     I2C_SetBuffer@buffer:
   784                           	callstack 0
   785   000011                     I2C_SetInterruptHandler@InterruptHandler:
   786                           	callstack 0
   787   000011                     I2C_SetCallback@cb:
   788                           	callstack 0
   789   000011                     INT0_SetInterruptHandler@InterruptHandler:
   790                           	callstack 0
   791   000011                     INT1_SetInterruptHandler@InterruptHandler:
   792                           	callstack 0
   793   000011                     INT2_SetInterruptHandler@InterruptHandler:
   794                           	callstack 0
   795   000011                     EUSART_FramingErrorCallbackRegister@callbackHandler:
   796                           	callstack 0
   797   000011                     EUSART_OverrunErrorCallbackRegister@callbackHandler:
   798                           	callstack 0
   799   000011                     ___awdiv@dividend:
   800                           	callstack 0
   801   000011                     ___awmod@dividend:
   802                           	callstack 0
   803   000011                     fputc@c:
   804                           	callstack 0
   805   000011                     strlen@s:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x10
   809   000011                     	ds	1
   810   000012                     ??_gpio_pin_direction_intialize:
   811   000012                     I2C_MasterOperation@returnValue:
   812                           	callstack 0
   813   000012                     gpio_pin_write_logic@logic:
   814                           	callstack 0
   815   000012                     memset@c:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x11
   819   000012                     	ds	1
   820   000013                     ??_gpio_pin_write_logic:
   821   000013                     I2C_Open@address:
   822                           	callstack 0
   823   000013                     fputc@fp:
   824                           	callstack 0
   825   000013                     I2C_SetBuffer@bufferSize:
   826                           	callstack 0
   827   000013                     I2C_SetCallback@ptr:
   828                           	callstack 0
   829   000013                     ___awdiv@divisor:
   830                           	callstack 0
   831   000013                     ___awmod@divisor:
   832                           	callstack 0
   833   000013                     strlen@a:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x12
   837   000013                     	ds	1
   838   000014                     ??_fputc:
   839   000014                     I2C_Open@returnValue:
   840                           	callstack 0
   841   000014                     memset@n:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x13
   845   000014                     	ds	1
   846   000015                     I2C_SetCallback@idx:
   847                           	callstack 0
   848   000015                     ___awdiv@counter:
   849                           	callstack 0
   850   000015                     ___awmod@counter:
   851                           	callstack 0
   852   000015                     EUSART_Send_String@str:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x14
   856   000015                     	ds	1
   857   000016                     ___awdiv@sign:
   858                           	callstack 0
   859   000016                     ___awmod@sign:
   860                           	callstack 0
   861   000016                     memset@p:
   862                           	callstack 0
   863   000016                     I2C_SetDataCompleteCallback@cb:
   864                           	callstack 0
   865   000016                     I2C_SetAddressNackCallback@cb:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x15
   869   000016                     	ds	1
   870   000017                     ??_EUSART_Send_String:
   871   000017                     ?_abs:
   872                           	callstack 0
   873   000017                     ___awdiv@quotient:
   874                           	callstack 0
   875   000017                     abs@a:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x16
   879   000017                     	ds	1
   880   000018                     gpio_pin_write_logic@ret:
   881                           	callstack 0
   882   000018                     I2C_SetDataCompleteCallback@ptr:
   883                           	callstack 0
   884   000018                     I2C_SetAddressNackCallback@ptr:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x17
   888   000018                     	ds	1
   889   000019                     ??_abs:
   890   000019                     EUSART_Send_String@i:
   891                           	callstack 0
   892   000019                     lcd_4bit_send@lcd:
   893                           	callstack 0
   894   000019                     lcd_4bit_send_enable_signal@lcd:
   895                           	callstack 0
   896   000019                     gpio_pin_intialize@_pin_config:
   897                           	callstack 0
   898                           
   899                           ; 1 bytes @ 0x18
   900   000019                     	ds	1
   901   00001A                     I2C_Read1ByteRegister@reg:
   902                           	callstack 0
   903   00001A                     I2C_Write1ByteRegister@reg:
   904                           	callstack 0
   905   00001A                     I2C_Write1Byte@reg:
   906                           	callstack 0
   907   00001A                     lcd_4bit_send@command:
   908                           	callstack 0
   909   00001A                     lcd_4bit_send_enable_signal@ret:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x19
   913   00001A                     	ds	1
   914   00001B                     I2C_Read1ByteRegister@address:
   915                           	callstack 0
   916   00001B                     I2C_Write1ByteRegister@data:
   917                           	callstack 0
   918   00001B                     I2C_Write1Byte@address:
   919                           	callstack 0
   920   00001B                     lcd_4bit_send@ret:
   921                           	callstack 0
   922   00001B                     vfpfcnvrt@fp:
   923                           	callstack 0
   924                           
   925                           ; 1 bytes @ 0x1A
   926   00001B                     	ds	1
   927   00001C                     I2C_Read1ByteRegister@returnValue:
   928                           	callstack 0
   929   00001C                     I2C_Write1ByteRegister@address:
   930                           	callstack 0
   931   00001C                     lcd_4bit_send_command@lcd:
   932                           	callstack 0
   933   00001C                     lcd_4bit_send_char_data@lcd:
   934                           	callstack 0
   935   00001C                     vfpfcnvrt@fmt:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x1B
   939   00001C                     	ds	1
   940   00001D                     EX_EEPROM_Write_Byte@data:
   941                           	callstack 0
   942   00001D                     EX_EEPROM_Read_Byte@reg:
   943                           	callstack 0
   944   00001D                     Get_seconds@reg:
   945                           	callstack 0
   946   00001D                     Get_minutes@reg:
   947                           	callstack 0
   948   00001D                     Get_hours@reg:
   949                           	callstack 0
   950   00001D                     Get_years@reg:
   951                           	callstack 0
   952   00001D                     Get_months@reg:
   953                           	callstack 0
   954   00001D                     Get_days@reg:
   955                           	callstack 0
   956   00001D                     Read_Temperature@temp_data:
   957                           	callstack 0
   958   00001D                     lcd_4bit_send_command@command:
   959                           	callstack 0
   960   00001D                     lcd_4bit_send_char_data@data:
   961                           	callstack 0
   962   00001D                     vfpfcnvrt@ap:
   963                           	callstack 0
   964                           
   965                           ; 1 bytes @ 0x1C
   966   00001D                     	ds	1
   967   00001E                     ??_vfpfcnvrt:
   968   00001E                     EX_EEPROM_Write_Byte@reg:
   969                           	callstack 0
   970   00001E                     EX_EEPROM_Read_Byte@received_data:
   971                           	callstack 0
   972   00001E                     Get_seconds@address:
   973                           	callstack 0
   974   00001E                     Get_minutes@address:
   975                           	callstack 0
   976   00001E                     Get_hours@address:
   977                           	callstack 0
   978   00001E                     Get_years@address:
   979                           	callstack 0
   980   00001E                     Get_months@address:
   981                           	callstack 0
   982   00001E                     Get_days@address:
   983                           	callstack 0
   984   00001E                     Read_Temperature@address:
   985                           	callstack 0
   986   00001E                     lcd_4bit_send_command@ret:
   987                           	callstack 0
   988   00001E                     lcd_4bit_send_char_data@ret:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0x1D
   992   00001E                     	ds	1
   993   00001F                     Get_seconds@seconds:
   994                           	callstack 0
   995   00001F                     Get_minutes@minutes:
   996                           	callstack 0
   997   00001F                     Get_hours@hours:
   998                           	callstack 0
   999   00001F                     Get_years@years:
  1000                           	callstack 0
  1001   00001F                     Get_months@months:
  1002                           	callstack 0
  1003   00001F                     Get_days@days:
  1004                           	callstack 0
  1005   00001F                     Read_Temperature@temp:
  1006                           	callstack 0
  1007   00001F                     lcd_4bit_intialize@lcd:
  1008                           	callstack 0
  1009   00001F                     lcd_4bit_set_cursor@lcd:
  1010                           	callstack 0
  1011                           
  1012                           ; 1 bytes @ 0x1E
  1013   00001F                     	ds	1
  1014   000020                     ??_lcd_4bit_intialize:
  1015   000020                     ?_Get_time_And_Date:
  1016                           	callstack 0
  1017   000020                     lcd_4bit_set_cursor@row:
  1018                           	callstack 0
  1019   000020                     vfpfcnvrt@done:
  1020                           	callstack 0
  1021                           
  1022                           ; 1 bytes @ 0x1F
  1023   000020                     	ds	1
  1024   000021                     lcd_4bit_set_cursor@column:
  1025                           	callstack 0
  1026   000021                     vfpfcnvrt@x:
  1027                           	callstack 0
  1028   000021                     lcd_4bit_intialize@pin_counter:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x20
  1032   000021                     	ds	1
  1033   000022                     ??_lcd_4bit_set_cursor:
  1034   000022                     vfpfcnvrt@cp:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x21
  1038   000022                     	ds	1
  1039   000023                     lcd_4bit_intialize@ret:
  1040                           	callstack 0
  1041   000023                     vfpfcnvrt@convarg:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x22
  1045   000023                     	ds	1
  1046   000024                     lcd_4bit_set_cursor@ret:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x23
  1050   000024                     	ds	1
  1051   000025                     lcd_4bit_send_char_data_pos@lcd:
  1052                           	callstack 0
  1053   000025                     lcd_4bit_send_string_pos@lcd:
  1054                           	callstack 0
  1055                           
  1056                           ; 1 bytes @ 0x24
  1057   000025                     	ds	1
  1058   000026                     lcd_4bit_send_char_data_pos@data:
  1059                           	callstack 0
  1060   000026                     lcd_4bit_send_string_pos@str:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x25
  1064   000026                     	ds	1
  1065   000027                     lcd_4bit_send_char_data_pos@row:
  1066                           	callstack 0
  1067   000027                     vfpfcnvrt@c:
  1068                           	callstack 0
  1069                           
  1070                           ; 1 bytes @ 0x26
  1071   000027                     	ds	1
  1072   000028                     ?_vfprintf:
  1073                           	callstack 0
  1074   000028                     lcd_4bit_send_char_data_pos@column:
  1075                           	callstack 0
  1076   000028                     lcd_4bit_send_string_pos@row:
  1077                           	callstack 0
  1078   000028                     vfprintf@fp:
  1079                           	callstack 0
  1080                           
  1081                           ; 1 bytes @ 0x27
  1082   000028                     	ds	1
  1083   000029                     lcd_4bit_send_char_data_pos@ret:
  1084                           	callstack 0
  1085   000029                     lcd_4bit_send_string_pos@column:
  1086                           	callstack 0
  1087   000029                     vfprintf@fmt:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x28
  1091   000029                     	ds	1
  1092   00002A                     lcd_4bit_send_string_pos@ret:
  1093                           	callstack 0
  1094   00002A                     vfprintf@ap:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0x29
  1098   00002A                     	ds	1
  1099   00002B                     ??_LCD_Beginning_Msg:
  1100   00002B                     vfprintf@cfmt:
  1101                           	callstack 0
  1102                           
  1103                           ; 1 bytes @ 0x2A
  1104   00002B                     	ds	1
  1105   00002C                     ?_sprintf:
  1106                           	callstack 0
  1107   00002C                     sprintf@s:
  1108                           	callstack 0
  1109                           
  1110                           ; 1 bytes @ 0x2B
  1111   00002C                     	ds	1
  1112   00002D                     sprintf@fmt:
  1113                           	callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x2C
  1116   00002D                     	ds	5
  1117   000032                     sprintf@ap:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x31
  1121   000032                     	ds	1
  1122   000033                     sprintf@f:
  1123                           	callstack 0
  1124                           
  1125                           ; 12 bytes @ 0x32
  1126   000033                     	ds	12
  1127   00003F                     convert_byte_to_str@str:
  1128                           	callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x3E
  1131   00003F                     	ds	1
  1132   000040                     convert_byte_to_str@val:
  1133                           	callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x3F
  1136   000040                     	ds	1
  1137   000041                     ??_EUSART_Send_Date:
  1138   000041                     ??_EUSART_Send_Time:
  1139   000041                     LCD_Print_Temperature@temp:
  1140                           	callstack 0
  1141   000041                     LCD_Print_Date@DS1307_obj:
  1142                           	callstack 0
  1143   000041                     LCD_Print_Time@DS1307_obj:
  1144                           	callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x40
  1147   000041                     	ds	1
  1148   000042                     
  1149                           ; 1 bytes @ 0x41
  1150   000042                     	ds	1
  1151   000043                     ??_main:
  1152                           
  1153                           ; 1 bytes @ 0x42
  1154   000043                     	ds	2
  1155                           
  1156 ;;
  1157 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1158 ;;
  1159 ;; *************** function _main *****************
  1160 ;; Defined at:
  1161 ;;		line 82 in file "main.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;		None
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;		None
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  2  983[None  ] int 
  1168 ;; Registers used:
  1169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;Total ram usage:        2 bytes
  1180 ;; Hardware stack levels required when called: 14
  1181 ;; This function calls:
  1182 ;;		_EUSART_Send_Date
  1183 ;;		_EUSART_Send_String
  1184 ;;		_EUSART_Send_Temp
  1185 ;;		_EUSART_Send_Time
  1186 ;;		_EX_EEPROM_Read_Byte
  1187 ;;		_EX_EEPROM_Write_Byte
  1188 ;;		_Get_time_And_Date
  1189 ;;		_I2C_Write1Byte
  1190 ;;		_LCD_Beginning_Msg
  1191 ;;		_LCD_Print_Date
  1192 ;;		_LCD_Print_Temperature
  1193 ;;		_LCD_Print_Time
  1194 ;;		_Read_Temperature
  1195 ;;		_SYSTEM_Initialize
  1196 ;;		_lcd_4bit_intialize
  1197 ;;		_lcd_4bit_send_string_pos
  1198 ;; This function is called by:
  1199 ;;		Startup code after reset
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           	psect	text0
  1204   0014D0                     __ptext0:
  1205                           	callstack 0
  1206   0014D0                     _main:
  1207                           	callstack 17
  1208   0014D0                     
  1209                           ;main.c: 84:     SYSTEM_Initialize();
  1210   0014D0  ECC7  F015         	call	_SYSTEM_Initialize	;wreg free
  1211   0014D4                     
  1212                           ;main.c: 85:     ret = lcd_4bit_intialize(&my_lcd_4bit);
  1213   0014D4  0E58               	movlw	low _my_lcd_4bit
  1214   0014D6  6E1F               	movwf	lcd_4bit_intialize@lcd^0,c
  1215   0014D8  ECF1  F00A         	call	_lcd_4bit_intialize	;wreg free
  1216   0014DC  6E57               	movwf	_ret^0,c
  1217   0014DE                     
  1218                           ;main.c: 86:     LCD_Beginning_Msg();
  1219   0014DE  ECD0  F009         	call	_LCD_Beginning_Msg	;wreg free
  1220   0014E2                     
  1221                           ;main.c: 94:     (INTCONbits.GIEH = 1);
  1222   0014E2  8EF2               	bsf	242,7,c	;volatile
  1223   0014E4                     
  1224                           ;main.c: 95:     (INTCONbits.GIEL = 1);
  1225   0014E4  8CF2               	bsf	242,6,c	;volatile
  1226   0014E6                     
  1227                           ;main.c: 97:     (INTCONbits.PEIE = 1);
  1228   0014E6  8CF2               	bsf	242,6,c	;volatile
  1229   0014E8                     
  1230                           ;main.c: 102:     ret = lcd_4bit_send_string_pos(&my_lcd_4bit, " Temperature : ", 1, 3);
  1231   0014E8  0E58               	movlw	low _my_lcd_4bit
  1232   0014EA  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1233   0014EC  0E77               	movlw	low STR_1
  1234   0014EE  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  1235   0014F0  5026               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1236   0014F2  A4D8               	btfss	status,2,c
  1237   0014F4  0E10               	movlw	high __smallconst
  1238   0014F6  6E27               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1239   0014F8  0E01               	movlw	1
  1240   0014FA  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1241   0014FC  0E03               	movlw	3
  1242   0014FE  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1243   001500  EC16  F010         	call	_lcd_4bit_send_string_pos	;wreg free
  1244   001504  6E57               	movwf	_ret^0,c
  1245   001506                     
  1246                           ;main.c: 103:     ret = lcd_4bit_send_string_pos(&my_lcd_4bit, " Date : ", 2, 2);
  1247   001506  0E58               	movlw	low _my_lcd_4bit
  1248   001508  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1249   00150A  0EBA               	movlw	low STR_2
  1250   00150C  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  1251   00150E  5026               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1252   001510  A4D8               	btfss	status,2,c
  1253   001512  0E10               	movlw	high __smallconst
  1254   001514  6E27               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1255   001516  0E02               	movlw	2
  1256   001518  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1257   00151A  0E02               	movlw	2
  1258   00151C  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1259   00151E  EC16  F010         	call	_lcd_4bit_send_string_pos	;wreg free
  1260   001522  6E57               	movwf	_ret^0,c
  1261   001524                     
  1262                           ;main.c: 104:     ret = lcd_4bit_send_string_pos(&my_lcd_4bit, " Time : ", 3, 2);
  1263   001524  0E58               	movlw	low _my_lcd_4bit
  1264   001526  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1265   001528  0EB1               	movlw	low STR_3
  1266   00152A  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  1267   00152C  5026               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1268   00152E  A4D8               	btfss	status,2,c
  1269   001530  0E10               	movlw	high __smallconst
  1270   001532  6E27               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1271   001534  0E03               	movlw	3
  1272   001536  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  1273   001538  0E02               	movlw	2
  1274   00153A  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  1275   00153C  EC16  F010         	call	_lcd_4bit_send_string_pos	;wreg free
  1276   001540  6E57               	movwf	_ret^0,c
  1277   001542                     
  1278                           ;main.c: 106:     EUSART_Send_String("System is opened \r");
  1279   001542  0E51               	movlw	low STR_4
  1280   001544  6E15               	movwf	EUSART_Send_String@str^0,c
  1281   001546  5015               	movf	EUSART_Send_String@str^0,w,c
  1282   001548  A4D8               	btfss	status,2,c
  1283   00154A  0E10               	movlw	high __smallconst
  1284   00154C  6E16               	movwf	(EUSART_Send_String@str+1)^0,c
  1285   00154E  EC61  F010         	call	_EUSART_Send_String	;wreg free
  1286   001552                     
  1287                           ;main.c: 107:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1288   001552  0E06               	movlw	6
  1289   001554  6E44               	movwf	(??_main+1)^0,c
  1290   001556  0E13               	movlw	19
  1291   001558  6E43               	movwf	??_main^0,c
  1292   00155A  0EAE               	movlw	174
  1293   00155C                     u3407:
  1294   00155C  2EE8               	decfsz	wreg,f,c
  1295   00155E  D7FE               	bra	u3407
  1296   001560  2E43               	decfsz	??_main^0,f,c
  1297   001562  D7FC               	bra	u3407
  1298   001564  2E44               	decfsz	(??_main+1)^0,f,c
  1299   001566  D7FA               	bra	u3407
  1300   001568                     
  1301                           ;main.c: 110:     EX_EEPROM_Write_Byte(0x00, 0x06);
  1302   001568  0E06               	movlw	6
  1303   00156A  6E1D               	movwf	EX_EEPROM_Write_Byte@data^0,c
  1304   00156C  0E00               	movlw	0
  1305   00156E  EC88  F016         	call	_EX_EEPROM_Write_Byte
  1306   001572                     
  1307                           ;main.c: 111:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1308   001572  0E02               	movlw	2
  1309   001574  6E44               	movwf	(??_main+1)^0,c
  1310   001576  0E04               	movlw	4
  1311   001578  6E43               	movwf	??_main^0,c
  1312   00157A  0EBA               	movlw	186
  1313   00157C                     u3417:
  1314   00157C  2EE8               	decfsz	wreg,f,c
  1315   00157E  D7FE               	bra	u3417
  1316   001580  2E43               	decfsz	??_main^0,f,c
  1317   001582  D7FC               	bra	u3417
  1318   001584  2E44               	decfsz	(??_main+1)^0,f,c
  1319   001586  D7FA               	bra	u3417
  1320   001588  F000 F000          	nop2	
  1321   00158C                     
  1322                           ;main.c: 112:     received_data = EX_EEPROM_Read_Byte(0x03);
  1323   00158C  0E03               	movlw	3
  1324   00158E  EC91  F016         	call	_EX_EEPROM_Read_Byte
  1325   001592  6E52               	movwf	_received_data^0,c
  1326   001594                     l5436:
  1327                           
  1328                           ;main.c: 115:         DS1307_obj = Get_time_And_Date();
  1329   001594  ECED  F011         	call	_Get_time_And_Date	;wreg free
  1330   001598  EE20  F0B2         	lfsr	2,_DS1307_obj
  1331   00159C  0E05               	movlw	5
  1332   00159E                     u3111:
  1333   00159E  CFEB FFDB          	movff	plusw0,plusw2
  1334   0015A2  06E8               	decf	wreg,f,c
  1335   0015A4  E2FC               	bc	u3111
  1336   0015A6                     
  1337                           ;main.c: 116:         TC74_Temp = Read_Temperature(0x9A);
  1338   0015A6  0E9A               	movlw	154
  1339   0015A8  EC0E  F016         	call	_Read_Temperature
  1340   0015AC  6E51               	movwf	_TC74_Temp^0,c
  1341   0015AE                     
  1342                           ;main.c: 117:         I2C_Write1Byte(0X70, TC74_Temp);
  1343   0015AE  C051  F01A         	movff	_TC74_Temp,I2C_Write1Byte@reg
  1344   0015B2  0E70               	movlw	112
  1345   0015B4  EC49  F013         	call	_I2C_Write1Byte
  1346   0015B8                     
  1347                           ;main.c: 118:         LCD_Print_Temperature(TC74_Temp);
  1348   0015B8  5051               	movf	_TC74_Temp^0,w,c
  1349   0015BA  EC9D  F013         	call	_LCD_Print_Temperature
  1350   0015BE                     
  1351                           ;main.c: 119:         LCD_Print_Date(&DS1307_obj);
  1352   0015BE  0EB2               	movlw	low _DS1307_obj
  1353   0015C0  6E41               	movwf	LCD_Print_Date@DS1307_obj^0,c
  1354   0015C2  EC01  F00D         	call	_LCD_Print_Date	;wreg free
  1355   0015C6                     
  1356                           ;main.c: 120:         LCD_Print_Time(&DS1307_obj);
  1357   0015C6  0EB2               	movlw	low _DS1307_obj
  1358   0015C8  6E41               	movwf	LCD_Print_Time@DS1307_obj^0,c
  1359   0015CA  EC15  F00E         	call	_LCD_Print_Time	;wreg free
  1360   0015CE                     
  1361                           ;main.c: 121:         EUSART_Send_Date();
  1362   0015CE  ECB9  F00D         	call	_EUSART_Send_Date	;wreg free
  1363   0015D2                     
  1364                           ;main.c: 122:         EUSART_Send_Time();
  1365   0015D2  EC5D  F00D         	call	_EUSART_Send_Time	;wreg free
  1366   0015D6                     
  1367                           ;main.c: 123:         EUSART_Send_Temp();
  1368   0015D6  EC4D  F011         	call	_EUSART_Send_Temp	;wreg free
  1369   0015DA  EFCA  F00A         	goto	l5436
  1370   0015DE  EF5B  F000         	goto	start
  1371   0015E2                     __end_of_main:
  1372                           	callstack 0
  1373                           
  1374 ;; *************** function _lcd_4bit_intialize *****************
  1375 ;; Defined at:
  1376 ;;		line 10 in file "mcc_generated_files/lcd/ecu_lcd.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  lcd             1   30[COMRAM] PTR const struct .
  1379 ;;		 -> my_lcd_4bit(6), 
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  pin_counter     2   32[COMRAM] int 
  1382 ;;  ret             1   34[COMRAM] unsigned char 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  1    wreg      unsigned char 
  1385 ;; Registers used:
  1386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1392 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;Total ram usage:        5 bytes
  1397 ;; Hardware stack levels used: 1
  1398 ;; Hardware stack levels required when called: 10
  1399 ;; This function calls:
  1400 ;;		_gpio_pin_intialize
  1401 ;;		_lcd_4bit_send_command
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text1
  1408   0015E2                     __ptext1:
  1409                           	callstack 0
  1410   0015E2                     _lcd_4bit_intialize:
  1411                           	callstack 20
  1412   0015E2                     
  1413                           ;mcc_generated_files/lcd/ecu_lcd.c: 12:     if(((void*)0) == lcd){
  1414   0015E2  501F               	movf	lcd_4bit_intialize@lcd^0,w,c
  1415   0015E4  A4D8               	btfss	status,2,c
  1416   0015E6  EFF7  F00A         	goto	u2711
  1417   0015EA  EFF9  F00A         	goto	u2710
  1418   0015EE                     u2711:
  1419   0015EE  EFFD  F00A         	goto	l5034
  1420   0015F2                     u2710:
  1421   0015F2                     
  1422                           ;mcc_generated_files/lcd/ecu_lcd.c: 13:         ret = 0X00;
  1423   0015F2  0E00               	movlw	0
  1424   0015F4  6E23               	movwf	lcd_4bit_intialize@ret^0,c
  1425                           
  1426                           ;mcc_generated_files/lcd/ecu_lcd.c: 14:     }
  1427   0015F6  EF6A  F00B         	goto	l5070
  1428   0015FA                     l5034:
  1429                           
  1430                           ;mcc_generated_files/lcd/ecu_lcd.c: 16:         ret = gpio_pin_intialize(&(lcd->rs_pin))
      +                          ;
  1431   0015FA  501F               	movf	lcd_4bit_intialize@lcd^0,w,c
  1432   0015FC  0F04               	addlw	4
  1433   0015FE  6E19               	movwf	gpio_pin_intialize@_pin_config^0,c
  1434   001600  EC02  F016         	call	_gpio_pin_intialize	;wreg free
  1435   001604  6E23               	movwf	lcd_4bit_intialize@ret^0,c
  1436                           
  1437                           ;mcc_generated_files/lcd/ecu_lcd.c: 17:         ret = gpio_pin_intialize(&(lcd->en_pin))
      +                          ;
  1438   001606  501F               	movf	lcd_4bit_intialize@lcd^0,w,c
  1439   001608  0F05               	addlw	5
  1440   00160A  6E19               	movwf	gpio_pin_intialize@_pin_config^0,c
  1441   00160C  EC02  F016         	call	_gpio_pin_intialize	;wreg free
  1442   001610  6E23               	movwf	lcd_4bit_intialize@ret^0,c
  1443   001612                     
  1444                           ;mcc_generated_files/lcd/ecu_lcd.c: 18:         for(int pin_counter = 0; pin_counter < 4
      +                           ; pin_counter++){
  1445   001612  0E00               	movlw	0
  1446   001614  6E22               	movwf	(lcd_4bit_intialize@pin_counter+1)^0,c
  1447   001616  0E00               	movlw	0
  1448   001618  6E21               	movwf	lcd_4bit_intialize@pin_counter^0,c
  1449   00161A                     l5042:
  1450   00161A  501F               	movf	lcd_4bit_intialize@lcd^0,w,c
  1451   00161C  2421               	addwf	lcd_4bit_intialize@pin_counter^0,w,c
  1452   00161E  6E19               	movwf	gpio_pin_intialize@_pin_config^0,c
  1453   001620  EC02  F016         	call	_gpio_pin_intialize	;wreg free
  1454   001624                     
  1455                           ;mcc_generated_files/lcd/ecu_lcd.c: 20:         }
  1456   001624  4A21               	infsnz	lcd_4bit_intialize@pin_counter^0,f,c
  1457   001626  2A22               	incf	(lcd_4bit_intialize@pin_counter+1)^0,f,c
  1458   001628  BE22               	btfsc	(lcd_4bit_intialize@pin_counter+1)^0,7,c
  1459   00162A  EF20  F00B         	goto	u2721
  1460   00162E  5022               	movf	(lcd_4bit_intialize@pin_counter+1)^0,w,c
  1461   001630  E109               	bnz	u2720
  1462   001632  0E04               	movlw	4
  1463   001634  5C21               	subwf	lcd_4bit_intialize@pin_counter^0,w,c
  1464   001636  A0D8               	btfss	status,0,c
  1465   001638  EF20  F00B         	goto	u2721
  1466   00163C  EF22  F00B         	goto	u2720
  1467   001640                     u2721:
  1468   001640  EF0D  F00B         	goto	l5042
  1469   001644                     u2720:
  1470   001644                     
  1471                           ;mcc_generated_files/lcd/ecu_lcd.c: 21:         _delay((unsigned long)((20)*(8000000/400
      +                          0.0)));
  1472   001644  0E34               	movlw	52
  1473   001646  6E20               	movwf	??_lcd_4bit_intialize^0,c
  1474   001648  0EF2               	movlw	242
  1475   00164A                     u3427:
  1476   00164A  2EE8               	decfsz	wreg,f,c
  1477   00164C  D7FE               	bra	u3427
  1478   00164E  2E20               	decfsz	??_lcd_4bit_intialize^0,f,c
  1479   001650  D7FC               	bra	u3427
  1480   001652  C01F  F01C         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1481   001656  0E38               	movlw	56
  1482   001658  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1483   00165A  ECEB  F012         	call	_lcd_4bit_send_command	;wreg free
  1484   00165E                     
  1485                           ;mcc_generated_files/lcd/ecu_lcd.c: 23:         _delay((unsigned long)((5)*(8000000/4000
      +                          .0)));
  1486   00165E  0E0D               	movlw	13
  1487   001660  6E20               	movwf	??_lcd_4bit_intialize^0,c
  1488   001662  0EFC               	movlw	252
  1489   001664                     u3437:
  1490   001664  2EE8               	decfsz	wreg,f,c
  1491   001666  D7FE               	bra	u3437
  1492   001668  2E20               	decfsz	??_lcd_4bit_intialize^0,f,c
  1493   00166A  D7FC               	bra	u3437
  1494   00166C  C01F  F01C         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1495   001670  0E38               	movlw	56
  1496   001672  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1497   001674  ECEB  F012         	call	_lcd_4bit_send_command	;wreg free
  1498   001678                     
  1499                           ;mcc_generated_files/lcd/ecu_lcd.c: 25:         _delay((unsigned long)((180)*(8000000/40
      +                          00000.0)));
  1500   001678  0E78               	movlw	120
  1501   00167A                     u3447:
  1502   00167A  2EE8               	decfsz	wreg,f,c
  1503   00167C  D7FE               	bra	u3447
  1504   00167E  C01F  F01C         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1505   001682  0E38               	movlw	56
  1506   001684  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1507   001686  ECEB  F012         	call	_lcd_4bit_send_command	;wreg free
  1508   00168A  C01F  F01C         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1509   00168E  0E01               	movlw	1
  1510   001690  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1511   001692  ECEB  F012         	call	_lcd_4bit_send_command	;wreg free
  1512   001696  C01F  F01C         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1513   00169A  0E02               	movlw	2
  1514   00169C  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1515   00169E  ECEB  F012         	call	_lcd_4bit_send_command	;wreg free
  1516   0016A2  C01F  F01C         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1517   0016A6  0E06               	movlw	6
  1518   0016A8  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1519   0016AA  ECEB  F012         	call	_lcd_4bit_send_command	;wreg free
  1520   0016AE  C01F  F01C         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1521   0016B2  0E0C               	movlw	12
  1522   0016B4  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1523   0016B6  ECEB  F012         	call	_lcd_4bit_send_command	;wreg free
  1524   0016BA  C01F  F01C         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1525   0016BE  0E28               	movlw	40
  1526   0016C0  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1527   0016C2  ECEB  F012         	call	_lcd_4bit_send_command	;wreg free
  1528   0016C6                     
  1529                           ;mcc_generated_files/lcd/ecu_lcd.c: 33:         ret = lcd_4bit_send_command(lcd, 0X80 );
  1530   0016C6  C01F  F01C         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1531   0016CA  0E80               	movlw	128
  1532   0016CC  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  1533   0016CE  ECEB  F012         	call	_lcd_4bit_send_command	;wreg free
  1534   0016D2  6E23               	movwf	lcd_4bit_intialize@ret^0,c
  1535   0016D4                     l5070:
  1536                           
  1537                           ;mcc_generated_files/lcd/ecu_lcd.c: 35:     return ret;
  1538   0016D4  5023               	movf	lcd_4bit_intialize@ret^0,w,c
  1539   0016D6  0012               	return		;funcret
  1540   0016D8                     __end_of_lcd_4bit_intialize:
  1541                           	callstack 0
  1542                           
  1543 ;; *************** function _gpio_pin_intialize *****************
  1544 ;; Defined at:
  1545 ;;		line 119 in file "mcc_generated_files/gpio/hal_gpio.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;  _pin_config     1   24[COMRAM] PTR const struct .
  1548 ;;		 -> my_lcd_4bit$lcd_data(4), my_lcd_4bit(6), 
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;  ret             1    0        unsigned char 
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      unsigned char 
  1553 ;; Registers used:
  1554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1560 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;Total ram usage:        1 bytes
  1565 ;; Hardware stack levels used: 1
  1566 ;; Hardware stack levels required when called: 8
  1567 ;; This function calls:
  1568 ;;		_gpio_pin_direction_intialize
  1569 ;;		_gpio_pin_write_logic
  1570 ;; This function is called by:
  1571 ;;		_lcd_4bit_intialize
  1572 ;;		_lcd_8bit_intialize
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text2
  1577   002C04                     __ptext2:
  1578                           	callstack 0
  1579   002C04                     _gpio_pin_intialize:
  1580                           	callstack 21
  1581   002C04                     
  1582                           ;mcc_generated_files/gpio/hal_gpio.c: 121:     gpio_pin_direction_intialize(_pin_config)
      +                          ;
  1583   002C04  C019  F011         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  1584   002C08  ECD5  F00B         	call	_gpio_pin_direction_intialize	;wreg free
  1585   002C0C                     
  1586                           ;mcc_generated_files/gpio/hal_gpio.c: 122:     gpio_pin_write_logic(_pin_config, GPIO_LO
      +                          W);
  1587   002C0C  C019  F011         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  1588   002C10  0E00               	movlw	0
  1589   002C12  6E12               	movwf	gpio_pin_write_logic@logic^0,c
  1590   002C14  EC6C  F00B         	call	_gpio_pin_write_logic	;wreg free
  1591                           
  1592                           ;mcc_generated_files/gpio/hal_gpio.c: 123:     return ret;
  1593   002C18  0E01               	movlw	1
  1594   002C1A  0012               	return		;funcret
  1595   002C1C                     __end_of_gpio_pin_intialize:
  1596                           	callstack 0
  1597                           
  1598 ;; *************** function _gpio_pin_direction_intialize *****************
  1599 ;; Defined at:
  1600 ;;		line 24 in file "mcc_generated_files/gpio/hal_gpio.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  _pin_config     1   16[COMRAM] PTR const struct .
  1603 ;;		 -> my_lcd_4bit$lcd_data(4), my_lcd_4bit(6), 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  ret             1    0        unsigned char 
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      unsigned char 
  1608 ;; Registers used:
  1609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1615 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;Total ram usage:        6 bytes
  1620 ;; Hardware stack levels used: 1
  1621 ;; Hardware stack levels required when called: 7
  1622 ;; This function calls:
  1623 ;;		Nothing
  1624 ;; This function is called by:
  1625 ;;		_gpio_pin_intialize
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text3
  1630   0017AA                     __ptext3:
  1631                           	callstack 0
  1632   0017AA                     _gpio_pin_direction_intialize:
  1633                           	callstack 21
  1634   0017AA                     
  1635                           ;mcc_generated_files/gpio/hal_gpio.c: 26:     if(_pin_config->direction == GPIO_INPUT){
  1636   0017AA  5011               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1637   0017AC  6ED9               	movwf	fsr2l,c
  1638   0017AE  6ADA               	clrf	fsr2h,c
  1639   0017B0  ACDF               	btfss	indf2,6,c
  1640   0017B2  EFDD  F00B         	goto	u2471
  1641   0017B6  EFDF  F00B         	goto	u2470
  1642   0017BA                     u2471:
  1643   0017BA  EF07  F00C         	goto	l4776
  1644   0017BE                     u2470:
  1645   0017BE                     
  1646                           ;mcc_generated_files/gpio/hal_gpio.c: 27:         (*tris_registers[_pin_config->port] |=
      +                           (1 << _pin_config->pin));
  1647   0017BE  5011               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1648   0017C0  6ED9               	movwf	fsr2l,c
  1649   0017C2  6ADA               	clrf	fsr2h,c
  1650   0017C4  30DF               	rrcf	223,w,c
  1651   0017C6  32E8               	rrcf	wreg,f,c
  1652   0017C8  32E8               	rrcf	wreg,f,c
  1653   0017CA  0B07               	andlw	7
  1654   0017CC  6E12               	movwf	??_gpio_pin_direction_intialize^0,c
  1655   0017CE  0E01               	movlw	1
  1656   0017D0  6E13               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1657   0017D2  2A12               	incf	??_gpio_pin_direction_intialize^0,f,c
  1658   0017D4  EFEE  F00B         	goto	u2484
  1659   0017D8                     u2485:
  1660   0017D8  90D8               	bcf	status,0,c
  1661   0017DA  3613               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1662   0017DC                     u2484:
  1663   0017DC  2E12               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1664   0017DE  EFEC  F00B         	goto	u2485
  1665   0017E2  5011               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1666   0017E4  6ED9               	movwf	fsr2l,c
  1667   0017E6  6ADA               	clrf	fsr2h,c
  1668   0017E8  50DF               	movf	223,w,c
  1669   0017EA  0B07               	andlw	7
  1670   0017EC  0D02               	mullw	2
  1671   0017EE  50F3               	movf	243,w,c
  1672   0017F0  0FCE               	addlw	low _tris_registers
  1673   0017F2  6ED9               	movwf	fsr2l,c
  1674   0017F4  6ADA               	clrf	fsr2h,c
  1675   0017F6  CFDE F014          	movff	postinc2,??_gpio_pin_direction_intialize+2
  1676   0017FA  CFDD F015          	movff	postdec2,??_gpio_pin_direction_intialize+3
  1677   0017FE  C014  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  1678   001802  C015  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  1679   001806  5013               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1680   001808  12DF               	iorwf	indf2,f,c
  1681                           
  1682                           ;mcc_generated_files/gpio/hal_gpio.c: 28:     }
  1683   00180A  EF3C  F00C         	goto	l1252
  1684   00180E                     l4776:
  1685   00180E  5011               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1686   001810  6ED9               	movwf	fsr2l,c
  1687   001812  6ADA               	clrf	fsr2h,c
  1688   001814  BCDF               	btfsc	indf2,6,c
  1689   001816  EF0F  F00C         	goto	u2491
  1690   00181A  EF11  F00C         	goto	u2490
  1691   00181E                     u2491:
  1692   00181E  EF3C  F00C         	goto	l4780
  1693   001822                     u2490:
  1694   001822                     
  1695                           ;mcc_generated_files/gpio/hal_gpio.c: 30:         (*tris_registers[_pin_config->port] &=
      +                           ~(1 << _pin_config->pin));
  1696   001822  5011               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1697   001824  6ED9               	movwf	fsr2l,c
  1698   001826  6ADA               	clrf	fsr2h,c
  1699   001828  30DF               	rrcf	223,w,c
  1700   00182A  32E8               	rrcf	wreg,f,c
  1701   00182C  32E8               	rrcf	wreg,f,c
  1702   00182E  0B07               	andlw	7
  1703   001830  6E12               	movwf	??_gpio_pin_direction_intialize^0,c
  1704   001832  0E01               	movlw	1
  1705   001834  6E13               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1706   001836  2A12               	incf	??_gpio_pin_direction_intialize^0,f,c
  1707   001838  EF20  F00C         	goto	u2504
  1708   00183C                     u2505:
  1709   00183C  90D8               	bcf	status,0,c
  1710   00183E  3613               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1711   001840                     u2504:
  1712   001840  2E12               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1713   001842  EF1E  F00C         	goto	u2505
  1714   001846  5013               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1715   001848  0AFF               	xorlw	255
  1716   00184A  6E14               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1717   00184C  5011               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1718   00184E  6ED9               	movwf	fsr2l,c
  1719   001850  6ADA               	clrf	fsr2h,c
  1720   001852  50DF               	movf	223,w,c
  1721   001854  0B07               	andlw	7
  1722   001856  0D02               	mullw	2
  1723   001858  50F3               	movf	243,w,c
  1724   00185A  0FCE               	addlw	low _tris_registers
  1725   00185C  6ED9               	movwf	fsr2l,c
  1726   00185E  6ADA               	clrf	fsr2h,c
  1727   001860  CFDE F015          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1728   001864  CFDD F016          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1729   001868  C015  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1730   00186C  C016  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1731   001870  5014               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1732   001872  16DF               	andwf	indf2,f,c
  1733                           
  1734                           ;mcc_generated_files/gpio/hal_gpio.c: 31:     }
  1735   001874  EF3C  F00C         	goto	l1252
  1736   001878                     l4780:
  1737   001878                     l1252:
  1738   001878  0012               	return		;funcret
  1739   00187A                     __end_of_gpio_pin_direction_intialize:
  1740                           	callstack 0
  1741                           
  1742 ;; *************** function _SYSTEM_Initialize *****************
  1743 ;; Defined at:
  1744 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;		None
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;		None
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;Total ram usage:        0 bytes
  1763 ;; Hardware stack levels used: 1
  1764 ;; Hardware stack levels required when called: 9
  1765 ;; This function calls:
  1766 ;;		_CLOCK_Initialize
  1767 ;;		_EUSART_Initialize
  1768 ;;		_EUSART_ReceiveEnable
  1769 ;;		_I2C_Initialize
  1770 ;;		_INTERRUPT_Initialize
  1771 ;;		_NVM_Initialize
  1772 ;;		_PIN_MANAGER_Initialize
  1773 ;; This function is called by:
  1774 ;;		_main
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           	psect	text4
  1779   002B8E                     __ptext4:
  1780                           	callstack 0
  1781   002B8E                     _SYSTEM_Initialize:
  1782                           	callstack 21
  1783   002B8E                     
  1784                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
  1785   002B8E  ECCA  F016         	call	_CLOCK_Initialize	;wreg free
  1786                           
  1787                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
  1788   002B92  ECCA  F014         	call	_PIN_MANAGER_Initialize	;wreg free
  1789   002B96                     
  1790                           ;mcc_generated_files/system/src/system.c: 43:     EUSART_Initialize();
  1791   002B96  EC60  F014         	call	_EUSART_Initialize	;wreg free
  1792   002B9A                     
  1793                           ;mcc_generated_files/system/src/system.c: 44:     I2C_Initialize();
  1794   002B9A  EC3E  F016         	call	_I2C_Initialize	;wreg free
  1795   002B9E                     
  1796                           ;mcc_generated_files/system/src/system.c: 45:     NVM_Initialize();
  1797   002B9E  EC00  F017         	call	_NVM_Initialize	;wreg free
  1798   002BA2                     
  1799                           ;mcc_generated_files/system/src/system.c: 46:     TRISDbits.RD0 = 0;
  1800   002BA2  9095               	bcf	149,0,c	;volatile
  1801   002BA4                     
  1802                           ;mcc_generated_files/system/src/system.c: 47:     EUSART_ReceiveEnable();
  1803   002BA4  EC0E  F017         	call	_EUSART_ReceiveEnable	;wreg free
  1804                           
  1805                           ;mcc_generated_files/system/src/system.c: 48:     INTERRUPT_Initialize();
  1806   002BA8  EC7C  F014         	call	_INTERRUPT_Initialize	;wreg free
  1807   002BAC  0012               	return		;funcret
  1808   002BAE                     __end_of_SYSTEM_Initialize:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function _PIN_MANAGER_Initialize *****************
  1812 ;; Defined at:
  1813 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 7
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_SYSTEM_Initialize
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text5
  1842   002994                     __ptext5:
  1843                           	callstack 0
  1844   002994                     _PIN_MANAGER_Initialize:
  1845                           	callstack 22
  1846   002994                     
  1847                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  1848   002994  0E00               	movlw	0
  1849   002996  6E89               	movwf	137,c	;volatile
  1850                           
  1851                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  1852   002998  0E00               	movlw	0
  1853   00299A  6E8A               	movwf	138,c	;volatile
  1854                           
  1855                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  1856   00299C  0E00               	movlw	0
  1857   00299E  6E8B               	movwf	139,c	;volatile
  1858                           
  1859                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
  1860   0029A0  0E00               	movlw	0
  1861   0029A2  6E8C               	movwf	140,c	;volatile
  1862                           
  1863                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
  1864   0029A4  0E00               	movlw	0
  1865   0029A6  6E8D               	movwf	141,c	;volatile
  1866   0029A8                     
  1867                           ;mcc_generated_files/system/src/pins.c: 52:     TRISA = 0xFF;
  1868   0029A8  6892               	setf	146,c	;volatile
  1869   0029AA                     
  1870                           ;mcc_generated_files/system/src/pins.c: 53:     TRISB = 0xFF;
  1871   0029AA  6893               	setf	147,c	;volatile
  1872                           
  1873                           ;mcc_generated_files/system/src/pins.c: 54:     TRISC = 0xBF;
  1874   0029AC  0EBF               	movlw	191
  1875   0029AE  6E94               	movwf	148,c	;volatile
  1876   0029B0                     
  1877                           ;mcc_generated_files/system/src/pins.c: 55:     TRISD = 0xFF;
  1878   0029B0  6895               	setf	149,c	;volatile
  1879                           
  1880                           ;mcc_generated_files/system/src/pins.c: 56:     TRISE = 0x7;
  1881   0029B2  0E07               	movlw	7
  1882   0029B4  6E96               	movwf	150,c	;volatile
  1883                           
  1884                           ;mcc_generated_files/system/src/pins.c: 61:     ANSELH = 0x1F;
  1885   0029B6  0E1F               	movlw	31
  1886   0029B8  6E7F               	movwf	127,c	;volatile
  1887   0029BA                     
  1888                           ;mcc_generated_files/system/src/pins.c: 66:     WPUB = 0xFF;
  1889   0029BA  687C               	setf	124,c	;volatile
  1890                           
  1891                           ;mcc_generated_files/system/src/pins.c: 90:     IOCB = 0x0;
  1892   0029BC  0E00               	movlw	0
  1893   0029BE  6E7D               	movwf	125,c	;volatile
  1894   0029C0                     
  1895                           ;mcc_generated_files/system/src/pins.c: 94:     INTCONbits.RBIE = 1;
  1896   0029C0  86F2               	bsf	242,3,c	;volatile
  1897   0029C2  0012               	return		;funcret
  1898   0029C4                     __end_of_PIN_MANAGER_Initialize:
  1899                           	callstack 0
  1900                           
  1901 ;; *************** function _NVM_Initialize *****************
  1902 ;; Defined at:
  1903 ;;		line 42 in file "mcc_generated_files/nvm/src/nvm.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 8
  1924 ;; This function calls:
  1925 ;;		_NVM_StatusClear
  1926 ;; This function is called by:
  1927 ;;		_SYSTEM_Initialize
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text6
  1932   002E00                     __ptext6:
  1933                           	callstack 0
  1934   002E00                     _NVM_Initialize:
  1935                           	callstack 21
  1936   002E00                     
  1937                           ;mcc_generated_files/nvm/src/nvm.c: 44:     NVM_StatusClear();
  1938   002E00  EC0C  F017         	call	_NVM_StatusClear	;wreg free
  1939   002E04  0012               	return		;funcret
  1940   002E06                     __end_of_NVM_Initialize:
  1941                           	callstack 0
  1942                           
  1943 ;; *************** function _NVM_StatusClear *****************
  1944 ;; Defined at:
  1945 ;;		line 64 in file "mcc_generated_files/nvm/src/nvm.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		None
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;Total ram usage:        0 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; Hardware stack levels required when called: 7
  1966 ;; This function calls:
  1967 ;;		Nothing
  1968 ;; This function is called by:
  1969 ;;		_NVM_Initialize
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text7
  1974   002E18                     __ptext7:
  1975                           	callstack 0
  1976   002E18                     _NVM_StatusClear:
  1977                           	callstack 21
  1978   002E18                     
  1979                           ;mcc_generated_files/nvm/src/nvm.c: 66:     EECON1bits.WRERR = 0;
  1980   002E18  96A6               	bcf	166,3,c	;volsfr
  1981   002E1A  0012               	return		;funcret
  1982   002E1C                     __end_of_NVM_StatusClear:
  1983                           	callstack 0
  1984                           
  1985 ;; *************** function _INTERRUPT_Initialize *****************
  1986 ;; Defined at:
  1987 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2, status,0, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;Total ram usage:        0 bytes
  2006 ;; Hardware stack levels used: 1
  2007 ;; Hardware stack levels required when called: 8
  2008 ;; This function calls:
  2009 ;;		_INT0_SetInterruptHandler
  2010 ;;		_INT1_SetInterruptHandler
  2011 ;;		_INT2_SetInterruptHandler
  2012 ;; This function is called by:
  2013 ;;		_SYSTEM_Initialize
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text8
  2018   0028F8                     __ptext8:
  2019                           	callstack 0
  2020   0028F8                     _INTERRUPT_Initialize:
  2021                           	callstack 21
  2022   0028F8                     
  2023                           ;mcc_generated_files/system/src/interrupt.c: 45:     RCONbits.IPEN = 1;
  2024   0028F8  8ED0               	bsf	208,7,c	;volatile
  2025                           
  2026                           ;mcc_generated_files/system/src/interrupt.c: 53:     (INTCONbits.INT0IF = 0);
  2027   0028FA  92F2               	bcf	242,1,c	;volatile
  2028                           
  2029                           ;mcc_generated_files/system/src/interrupt.c: 54:     (INTCON2bits.INTEDG0 = 1);
  2030   0028FC  8CF1               	bsf	241,6,c	;volatile
  2031   0028FE                     
  2032                           ;mcc_generated_files/system/src/interrupt.c: 56:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
  2033   0028FE  0E00               	movlw	0
  2034   002900  6E11               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  2035   002902  0E00               	movlw	0
  2036   002904  6E12               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  2037   002906  ECC5  F016         	call	_INT0_SetInterruptHandler	;wreg free
  2038   00290A                     
  2039                           ;mcc_generated_files/system/src/interrupt.c: 61:     (INTCON3bits.INT1IF = 0);
  2040   00290A  90F0               	bcf	240,0,c	;volatile
  2041   00290C                     
  2042                           ;mcc_generated_files/system/src/interrupt.c: 62:     (INTCON2bits.INTEDG1 = 1);
  2043   00290C  8AF1               	bsf	241,5,c	;volatile
  2044                           
  2045                           ;mcc_generated_files/system/src/interrupt.c: 64:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
  2046   00290E  0E00               	movlw	0
  2047   002910  6E11               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  2048   002912  0E00               	movlw	0
  2049   002914  6E12               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  2050   002916  ECC0  F016         	call	_INT1_SetInterruptHandler	;wreg free
  2051   00291A                     
  2052                           ;mcc_generated_files/system/src/interrupt.c: 69:     (INTCON3bits.INT2IF = 0);
  2053   00291A  92F0               	bcf	240,1,c	;volatile
  2054   00291C                     
  2055                           ;mcc_generated_files/system/src/interrupt.c: 70:     (INTCON2bits.INTEDG2 = 1);
  2056   00291C  88F1               	bsf	241,4,c	;volatile
  2057                           
  2058                           ;mcc_generated_files/system/src/interrupt.c: 72:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
  2059   00291E  0E00               	movlw	0
  2060   002920  6E11               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
  2061   002922  0E00               	movlw	0
  2062   002924  6E12               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
  2063   002926  ECBB  F016         	call	_INT2_SetInterruptHandler	;wreg free
  2064   00292A  0012               	return		;funcret
  2065   00292C                     __end_of_INTERRUPT_Initialize:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function _INT2_SetInterruptHandler *****************
  2069 ;; Defined at:
  2070 ;;		line 165 in file "mcc_generated_files/system/src/interrupt.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  InterruptHan    2   16[COMRAM] PTR FTN()void 
  2073 ;;		 -> INT2_DefaultInterruptHandler(1), 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;Total ram usage:        2 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; Hardware stack levels required when called: 7
  2092 ;; This function calls:
  2093 ;;		Nothing
  2094 ;; This function is called by:
  2095 ;;		_INTERRUPT_Initialize
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text9
  2100   002D76                     __ptext9:
  2101                           	callstack 0
  2102   002D76                     _INT2_SetInterruptHandler:
  2103                           	callstack 21
  2104   002D76                     
  2105                           ;mcc_generated_files/system/src/interrupt.c: 166:     INT2_InterruptHandler = InterruptH
      +                          andler;
  2106   002D76  C011  F047         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  2107   002D7A  C012  F048         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  2108   002D7E  0012               	return		;funcret
  2109   002D80                     __end_of_INT2_SetInterruptHandler:
  2110                           	callstack 0
  2111                           
  2112 ;; *************** function _INT1_SetInterruptHandler *****************
  2113 ;; Defined at:
  2114 ;;		line 139 in file "mcc_generated_files/system/src/interrupt.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  InterruptHan    2   16[COMRAM] PTR FTN()void 
  2117 ;;		 -> INT1_DefaultInterruptHandler(1), 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;		None
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, status,2, status,0
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;Total ram usage:        2 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 7
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_INTERRUPT_Initialize
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text10
  2144   002D80                     __ptext10:
  2145                           	callstack 0
  2146   002D80                     _INT1_SetInterruptHandler:
  2147                           	callstack 21
  2148   002D80                     
  2149                           ;mcc_generated_files/system/src/interrupt.c: 140:     INT1_InterruptHandler = InterruptH
      +                          andler;
  2150   002D80  C011  F049         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  2151   002D84  C012  F04A         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  2152   002D88  0012               	return		;funcret
  2153   002D8A                     __end_of_INT1_SetInterruptHandler:
  2154                           	callstack 0
  2155                           
  2156 ;; *************** function _INT0_SetInterruptHandler *****************
  2157 ;; Defined at:
  2158 ;;		line 113 in file "mcc_generated_files/system/src/interrupt.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  InterruptHan    2   16[COMRAM] PTR FTN()void 
  2161 ;;		 -> INT0_DefaultInterruptHandler(1), 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;Total ram usage:        2 bytes
  2178 ;; Hardware stack levels used: 1
  2179 ;; Hardware stack levels required when called: 7
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_INTERRUPT_Initialize
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text11
  2188   002D8A                     __ptext11:
  2189                           	callstack 0
  2190   002D8A                     _INT0_SetInterruptHandler:
  2191                           	callstack 21
  2192   002D8A                     
  2193                           ;mcc_generated_files/system/src/interrupt.c: 114:     INT0_InterruptHandler = InterruptH
      +                          andler;
  2194   002D8A  C011  F04B         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  2195   002D8E  C012  F04C         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  2196   002D92  0012               	return		;funcret
  2197   002D94                     __end_of_INT0_SetInterruptHandler:
  2198                           	callstack 0
  2199                           
  2200 ;; *************** function _I2C_Initialize *****************
  2201 ;; Defined at:
  2202 ;;		line 167 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;		None
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;Total ram usage:        0 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; Hardware stack levels required when called: 7
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_SYSTEM_Initialize
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text12
  2231   002C7C                     __ptext12:
  2232                           	callstack 0
  2233   002C7C                     _I2C_Initialize:
  2234                           	callstack 22
  2235   002C7C                     
  2236                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 169:     SSPSTAT = 0x80;
  2237   002C7C  0E80               	movlw	128
  2238   002C7E  6EC7               	movwf	199,c	;volatile
  2239                           
  2240                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 170:     SSPCON1 = 0x08;
  2241   002C80  0E08               	movlw	8
  2242   002C82  6EC6               	movwf	198,c	;volatile
  2243                           
  2244                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 171:     SSPCON2 = 0x00;
  2245   002C84  0E00               	movlw	0
  2246   002C86  6EC5               	movwf	197,c	;volatile
  2247                           
  2248                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 172:     SSPADD = 0x27;
  2249   002C88  0E27               	movlw	39
  2250   002C8A  6EC8               	movwf	200,c	;volatile
  2251   002C8C                     
  2252                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  2253   002C8C  9AC6               	bcf	198,5,c	;volatile
  2254   002C8E  0012               	return		;funcret
  2255   002C90                     __end_of_I2C_Initialize:
  2256                           	callstack 0
  2257                           
  2258 ;; *************** function _EUSART_ReceiveEnable *****************
  2259 ;; Defined at:
  2260 ;;		line 146 in file "mcc_generated_files/uart/src/eusart.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		None
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;Total ram usage:        0 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 7
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_SYSTEM_Initialize
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text13
  2289   002E1C                     __ptext13:
  2290                           	callstack 0
  2291   002E1C                     _EUSART_ReceiveEnable:
  2292                           	callstack 22
  2293   002E1C                     
  2294                           ;mcc_generated_files/uart/src/eusart.c: 148:     RCSTAbits.CREN = 1;
  2295   002E1C  88AB               	bsf	171,4,c	;volatile
  2296   002E1E  0012               	return		;funcret
  2297   002E20                     __end_of_EUSART_ReceiveEnable:
  2298                           	callstack 0
  2299                           
  2300 ;; *************** function _EUSART_Initialize *****************
  2301 ;; Defined at:
  2302 ;;		line 94 in file "mcc_generated_files/uart/src/eusart.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;		None
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0, cstack
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;Total ram usage:        0 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; Hardware stack levels required when called: 8
  2323 ;; This function calls:
  2324 ;;		_EUSART_FramingErrorCallbackRegister
  2325 ;;		_EUSART_OverrunErrorCallbackRegister
  2326 ;; This function is called by:
  2327 ;;		_SYSTEM_Initialize
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text14
  2332   0028C0                     __ptext14:
  2333                           	callstack 0
  2334   0028C0                     _EUSART_Initialize:
  2335                           	callstack 21
  2336   0028C0                     
  2337                           ;mcc_generated_files/uart/src/eusart.c: 99:     BAUDCON = 0x48;
  2338   0028C0  0E48               	movlw	72
  2339   0028C2  6EB8               	movwf	184,c	;volatile
  2340                           
  2341                           ;mcc_generated_files/uart/src/eusart.c: 101:     RCSTA = 0x90;
  2342   0028C4  0E90               	movlw	144
  2343   0028C6  6EAB               	movwf	171,c	;volatile
  2344                           
  2345                           ;mcc_generated_files/uart/src/eusart.c: 103:     TXSTA = 0x26;
  2346   0028C8  0E26               	movlw	38
  2347   0028CA  6EAC               	movwf	172,c	;volatile
  2348                           
  2349                           ;mcc_generated_files/uart/src/eusart.c: 105:     SPBRG = 0xCF;
  2350   0028CC  0ECF               	movlw	207
  2351   0028CE  6EAF               	movwf	175,c	;volatile
  2352                           
  2353                           ;mcc_generated_files/uart/src/eusart.c: 107:     SPBRGH = 0x0;
  2354   0028D0  0E00               	movlw	0
  2355   0028D2  6EB0               	movwf	176,c	;volatile
  2356   0028D4                     
  2357                           ;mcc_generated_files/uart/src/eusart.c: 109:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
  2358   0028D4  0E00               	movlw	0
  2359   0028D6  6E11               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler^0,c
  2360   0028D8  0E00               	movlw	0
  2361   0028DA  6E12               	movwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^0,c
  2362   0028DC  ECF4  F015         	call	_EUSART_FramingErrorCallbackRegister	;wreg free
  2363   0028E0                     
  2364                           ;mcc_generated_files/uart/src/eusart.c: 110:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
  2365   0028E0  0E00               	movlw	0
  2366   0028E2  6E11               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler^0,c
  2367   0028E4  0E00               	movlw	0
  2368   0028E6  6E12               	movwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^0,c
  2369   0028E8  ECE6  F015         	call	_EUSART_OverrunErrorCallbackRegister	;wreg free
  2370                           
  2371                           ;mcc_generated_files/uart/src/eusart.c: 111:     eusartRxLastError.status = 0;
  2372   0028EC  0E00               	movlw	0
  2373   0028EE  0100               	movlb	0	; () banked
  2374   0028F0  6FB1               	movwf	(_eusartRxLastError+1)& (0+255),b	;volatile
  2375   0028F2  0E00               	movlw	0
  2376   0028F4  6FB0               	movwf	_eusartRxLastError& (0+255),b	;volatile
  2377   0028F6                     
  2378                           ; BSR set to: 0
  2379   0028F6  0012               	return		;funcret
  2380   0028F8                     __end_of_EUSART_Initialize:
  2381                           	callstack 0
  2382                           
  2383 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
  2384 ;; Defined at:
  2385 ;;		line 278 in file "mcc_generated_files/uart/src/eusart.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  callbackHand    2   16[COMRAM] PTR FTN()void 
  2388 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;		None
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2400 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2403 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2404 ;;Total ram usage:        2 bytes
  2405 ;; Hardware stack levels used: 1
  2406 ;; Hardware stack levels required when called: 7
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_EUSART_Initialize
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text15
  2415   002BCC                     __ptext15:
  2416                           	callstack 0
  2417   002BCC                     _EUSART_OverrunErrorCallbackRegister:
  2418                           	callstack 21
  2419   002BCC                     
  2420                           ;mcc_generated_files/uart/src/eusart.c: 278: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 279: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 280:     if(((void*)0) != callbackHandler)
  2421   002BCC  5011               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^0,w,c
  2422   002BCE  1012               	iorwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^0,w,c
  2423   002BD0  B4D8               	btfsc	status,2,c
  2424   002BD2  EFED  F015         	goto	u2391
  2425   002BD6  EFEF  F015         	goto	u2390
  2426   002BDA                     u2391:
  2427   002BDA  EFF3  F015         	goto	l911
  2428   002BDE                     u2390:
  2429   002BDE                     
  2430                           ;mcc_generated_files/uart/src/eusart.c: 281:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 282:         EUSART_OverrunErrorHandler = callbackHandler;
  2431   002BDE  C011  F0AE         	movff	EUSART_OverrunErrorCallbackRegister@callbackHandler,_EUSART_OverrunErrorHandler
  2432   002BE2  C012  F0AF         	movff	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,_EUSART_OverrunErrorHandler
      +                          +1
  2433   002BE6                     l911:
  2434   002BE6  0012               	return		;funcret
  2435   002BE8                     __end_of_EUSART_OverrunErrorCallbackRegister:
  2436                           	callstack 0
  2437                           
  2438 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
  2439 ;; Defined at:
  2440 ;;		line 270 in file "mcc_generated_files/uart/src/eusart.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  callbackHand    2   16[COMRAM] PTR FTN()void 
  2443 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2455 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;Total ram usage:        2 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; Hardware stack levels required when called: 7
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_EUSART_Initialize
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text16
  2470   002BE8                     __ptext16:
  2471                           	callstack 0
  2472   002BE8                     _EUSART_FramingErrorCallbackRegister:
  2473                           	callstack 21
  2474   002BE8                     
  2475                           ;mcc_generated_files/uart/src/eusart.c: 270: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 271: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 272:     if(((void*)0) != callbackHandler)
  2476   002BE8  5011               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^0,w,c
  2477   002BEA  1012               	iorwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^0,w,c
  2478   002BEC  B4D8               	btfsc	status,2,c
  2479   002BEE  EFFB  F015         	goto	u2381
  2480   002BF2  EFFD  F015         	goto	u2380
  2481   002BF6                     u2381:
  2482   002BF6  EF01  F016         	goto	l907
  2483   002BFA                     u2380:
  2484   002BFA                     
  2485                           ;mcc_generated_files/uart/src/eusart.c: 273:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 274:         EUSART_FramingErrorHandler = callbackHandler;
  2486   002BFA  C011  F045         	movff	EUSART_FramingErrorCallbackRegister@callbackHandler,_EUSART_FramingErrorHandler
  2487   002BFE  C012  F046         	movff	EUSART_FramingErrorCallbackRegister@callbackHandler+1,_EUSART_FramingErrorHandler
      +                          +1
  2488   002C02                     l907:
  2489   002C02  0012               	return		;funcret
  2490   002C04                     __end_of_EUSART_FramingErrorCallbackRegister:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function _CLOCK_Initialize *****************
  2494 ;; Defined at:
  2495 ;;		line 37 in file "mcc_generated_files/system/src/clock.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;Total ram usage:        0 bytes
  2514 ;; Hardware stack levels used: 1
  2515 ;; Hardware stack levels required when called: 7
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_SYSTEM_Initialize
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text17
  2524   002D94                     __ptext17:
  2525                           	callstack 0
  2526   002D94                     _CLOCK_Initialize:
  2527                           	callstack 22
  2528   002D94                     
  2529                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = 0x30;
  2530   002D94  0E30               	movlw	48
  2531   002D96  6ED3               	movwf	211,c	;volatile
  2532                           
  2533                           ;mcc_generated_files/system/src/clock.c: 43:     OSCTUNE = 0x0;
  2534   002D98  0E00               	movlw	0
  2535   002D9A  6E9B               	movwf	155,c	;volatile
  2536   002D9C  0012               	return		;funcret
  2537   002D9E                     __end_of_CLOCK_Initialize:
  2538                           	callstack 0
  2539                           
  2540 ;; *************** function _Read_Temperature *****************
  2541 ;; Defined at:
  2542 ;;		line 10 in file "mcc_generated_files/TC74/TC74.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  address         1    wreg     unsigned char 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  address         1   29[COMRAM] unsigned char 
  2547 ;;  temp            1   30[COMRAM] unsigned char 
  2548 ;;  temp_data       1   28[COMRAM] unsigned char 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      unsigned char 
  2551 ;; Registers used:
  2552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;Total ram usage:        3 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; Hardware stack levels required when called: 11
  2565 ;; This function calls:
  2566 ;;		_I2C_Read1ByteRegister
  2567 ;; This function is called by:
  2568 ;;		_main
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           	psect	text18
  2573   002C1C                     __ptext18:
  2574                           	callstack 0
  2575   002C1C                     _Read_Temperature:
  2576                           	callstack 19
  2577                           
  2578                           ;incstack = 0
  2579                           ;Read_Temperature@address stored from wreg
  2580   002C1C  6E1E               	movwf	Read_Temperature@address^0,c
  2581   002C1E                     
  2582                           ;mcc_generated_files/TC74/TC74.c: 12:     uint8_t temp_data = 0;
  2583   002C1E  0E00               	movlw	0
  2584   002C20  6E1D               	movwf	Read_Temperature@temp_data^0,c
  2585   002C22                     
  2586                           ;mcc_generated_files/TC74/TC74.c: 13:     temp = I2C_Read1ByteRegister(address, 0x00);
  2587   002C22  0E00               	movlw	0
  2588   002C24  6E1A               	movwf	I2C_Read1ByteRegister@reg^0,c
  2589   002C26  501E               	movf	Read_Temperature@address^0,w,c
  2590   002C28  ECDE  F010         	call	_I2C_Read1ByteRegister
  2591   002C2C  6E1F               	movwf	Read_Temperature@temp^0,c
  2592   002C2E  50C9               	movf	201,w,c	;volatile
  2593   002C30                     
  2594                           ;mcc_generated_files/TC74/TC74.c: 15:     return temp;
  2595   002C30  501F               	movf	Read_Temperature@temp^0,w,c
  2596   002C32  0012               	return		;funcret
  2597   002C34                     __end_of_Read_Temperature:
  2598                           	callstack 0
  2599                           
  2600 ;; *************** function _LCD_Print_Time *****************
  2601 ;; Defined at:
  2602 ;;		line 218 in file "main.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  DS1307_obj      1   64[COMRAM] PTR const struct .
  2605 ;;		 -> DS1307_obj(6), 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2617 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;Total ram usage:        1 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 13
  2624 ;; This function calls:
  2625 ;;		_convert_byte_to_str
  2626 ;;		_lcd_4bit_send_char_data_pos
  2627 ;;		_lcd_4bit_send_string_pos
  2628 ;; This function is called by:
  2629 ;;		_main
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text19
  2634   001C2A                     __ptext19:
  2635                           	callstack 0
  2636   001C2A                     _LCD_Print_Time:
  2637                           	callstack 17
  2638   001C2A                     
  2639                           ;main.c: 219:     convert_byte_to_str(dummy_str, DS1307_obj->_Hour);
  2640   001C2A  0E55               	movlw	low _dummy_str
  2641   001C2C  6E3F               	movwf	convert_byte_to_str@str^0,c
  2642   001C2E  5041               	movf	LCD_Print_Time@DS1307_obj^0,w,c
  2643   001C30  6ED9               	movwf	fsr2l,c
  2644   001C32  6ADA               	clrf	fsr2h,c
  2645   001C34  50DF               	movf	indf2,w,c
  2646   001C36  6E40               	movwf	convert_byte_to_str@val^0,c
  2647   001C38  EC10  F015         	call	_convert_byte_to_str	;wreg free
  2648   001C3C                     
  2649                           ;main.c: 220:     ret = lcd_4bit_send_string_pos(&my_lcd_4bit, dummy_str, 3, 10);
  2650   001C3C  0E58               	movlw	low _my_lcd_4bit
  2651   001C3E  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2652   001C40  0E55               	movlw	low _dummy_str
  2653   001C42  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2654   001C44  6A27               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  2655   001C46  0E03               	movlw	3
  2656   001C48  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  2657   001C4A  0E0A               	movlw	10
  2658   001C4C  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  2659   001C4E  EC16  F010         	call	_lcd_4bit_send_string_pos	;wreg free
  2660   001C52  6E57               	movwf	_ret^0,c
  2661   001C54                     
  2662                           ;main.c: 221:     ret = lcd_4bit_send_char_data_pos(&my_lcd_4bit, ':', 3, 12);
  2663   001C54  0E58               	movlw	low _my_lcd_4bit
  2664   001C56  6E25               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  2665   001C58  0E3A               	movlw	58
  2666   001C5A  6E26               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  2667   001C5C  0E03               	movlw	3
  2668   001C5E  6E27               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  2669   001C60  0E0C               	movlw	12
  2670   001C62  6E28               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  2671   001C64  EC42  F014         	call	_lcd_4bit_send_char_data_pos	;wreg free
  2672   001C68  6E57               	movwf	_ret^0,c
  2673   001C6A                     
  2674                           ;main.c: 222:     convert_byte_to_str(dummy_str, DS1307_obj->_Minute);
  2675   001C6A  0E55               	movlw	low _dummy_str
  2676   001C6C  6E3F               	movwf	convert_byte_to_str@str^0,c
  2677   001C6E  5041               	movf	LCD_Print_Time@DS1307_obj^0,w,c
  2678   001C70  6ED9               	movwf	fsr2l,c
  2679   001C72  6ADA               	clrf	fsr2h,c
  2680   001C74  0E01               	movlw	1
  2681   001C76  26D9               	addwf	fsr2l,f,c
  2682   001C78  50DF               	movf	indf2,w,c
  2683   001C7A  6E40               	movwf	convert_byte_to_str@val^0,c
  2684   001C7C  EC10  F015         	call	_convert_byte_to_str	;wreg free
  2685   001C80                     
  2686                           ;main.c: 223:     ret = lcd_4bit_send_string_pos(&my_lcd_4bit, dummy_str, 3, 13);
  2687   001C80  0E58               	movlw	low _my_lcd_4bit
  2688   001C82  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2689   001C84  0E55               	movlw	low _dummy_str
  2690   001C86  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2691   001C88  6A27               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  2692   001C8A  0E03               	movlw	3
  2693   001C8C  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  2694   001C8E  0E0D               	movlw	13
  2695   001C90  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  2696   001C92  EC16  F010         	call	_lcd_4bit_send_string_pos	;wreg free
  2697   001C96  6E57               	movwf	_ret^0,c
  2698                           
  2699                           ;main.c: 224:     ret = lcd_4bit_send_char_data_pos(&my_lcd_4bit, ':', 3, 15);
  2700   001C98  0E58               	movlw	low _my_lcd_4bit
  2701   001C9A  6E25               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  2702   001C9C  0E3A               	movlw	58
  2703   001C9E  6E26               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  2704   001CA0  0E03               	movlw	3
  2705   001CA2  6E27               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  2706   001CA4  0E0F               	movlw	15
  2707   001CA6  6E28               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  2708   001CA8  EC42  F014         	call	_lcd_4bit_send_char_data_pos	;wreg free
  2709   001CAC  6E57               	movwf	_ret^0,c
  2710   001CAE                     
  2711                           ;main.c: 225:     convert_byte_to_str(dummy_str, DS1307_obj->_Second);
  2712   001CAE  0E55               	movlw	low _dummy_str
  2713   001CB0  6E3F               	movwf	convert_byte_to_str@str^0,c
  2714   001CB2  5041               	movf	LCD_Print_Time@DS1307_obj^0,w,c
  2715   001CB4  6ED9               	movwf	fsr2l,c
  2716   001CB6  6ADA               	clrf	fsr2h,c
  2717   001CB8  0E02               	movlw	2
  2718   001CBA  26D9               	addwf	fsr2l,f,c
  2719   001CBC  50DF               	movf	indf2,w,c
  2720   001CBE  6E40               	movwf	convert_byte_to_str@val^0,c
  2721   001CC0  EC10  F015         	call	_convert_byte_to_str	;wreg free
  2722   001CC4                     
  2723                           ;main.c: 226:     ret = lcd_4bit_send_string_pos(&my_lcd_4bit, dummy_str, 3, 16);
  2724   001CC4  0E58               	movlw	low _my_lcd_4bit
  2725   001CC6  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2726   001CC8  0E55               	movlw	low _dummy_str
  2727   001CCA  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2728   001CCC  6A27               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  2729   001CCE  0E03               	movlw	3
  2730   001CD0  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  2731   001CD2  0E10               	movlw	16
  2732   001CD4  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  2733   001CD6  EC16  F010         	call	_lcd_4bit_send_string_pos	;wreg free
  2734   001CDA  6E57               	movwf	_ret^0,c
  2735   001CDC  0012               	return		;funcret
  2736   001CDE                     __end_of_LCD_Print_Time:
  2737                           	callstack 0
  2738                           
  2739 ;; *************** function _LCD_Print_Temperature *****************
  2740 ;; Defined at:
  2741 ;;		line 200 in file "main.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;  temp            1    wreg     unsigned char 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  temp            1   64[COMRAM] unsigned char 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;Total ram usage:        1 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; Hardware stack levels required when called: 13
  2762 ;; This function calls:
  2763 ;;		_convert_byte_to_str
  2764 ;;		_lcd_4bit_send_string_pos
  2765 ;; This function is called by:
  2766 ;;		_main
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text20
  2771   00273A                     __ptext20:
  2772                           	callstack 0
  2773   00273A                     _LCD_Print_Temperature:
  2774                           	callstack 17
  2775                           
  2776                           ;incstack = 0
  2777                           ;LCD_Print_Temperature@temp stored from wreg
  2778   00273A  6E41               	movwf	LCD_Print_Temperature@temp^0,c
  2779   00273C                     
  2780                           ;main.c: 201:     convert_byte_to_str(hex_str, temp);
  2781   00273C  0EB8               	movlw	low _hex_str
  2782   00273E  6E3F               	movwf	convert_byte_to_str@str^0,c
  2783   002740  C041  F040         	movff	LCD_Print_Temperature@temp,convert_byte_to_str@val
  2784   002744  EC10  F015         	call	_convert_byte_to_str	;wreg free
  2785   002748                     
  2786                           ;main.c: 202:     ret = lcd_4bit_send_string_pos(&my_lcd_4bit, "0x", 1, 16);
  2787   002748  0E58               	movlw	low _my_lcd_4bit
  2788   00274A  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2789   00274C  0EC9               	movlw	low STR_14
  2790   00274E  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2791   002750  5026               	movf	lcd_4bit_send_string_pos@str^0,w,c
  2792   002752  A4D8               	btfss	status,2,c
  2793   002754  0E10               	movlw	high __smallconst
  2794   002756  6E27               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2795   002758  0E01               	movlw	1
  2796   00275A  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  2797   00275C  0E10               	movlw	16
  2798   00275E  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  2799   002760  EC16  F010         	call	_lcd_4bit_send_string_pos	;wreg free
  2800   002764  6E57               	movwf	_ret^0,c
  2801   002766                     
  2802                           ;main.c: 203:     ret = lcd_4bit_send_string_pos(&my_lcd_4bit, hex_str, 1, 18);
  2803   002766  0E58               	movlw	low _my_lcd_4bit
  2804   002768  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2805   00276A  0EB8               	movlw	low _hex_str
  2806   00276C  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2807   00276E  6A27               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  2808   002770  0E01               	movlw	1
  2809   002772  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  2810   002774  0E12               	movlw	18
  2811   002776  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  2812   002778  EC16  F010         	call	_lcd_4bit_send_string_pos	;wreg free
  2813   00277C  6E57               	movwf	_ret^0,c
  2814   00277E  0012               	return		;funcret
  2815   002780                     __end_of_LCD_Print_Temperature:
  2816                           	callstack 0
  2817                           
  2818 ;; *************** function _LCD_Print_Date *****************
  2819 ;; Defined at:
  2820 ;;		line 207 in file "main.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  DS1307_obj      1   64[COMRAM] PTR const struct .
  2823 ;;		 -> DS1307_obj(6), 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2835 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;Total ram usage:        1 bytes
  2840 ;; Hardware stack levels used: 1
  2841 ;; Hardware stack levels required when called: 13
  2842 ;; This function calls:
  2843 ;;		_convert_byte_to_str
  2844 ;;		_lcd_4bit_send_char_data_pos
  2845 ;;		_lcd_4bit_send_string_pos
  2846 ;; This function is called by:
  2847 ;;		_main
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           	psect	text21
  2852   001A02                     __ptext21:
  2853                           	callstack 0
  2854   001A02                     _LCD_Print_Date:
  2855                           	callstack 17
  2856   001A02                     
  2857                           ;main.c: 208:     convert_byte_to_str(dummy_str, DS1307_obj->_Day);
  2858   001A02  0E55               	movlw	low _dummy_str
  2859   001A04  6E3F               	movwf	convert_byte_to_str@str^0,c
  2860   001A06  5041               	movf	LCD_Print_Date@DS1307_obj^0,w,c
  2861   001A08  6ED9               	movwf	fsr2l,c
  2862   001A0A  6ADA               	clrf	fsr2h,c
  2863   001A0C  0E05               	movlw	5
  2864   001A0E  26D9               	addwf	fsr2l,f,c
  2865   001A10  50DF               	movf	indf2,w,c
  2866   001A12  6E40               	movwf	convert_byte_to_str@val^0,c
  2867   001A14  EC10  F015         	call	_convert_byte_to_str	;wreg free
  2868   001A18                     
  2869                           ;main.c: 209:     ret = lcd_4bit_send_string_pos(&my_lcd_4bit, dummy_str, 2, 10);
  2870   001A18  0E58               	movlw	low _my_lcd_4bit
  2871   001A1A  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2872   001A1C  0E55               	movlw	low _dummy_str
  2873   001A1E  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2874   001A20  6A27               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  2875   001A22  0E02               	movlw	2
  2876   001A24  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  2877   001A26  0E0A               	movlw	10
  2878   001A28  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  2879   001A2A  EC16  F010         	call	_lcd_4bit_send_string_pos	;wreg free
  2880   001A2E  6E57               	movwf	_ret^0,c
  2881   001A30                     
  2882                           ;main.c: 210:     ret = lcd_4bit_send_char_data_pos(&my_lcd_4bit, '/', 2, 12);
  2883   001A30  0E58               	movlw	low _my_lcd_4bit
  2884   001A32  6E25               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  2885   001A34  0E2F               	movlw	47
  2886   001A36  6E26               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  2887   001A38  0E02               	movlw	2
  2888   001A3A  6E27               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  2889   001A3C  0E0C               	movlw	12
  2890   001A3E  6E28               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  2891   001A40  EC42  F014         	call	_lcd_4bit_send_char_data_pos	;wreg free
  2892   001A44  6E57               	movwf	_ret^0,c
  2893   001A46                     
  2894                           ;main.c: 211:     convert_byte_to_str(dummy_str, DS1307_obj->_Month);
  2895   001A46  0E55               	movlw	low _dummy_str
  2896   001A48  6E3F               	movwf	convert_byte_to_str@str^0,c
  2897   001A4A  5041               	movf	LCD_Print_Date@DS1307_obj^0,w,c
  2898   001A4C  6ED9               	movwf	fsr2l,c
  2899   001A4E  6ADA               	clrf	fsr2h,c
  2900   001A50  0E04               	movlw	4
  2901   001A52  26D9               	addwf	fsr2l,f,c
  2902   001A54  50DF               	movf	indf2,w,c
  2903   001A56  6E40               	movwf	convert_byte_to_str@val^0,c
  2904   001A58  EC10  F015         	call	_convert_byte_to_str	;wreg free
  2905   001A5C                     
  2906                           ;main.c: 212:     ret = lcd_4bit_send_string_pos(&my_lcd_4bit, dummy_str, 2, 13);
  2907   001A5C  0E58               	movlw	low _my_lcd_4bit
  2908   001A5E  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2909   001A60  0E55               	movlw	low _dummy_str
  2910   001A62  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2911   001A64  6A27               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  2912   001A66  0E02               	movlw	2
  2913   001A68  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  2914   001A6A  0E0D               	movlw	13
  2915   001A6C  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  2916   001A6E  EC16  F010         	call	_lcd_4bit_send_string_pos	;wreg free
  2917   001A72  6E57               	movwf	_ret^0,c
  2918                           
  2919                           ;main.c: 213:     ret = lcd_4bit_send_char_data_pos(&my_lcd_4bit, '/', 2, 15);
  2920   001A74  0E58               	movlw	low _my_lcd_4bit
  2921   001A76  6E25               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  2922   001A78  0E2F               	movlw	47
  2923   001A7A  6E26               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  2924   001A7C  0E02               	movlw	2
  2925   001A7E  6E27               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  2926   001A80  0E0F               	movlw	15
  2927   001A82  6E28               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  2928   001A84  EC42  F014         	call	_lcd_4bit_send_char_data_pos	;wreg free
  2929   001A88  6E57               	movwf	_ret^0,c
  2930   001A8A                     
  2931                           ;main.c: 214:     convert_byte_to_str(dummy_str, DS1307_obj->_Year);
  2932   001A8A  0E55               	movlw	low _dummy_str
  2933   001A8C  6E3F               	movwf	convert_byte_to_str@str^0,c
  2934   001A8E  5041               	movf	LCD_Print_Date@DS1307_obj^0,w,c
  2935   001A90  6ED9               	movwf	fsr2l,c
  2936   001A92  6ADA               	clrf	fsr2h,c
  2937   001A94  0E03               	movlw	3
  2938   001A96  26D9               	addwf	fsr2l,f,c
  2939   001A98  50DF               	movf	indf2,w,c
  2940   001A9A  6E40               	movwf	convert_byte_to_str@val^0,c
  2941   001A9C  EC10  F015         	call	_convert_byte_to_str	;wreg free
  2942   001AA0                     
  2943                           ;main.c: 215:     ret = lcd_4bit_send_string_pos(&my_lcd_4bit, dummy_str, 2, 16);
  2944   001AA0  0E58               	movlw	low _my_lcd_4bit
  2945   001AA2  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2946   001AA4  0E55               	movlw	low _dummy_str
  2947   001AA6  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2948   001AA8  6A27               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  2949   001AAA  0E02               	movlw	2
  2950   001AAC  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  2951   001AAE  0E10               	movlw	16
  2952   001AB0  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  2953   001AB2  EC16  F010         	call	_lcd_4bit_send_string_pos	;wreg free
  2954   001AB6  6E57               	movwf	_ret^0,c
  2955   001AB8  0012               	return		;funcret
  2956   001ABA                     __end_of_LCD_Print_Date:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function _LCD_Beginning_Msg *****************
  2960 ;; Defined at:
  2961 ;;		line 184 in file "main.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;Total ram usage:        2 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 12
  2982 ;; This function calls:
  2983 ;;		_lcd_4bit_send_char_data_pos
  2984 ;;		_lcd_4bit_send_command
  2985 ;;		_lcd_4bit_send_string_pos
  2986 ;; This function is called by:
  2987 ;;		_main
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	text22
  2992   0013A0                     __ptext22:
  2993                           	callstack 0
  2994   0013A0                     _LCD_Beginning_Msg:
  2995                           	callstack 18
  2996   0013A0                     
  2997                           ;main.c: 185:     ret = lcd_4bit_send_string_pos(&my_lcd_4bit, "Smart Home Project", 2, 
      +                          2);
  2998   0013A0  0E58               	movlw	low _my_lcd_4bit
  2999   0013A2  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  3000   0013A4  0E64               	movlw	low STR_11
  3001   0013A6  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  3002   0013A8  5026               	movf	lcd_4bit_send_string_pos@str^0,w,c
  3003   0013AA  A4D8               	btfss	status,2,c
  3004   0013AC  0E10               	movlw	high __smallconst
  3005   0013AE  6E27               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  3006   0013B0  0E02               	movlw	2
  3007   0013B2  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  3008   0013B4  0E02               	movlw	2
  3009   0013B6  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  3010   0013B8  EC16  F010         	call	_lcd_4bit_send_string_pos	;wreg free
  3011   0013BC  6E57               	movwf	_ret^0,c
  3012                           
  3013                           ;main.c: 186:     ret = lcd_4bit_send_string_pos(&my_lcd_4bit, "Mohamed Elsayed", 3, 4);
  3014   0013BE  0E58               	movlw	low _my_lcd_4bit
  3015   0013C0  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  3016   0013C2  0E87               	movlw	low STR_12
  3017   0013C4  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  3018   0013C6  5026               	movf	lcd_4bit_send_string_pos@str^0,w,c
  3019   0013C8  A4D8               	btfss	status,2,c
  3020   0013CA  0E10               	movlw	high __smallconst
  3021   0013CC  6E27               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  3022   0013CE  0E03               	movlw	3
  3023   0013D0  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  3024   0013D2  0E04               	movlw	4
  3025   0013D4  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  3026   0013D6  EC16  F010         	call	_lcd_4bit_send_string_pos	;wreg free
  3027   0013DA  6E57               	movwf	_ret^0,c
  3028                           
  3029                           ;main.c: 187:     ret = lcd_4bit_send_string_pos(&my_lcd_4bit, "starts in.. 3", 4, 4);
  3030   0013DC  0E58               	movlw	low _my_lcd_4bit
  3031   0013DE  6E25               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  3032   0013E0  0E97               	movlw	low STR_13
  3033   0013E2  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  3034   0013E4  5026               	movf	lcd_4bit_send_string_pos@str^0,w,c
  3035   0013E6  A4D8               	btfss	status,2,c
  3036   0013E8  0E10               	movlw	high __smallconst
  3037   0013EA  6E27               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  3038   0013EC  0E04               	movlw	4
  3039   0013EE  6E28               	movwf	lcd_4bit_send_string_pos@row^0,c
  3040   0013F0  0E04               	movlw	4
  3041   0013F2  6E29               	movwf	lcd_4bit_send_string_pos@column^0,c
  3042   0013F4  EC16  F010         	call	_lcd_4bit_send_string_pos	;wreg free
  3043   0013F8  6E57               	movwf	_ret^0,c
  3044   0013FA                     
  3045                           ;main.c: 188:     _delay((unsigned long)((500)*(8000000/4000.0)));
  3046   0013FA  0E06               	movlw	6
  3047   0013FC  6E2C               	movwf	(??_LCD_Beginning_Msg+1)^0,c
  3048   0013FE  0E13               	movlw	19
  3049   001400  6E2B               	movwf	??_LCD_Beginning_Msg^0,c
  3050   001402  0EAE               	movlw	174
  3051   001404                     u3457:
  3052   001404  2EE8               	decfsz	wreg,f,c
  3053   001406  D7FE               	bra	u3457
  3054   001408  2E2B               	decfsz	??_LCD_Beginning_Msg^0,f,c
  3055   00140A  D7FC               	bra	u3457
  3056   00140C  2E2C               	decfsz	(??_LCD_Beginning_Msg+1)^0,f,c
  3057   00140E  D7FA               	bra	u3457
  3058   001410                     
  3059                           ;main.c: 189:     ret = lcd_4bit_send_char_data_pos(&my_lcd_4bit, ' ', 4, 16);
  3060   001410  0E58               	movlw	low _my_lcd_4bit
  3061   001412  6E25               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  3062   001414  0E20               	movlw	32
  3063   001416  6E26               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  3064   001418  0E04               	movlw	4
  3065   00141A  6E27               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  3066   00141C  0E10               	movlw	16
  3067   00141E  6E28               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  3068   001420  EC42  F014         	call	_lcd_4bit_send_char_data_pos	;wreg free
  3069   001424  6E57               	movwf	_ret^0,c
  3070   001426                     
  3071                           ;main.c: 190:     _delay((unsigned long)((500)*(8000000/4000.0)));
  3072   001426  0E06               	movlw	6
  3073   001428  6E2C               	movwf	(??_LCD_Beginning_Msg+1)^0,c
  3074   00142A  0E13               	movlw	19
  3075   00142C  6E2B               	movwf	??_LCD_Beginning_Msg^0,c
  3076   00142E  0EAE               	movlw	174
  3077   001430                     u3467:
  3078   001430  2EE8               	decfsz	wreg,f,c
  3079   001432  D7FE               	bra	u3467
  3080   001434  2E2B               	decfsz	??_LCD_Beginning_Msg^0,f,c
  3081   001436  D7FC               	bra	u3467
  3082   001438  2E2C               	decfsz	(??_LCD_Beginning_Msg+1)^0,f,c
  3083   00143A  D7FA               	bra	u3467
  3084   00143C                     
  3085                           ;main.c: 191:     ret = lcd_4bit_send_char_data_pos(&my_lcd_4bit, '2', 4, 16);
  3086   00143C  0E58               	movlw	low _my_lcd_4bit
  3087   00143E  6E25               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  3088   001440  0E32               	movlw	50
  3089   001442  6E26               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  3090   001444  0E04               	movlw	4
  3091   001446  6E27               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  3092   001448  0E10               	movlw	16
  3093   00144A  6E28               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  3094   00144C  EC42  F014         	call	_lcd_4bit_send_char_data_pos	;wreg free
  3095   001450  6E57               	movwf	_ret^0,c
  3096   001452                     
  3097                           ;main.c: 192:     _delay((unsigned long)((500)*(8000000/4000.0)));
  3098   001452  0E06               	movlw	6
  3099   001454  6E2C               	movwf	(??_LCD_Beginning_Msg+1)^0,c
  3100   001456  0E13               	movlw	19
  3101   001458  6E2B               	movwf	??_LCD_Beginning_Msg^0,c
  3102   00145A  0EAE               	movlw	174
  3103   00145C                     u3477:
  3104   00145C  2EE8               	decfsz	wreg,f,c
  3105   00145E  D7FE               	bra	u3477
  3106   001460  2E2B               	decfsz	??_LCD_Beginning_Msg^0,f,c
  3107   001462  D7FC               	bra	u3477
  3108   001464  2E2C               	decfsz	(??_LCD_Beginning_Msg+1)^0,f,c
  3109   001466  D7FA               	bra	u3477
  3110   001468                     
  3111                           ;main.c: 193:     ret = lcd_4bit_send_char_data_pos(&my_lcd_4bit, ' ', 4, 16);
  3112   001468  0E58               	movlw	low _my_lcd_4bit
  3113   00146A  6E25               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  3114   00146C  0E20               	movlw	32
  3115   00146E  6E26               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  3116   001470  0E04               	movlw	4
  3117   001472  6E27               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  3118   001474  0E10               	movlw	16
  3119   001476  6E28               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  3120   001478  EC42  F014         	call	_lcd_4bit_send_char_data_pos	;wreg free
  3121   00147C  6E57               	movwf	_ret^0,c
  3122   00147E                     
  3123                           ;main.c: 194:     _delay((unsigned long)((500)*(8000000/4000.0)));
  3124   00147E  0E06               	movlw	6
  3125   001480  6E2C               	movwf	(??_LCD_Beginning_Msg+1)^0,c
  3126   001482  0E13               	movlw	19
  3127   001484  6E2B               	movwf	??_LCD_Beginning_Msg^0,c
  3128   001486  0EAE               	movlw	174
  3129   001488                     u3487:
  3130   001488  2EE8               	decfsz	wreg,f,c
  3131   00148A  D7FE               	bra	u3487
  3132   00148C  2E2B               	decfsz	??_LCD_Beginning_Msg^0,f,c
  3133   00148E  D7FC               	bra	u3487
  3134   001490  2E2C               	decfsz	(??_LCD_Beginning_Msg+1)^0,f,c
  3135   001492  D7FA               	bra	u3487
  3136   001494                     
  3137                           ;main.c: 195:     ret = lcd_4bit_send_char_data_pos(&my_lcd_4bit, '1', 4, 16);
  3138   001494  0E58               	movlw	low _my_lcd_4bit
  3139   001496  6E25               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  3140   001498  0E31               	movlw	49
  3141   00149A  6E26               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  3142   00149C  0E04               	movlw	4
  3143   00149E  6E27               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  3144   0014A0  0E10               	movlw	16
  3145   0014A2  6E28               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  3146   0014A4  EC42  F014         	call	_lcd_4bit_send_char_data_pos	;wreg free
  3147   0014A8  6E57               	movwf	_ret^0,c
  3148   0014AA                     
  3149                           ;main.c: 196:     _delay((unsigned long)((500)*(8000000/4000.0)));
  3150   0014AA  0E06               	movlw	6
  3151   0014AC  6E2C               	movwf	(??_LCD_Beginning_Msg+1)^0,c
  3152   0014AE  0E13               	movlw	19
  3153   0014B0  6E2B               	movwf	??_LCD_Beginning_Msg^0,c
  3154   0014B2  0EAE               	movlw	174
  3155   0014B4                     u3497:
  3156   0014B4  2EE8               	decfsz	wreg,f,c
  3157   0014B6  D7FE               	bra	u3497
  3158   0014B8  2E2B               	decfsz	??_LCD_Beginning_Msg^0,f,c
  3159   0014BA  D7FC               	bra	u3497
  3160   0014BC  2E2C               	decfsz	(??_LCD_Beginning_Msg+1)^0,f,c
  3161   0014BE  D7FA               	bra	u3497
  3162   0014C0                     
  3163                           ;main.c: 197:     ret = lcd_4bit_send_command(&my_lcd_4bit, 0X01);
  3164   0014C0  0E58               	movlw	low _my_lcd_4bit
  3165   0014C2  6E1C               	movwf	lcd_4bit_send_command@lcd^0,c
  3166   0014C4  0E01               	movlw	1
  3167   0014C6  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  3168   0014C8  ECEB  F012         	call	_lcd_4bit_send_command	;wreg free
  3169   0014CC  6E57               	movwf	_ret^0,c
  3170   0014CE  0012               	return		;funcret
  3171   0014D0                     __end_of_LCD_Beginning_Msg:
  3172                           	callstack 0
  3173                           
  3174 ;; *************** function _lcd_4bit_send_string_pos *****************
  3175 ;; Defined at:
  3176 ;;		line 97 in file "mcc_generated_files/lcd/ecu_lcd.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  lcd             1   36[COMRAM] PTR const struct .
  3179 ;;		 -> my_lcd_4bit(6), 
  3180 ;;  str             2   37[COMRAM] PTR unsigned char 
  3181 ;;		 -> STR_14(3), STR_13(14), STR_12(16), STR_11(19), 
  3182 ;;		 -> hex_str(2), dummy_str(2), STR_3(9), STR_2(9), 
  3183 ;;		 -> STR_1(16), 
  3184 ;;  row             1   39[COMRAM] unsigned char 
  3185 ;;  column          1   40[COMRAM] unsigned char 
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;  ret             1   41[COMRAM] unsigned char 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      unsigned char 
  3190 ;; Registers used:
  3191 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3197 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;Total ram usage:        6 bytes
  3202 ;; Hardware stack levels used: 1
  3203 ;; Hardware stack levels required when called: 11
  3204 ;; This function calls:
  3205 ;;		_lcd_4bit_send_char_data
  3206 ;;		_lcd_4bit_set_cursor
  3207 ;; This function is called by:
  3208 ;;		_main
  3209 ;;		_LCD_Beginning_Msg
  3210 ;;		_LCD_Print_Temperature
  3211 ;;		_LCD_Print_Date
  3212 ;;		_LCD_Print_Time
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           	psect	text23
  3217   00202C                     __ptext23:
  3218                           	callstack 0
  3219   00202C                     _lcd_4bit_send_string_pos:
  3220                           	callstack 19
  3221   00202C                     
  3222                           ;mcc_generated_files/lcd/ecu_lcd.c: 99:     if(((void*)0) == lcd){
  3223   00202C  5025               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  3224   00202E  A4D8               	btfss	status,2,c
  3225   002030  EF1C  F010         	goto	u2591
  3226   002034  EF1E  F010         	goto	u2590
  3227   002038                     u2591:
  3228   002038  EF22  F010         	goto	l4900
  3229   00203C                     u2590:
  3230   00203C                     
  3231                           ;mcc_generated_files/lcd/ecu_lcd.c: 100:         ret = 0X00;
  3232   00203C  0E00               	movlw	0
  3233   00203E  6E2A               	movwf	lcd_4bit_send_string_pos@ret^0,c
  3234                           
  3235                           ;mcc_generated_files/lcd/ecu_lcd.c: 101:     }
  3236   002040  EF5F  F010         	goto	l4908
  3237   002044                     l4900:
  3238                           
  3239                           ;mcc_generated_files/lcd/ecu_lcd.c: 103:         ret = lcd_4bit_set_cursor(lcd, row, col
      +                          umn);
  3240   002044  C025  F01F         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  3241   002048  C028  F020         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  3242   00204C  C029  F021         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@column
  3243   002050  EC6F  F00E         	call	_lcd_4bit_set_cursor	;wreg free
  3244   002054  6E2A               	movwf	lcd_4bit_send_string_pos@ret^0,c
  3245                           
  3246                           ;mcc_generated_files/lcd/ecu_lcd.c: 104:         while(*str){
  3247   002056  EF46  F010         	goto	l4906
  3248   00205A                     l4902:
  3249                           
  3250                           ;mcc_generated_files/lcd/ecu_lcd.c: 105:             ret = lcd_4bit_send_char_data(lcd, 
      +                          *str++);
  3251   00205A  C025  F01C         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  3252   00205E  C026  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  3253   002062  C027  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  3254   002066  0E00               	movlw	low (__smallconst shr (0+16))
  3255   002068  6EF8               	movwf	tblptru,c
  3256   00206A  0E0F               	movlw	(high __ramtop+-1)
  3257   00206C  64F7               	cpfsgt	tblptrh,c
  3258   00206E  D003               	bra	u2607
  3259   002070  0008               	tblrd		*
  3260   002072  50F5               	movf	tablat,w,c
  3261   002074  D005               	bra	u2600
  3262   002076                     u2607:
  3263   002076  CFF6 FFE9          	movff	tblptrl,fsr0l
  3264   00207A  CFF7 FFEA          	movff	tblptrh,fsr0h
  3265   00207E  50EF               	movf	indf0,w,c
  3266   002080                     u2600:
  3267   002080  6E1D               	movwf	lcd_4bit_send_char_data@data^0,c
  3268   002082  EC1A  F013         	call	_lcd_4bit_send_char_data	;wreg free
  3269   002086  6E2A               	movwf	lcd_4bit_send_string_pos@ret^0,c
  3270   002088  4A26               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  3271   00208A  2A27               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  3272   00208C                     l4906:
  3273                           
  3274                           ;mcc_generated_files/lcd/ecu_lcd.c: 104:         while(*str){
  3275   00208C  C026  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  3276   002090  C027  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  3277   002094  0E00               	movlw	low (__smallconst shr (0+16))
  3278   002096  6EF8               	movwf	tblptru,c
  3279   002098  0E0F               	movlw	(high __ramtop+-1)
  3280   00209A  64F7               	cpfsgt	tblptrh,c
  3281   00209C  D003               	bra	u2617
  3282   00209E  0008               	tblrd		*
  3283   0020A0  50F5               	movf	tablat,w,c
  3284   0020A2  D005               	bra	u2610
  3285   0020A4                     u2617:
  3286   0020A4  CFF6 FFE9          	movff	tblptrl,fsr0l
  3287   0020A8  CFF7 FFEA          	movff	tblptrh,fsr0h
  3288   0020AC  50EF               	movf	indf0,w,c
  3289   0020AE                     u2610:
  3290   0020AE  0900               	iorlw	0
  3291   0020B0  A4D8               	btfss	status,2,c
  3292   0020B2  EF5D  F010         	goto	u2621
  3293   0020B6  EF5F  F010         	goto	u2620
  3294   0020BA                     u2621:
  3295   0020BA  EF2D  F010         	goto	l4902
  3296   0020BE                     u2620:
  3297   0020BE                     l4908:
  3298                           
  3299                           ;mcc_generated_files/lcd/ecu_lcd.c: 108:     return ret;
  3300   0020BE  502A               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  3301   0020C0  0012               	return		;funcret
  3302   0020C2                     __end_of_lcd_4bit_send_string_pos:
  3303                           	callstack 0
  3304                           
  3305 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  3306 ;; Defined at:
  3307 ;;		line 72 in file "mcc_generated_files/lcd/ecu_lcd.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  lcd             1   36[COMRAM] PTR const struct .
  3310 ;;		 -> my_lcd_4bit(6), 
  3311 ;;  data            1   37[COMRAM] unsigned char 
  3312 ;;  row             1   38[COMRAM] unsigned char 
  3313 ;;  column          1   39[COMRAM] unsigned char 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;  ret             1   40[COMRAM] unsigned char 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      unsigned char 
  3318 ;; Registers used:
  3319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3325 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3329 ;;Total ram usage:        5 bytes
  3330 ;; Hardware stack levels used: 1
  3331 ;; Hardware stack levels required when called: 11
  3332 ;; This function calls:
  3333 ;;		_lcd_4bit_send_char_data
  3334 ;;		_lcd_4bit_set_cursor
  3335 ;; This function is called by:
  3336 ;;		_LCD_Beginning_Msg
  3337 ;;		_LCD_Print_Date
  3338 ;;		_LCD_Print_Time
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text24
  3343   002884                     __ptext24:
  3344                           	callstack 0
  3345   002884                     _lcd_4bit_send_char_data_pos:
  3346                           	callstack 18
  3347   002884                     
  3348                           ;mcc_generated_files/lcd/ecu_lcd.c: 74:     if(((void*)0) == lcd){
  3349   002884  5025               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  3350   002886  A4D8               	btfss	status,2,c
  3351   002888  EF48  F014         	goto	u2631
  3352   00288C  EF4A  F014         	goto	u2630
  3353   002890                     u2631:
  3354   002890  EF4E  F014         	goto	l4920
  3355   002894                     u2630:
  3356   002894                     
  3357                           ;mcc_generated_files/lcd/ecu_lcd.c: 75:         ret = 0X00;
  3358   002894  0E00               	movlw	0
  3359   002896  6E29               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  3360                           
  3361                           ;mcc_generated_files/lcd/ecu_lcd.c: 76:     }
  3362   002898  EF5E  F014         	goto	l4922
  3363   00289C                     l4920:
  3364                           
  3365                           ;mcc_generated_files/lcd/ecu_lcd.c: 78:         ret = lcd_4bit_set_cursor(lcd, row, colu
      +                          mn);
  3366   00289C  C025  F01F         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_cursor@lcd
  3367   0028A0  C027  F020         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_cursor@row
  3368   0028A4  C028  F021         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bit_set_cursor@column
  3369   0028A8  EC6F  F00E         	call	_lcd_4bit_set_cursor	;wreg free
  3370   0028AC  6E29               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  3371                           
  3372                           ;mcc_generated_files/lcd/ecu_lcd.c: 79:         ret = lcd_4bit_send_char_data(lcd, data)
      +                          ;
  3373   0028AE  C025  F01C         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  3374   0028B2  C026  F01D         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  3375   0028B6  EC1A  F013         	call	_lcd_4bit_send_char_data	;wreg free
  3376   0028BA  6E29               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  3377   0028BC                     l4922:
  3378                           
  3379                           ;mcc_generated_files/lcd/ecu_lcd.c: 81:     return ret;
  3380   0028BC  5029               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  3381   0028BE  0012               	return		;funcret
  3382   0028C0                     __end_of_lcd_4bit_send_char_data_pos:
  3383                           	callstack 0
  3384                           
  3385 ;; *************** function _lcd_4bit_set_cursor *****************
  3386 ;; Defined at:
  3387 ;;		line 336 in file "mcc_generated_files/lcd/ecu_lcd.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  lcd             1   30[COMRAM] PTR const struct .
  3390 ;;		 -> my_lcd_4bit(6), 
  3391 ;;  row             1   31[COMRAM] unsigned char 
  3392 ;;  column          1   32[COMRAM] unsigned char 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  ret             1   35[COMRAM] unsigned char 
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      unsigned char 
  3397 ;; Registers used:
  3398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3404 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3405 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3407 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3408 ;;Total ram usage:        6 bytes
  3409 ;; Hardware stack levels used: 1
  3410 ;; Hardware stack levels required when called: 10
  3411 ;; This function calls:
  3412 ;;		_lcd_4bit_send_command
  3413 ;; This function is called by:
  3414 ;;		_lcd_4bit_send_char_data_pos
  3415 ;;		_lcd_4bit_send_string_pos
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text25
  3420   001CDE                     __ptext25:
  3421                           	callstack 0
  3422   001CDE                     _lcd_4bit_set_cursor:
  3423                           	callstack 19
  3424   001CDE                     
  3425                           ;mcc_generated_files/lcd/ecu_lcd.c: 337:     Std_ReturnType ret = 0x01;
  3426   001CDE  0E01               	movlw	1
  3427   001CE0  6E24               	movwf	lcd_4bit_set_cursor@ret^0,c
  3428                           
  3429                           ;mcc_generated_files/lcd/ecu_lcd.c: 338:     if(((void*)0) == lcd){
  3430   001CE2  501F               	movf	lcd_4bit_set_cursor@lcd^0,w,c
  3431   001CE4  A4D8               	btfss	status,2,c
  3432   001CE6  EF77  F00E         	goto	u2461
  3433   001CEA  EF79  F00E         	goto	u2460
  3434   001CEE                     u2461:
  3435   001CEE  EF7D  F00E         	goto	l4748
  3436   001CF2                     u2460:
  3437   001CF2                     
  3438                           ;mcc_generated_files/lcd/ecu_lcd.c: 339:         ret = 0X00;
  3439   001CF2  0E00               	movlw	0
  3440   001CF4  6E24               	movwf	lcd_4bit_set_cursor@ret^0,c
  3441                           
  3442                           ;mcc_generated_files/lcd/ecu_lcd.c: 340:     }
  3443   001CF6  EFC5  F00E         	goto	l4762
  3444   001CFA                     l4748:
  3445                           
  3446                           ;mcc_generated_files/lcd/ecu_lcd.c: 342:         column--;
  3447   001CFA  0621               	decf	lcd_4bit_set_cursor@column^0,f,c
  3448                           
  3449                           ;mcc_generated_files/lcd/ecu_lcd.c: 343:         switch(row){
  3450   001CFC  EFA8  F00E         	goto	l4760
  3451   001D00                     l4750:
  3452                           
  3453                           ;mcc_generated_files/lcd/ecu_lcd.c: 345:                 ret = lcd_4bit_send_command(lcd
      +                          ,(0X80 + column));
  3454   001D00  C01F  F01C         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  3455   001D04  5021               	movf	lcd_4bit_set_cursor@column^0,w,c
  3456   001D06  0F80               	addlw	128
  3457   001D08  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  3458   001D0A  ECEB  F012         	call	_lcd_4bit_send_command	;wreg free
  3459   001D0E  6E24               	movwf	lcd_4bit_set_cursor@ret^0,c
  3460                           
  3461                           ;mcc_generated_files/lcd/ecu_lcd.c: 346:                 break;
  3462   001D10  EFC5  F00E         	goto	l4762
  3463   001D14                     l4752:
  3464                           
  3465                           ;mcc_generated_files/lcd/ecu_lcd.c: 348:                 ret = lcd_4bit_send_command(lcd
      +                          ,(0XC0 + column));
  3466   001D14  C01F  F01C         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  3467   001D18  5021               	movf	lcd_4bit_set_cursor@column^0,w,c
  3468   001D1A  0FC0               	addlw	192
  3469   001D1C  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  3470   001D1E  ECEB  F012         	call	_lcd_4bit_send_command	;wreg free
  3471   001D22  6E24               	movwf	lcd_4bit_set_cursor@ret^0,c
  3472                           
  3473                           ;mcc_generated_files/lcd/ecu_lcd.c: 349:                 break;
  3474   001D24  EFC5  F00E         	goto	l4762
  3475   001D28                     l4754:
  3476                           
  3477                           ;mcc_generated_files/lcd/ecu_lcd.c: 351:                 ret = lcd_4bit_send_command(lcd
      +                          ,(0X94 + column));
  3478   001D28  C01F  F01C         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  3479   001D2C  5021               	movf	lcd_4bit_set_cursor@column^0,w,c
  3480   001D2E  0F94               	addlw	148
  3481   001D30  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  3482   001D32  ECEB  F012         	call	_lcd_4bit_send_command	;wreg free
  3483   001D36  6E24               	movwf	lcd_4bit_set_cursor@ret^0,c
  3484                           
  3485                           ;mcc_generated_files/lcd/ecu_lcd.c: 352:                 break;
  3486   001D38  EFC5  F00E         	goto	l4762
  3487   001D3C                     l4756:
  3488                           
  3489                           ;mcc_generated_files/lcd/ecu_lcd.c: 354:                 ret = lcd_4bit_send_command(lcd
      +                          ,(0XD4 + column));
  3490   001D3C  C01F  F01C         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  3491   001D40  5021               	movf	lcd_4bit_set_cursor@column^0,w,c
  3492   001D42  0FD4               	addlw	212
  3493   001D44  6E1D               	movwf	lcd_4bit_send_command@command^0,c
  3494   001D46  ECEB  F012         	call	_lcd_4bit_send_command	;wreg free
  3495   001D4A  6E24               	movwf	lcd_4bit_set_cursor@ret^0,c
  3496                           
  3497                           ;mcc_generated_files/lcd/ecu_lcd.c: 355:                 break;
  3498   001D4C  EFC5  F00E         	goto	l4762
  3499   001D50                     l4760:
  3500   001D50  5020               	movf	lcd_4bit_set_cursor@row^0,w,c
  3501   001D52  6E22               	movwf	??_lcd_4bit_set_cursor^0,c
  3502   001D54  6A23               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  3503                           
  3504                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3505                           ; Switch size 1, requested type "simple"
  3506                           ; Number of cases is 1, Range of values is 0 to 0
  3507                           ; switch strategies available:
  3508                           ; Name         Instructions Cycles
  3509                           ; simple_byte            4     3 (average)
  3510                           ;	Chosen strategy is simple_byte
  3511   001D56  5023               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  3512   001D58  0A00               	xorlw	0	; case 0
  3513   001D5A  B4D8               	btfsc	status,2,c
  3514   001D5C  EFB2  F00E         	goto	l5840
  3515   001D60  EFC5  F00E         	goto	l4762
  3516   001D64                     l5840:
  3517                           
  3518                           ; Switch size 1, requested type "simple"
  3519                           ; Number of cases is 4, Range of values is 1 to 4
  3520                           ; switch strategies available:
  3521                           ; Name         Instructions Cycles
  3522                           ; simple_byte           13     7 (average)
  3523                           ;	Chosen strategy is simple_byte
  3524   001D64  5022               	movf	??_lcd_4bit_set_cursor^0,w,c
  3525   001D66  0A01               	xorlw	1	; case 1
  3526   001D68  B4D8               	btfsc	status,2,c
  3527   001D6A  EF80  F00E         	goto	l4750
  3528   001D6E  0A03               	xorlw	3	; case 2
  3529   001D70  B4D8               	btfsc	status,2,c
  3530   001D72  EF8A  F00E         	goto	l4752
  3531   001D76  0A01               	xorlw	1	; case 3
  3532   001D78  B4D8               	btfsc	status,2,c
  3533   001D7A  EF94  F00E         	goto	l4754
  3534   001D7E  0A07               	xorlw	7	; case 4
  3535   001D80  B4D8               	btfsc	status,2,c
  3536   001D82  EF9E  F00E         	goto	l4756
  3537   001D86  EFC5  F00E         	goto	l4762
  3538   001D8A                     l4762:
  3539                           
  3540                           ;mcc_generated_files/lcd/ecu_lcd.c: 358:     return ret;
  3541   001D8A  5024               	movf	lcd_4bit_set_cursor@ret^0,w,c
  3542   001D8C  0012               	return		;funcret
  3543   001D8E                     __end_of_lcd_4bit_set_cursor:
  3544                           	callstack 0
  3545                           
  3546 ;; *************** function _lcd_4bit_send_command *****************
  3547 ;; Defined at:
  3548 ;;		line 38 in file "mcc_generated_files/lcd/ecu_lcd.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;  lcd             1   27[COMRAM] PTR const struct .
  3551 ;;		 -> my_lcd_4bit(6), 
  3552 ;;  command         1   28[COMRAM] unsigned char 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;  ret             1   29[COMRAM] unsigned char 
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  1    wreg      unsigned char 
  3557 ;; Registers used:
  3558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3564 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3567 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3568 ;;Total ram usage:        3 bytes
  3569 ;; Hardware stack levels used: 1
  3570 ;; Hardware stack levels required when called: 9
  3571 ;; This function calls:
  3572 ;;		_gpio_pin_write_logic
  3573 ;;		_lcd_4bit_send
  3574 ;;		_lcd_4bit_send_enable_signal
  3575 ;; This function is called by:
  3576 ;;		_LCD_Beginning_Msg
  3577 ;;		_lcd_4bit_intialize
  3578 ;;		_lcd_4bit_set_cursor
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text26
  3583   0025D6                     __ptext26:
  3584                           	callstack 0
  3585   0025D6                     _lcd_4bit_send_command:
  3586                           	callstack 19
  3587   0025D6                     
  3588                           ;mcc_generated_files/lcd/ecu_lcd.c: 40:     if(((void*)0) == lcd){
  3589   0025D6  501C               	movf	lcd_4bit_send_command@lcd^0,w,c
  3590   0025D8  A4D8               	btfss	status,2,c
  3591   0025DA  EFF1  F012         	goto	u2271
  3592   0025DE  EFF3  F012         	goto	u2270
  3593   0025E2                     u2271:
  3594   0025E2  EFF7  F012         	goto	l4488
  3595   0025E6                     u2270:
  3596   0025E6                     
  3597                           ;mcc_generated_files/lcd/ecu_lcd.c: 41:         ret = 0X00;
  3598   0025E6  0E00               	movlw	0
  3599   0025E8  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  3600                           
  3601                           ;mcc_generated_files/lcd/ecu_lcd.c: 42:     }
  3602   0025EA  EF18  F013         	goto	l4490
  3603   0025EE                     l4488:
  3604                           
  3605                           ;mcc_generated_files/lcd/ecu_lcd.c: 44:         ret = gpio_pin_write_logic(&(lcd->rs_pin
      +                          ), GPIO_LOW);
  3606   0025EE  501C               	movf	lcd_4bit_send_command@lcd^0,w,c
  3607   0025F0  0F04               	addlw	4
  3608   0025F2  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3609   0025F4  0E00               	movlw	0
  3610   0025F6  6E12               	movwf	gpio_pin_write_logic@logic^0,c
  3611   0025F8  EC6C  F00B         	call	_gpio_pin_write_logic	;wreg free
  3612   0025FC  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  3613                           
  3614                           ;mcc_generated_files/lcd/ecu_lcd.c: 46:         ret = lcd_4bit_send(lcd, (command >> 4))
      +                          ;
  3615   0025FE  C01C  F019         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send@lcd
  3616   002602  381D               	swapf	lcd_4bit_send_command@command^0,w,c
  3617   002604  0B0F               	andlw	15
  3618   002606  6E1A               	movwf	lcd_4bit_send@command^0,c
  3619   002608  EC83  F011         	call	_lcd_4bit_send	;wreg free
  3620   00260C  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  3621                           
  3622                           ;mcc_generated_files/lcd/ecu_lcd.c: 47:         ret = lcd_4bit_send_enable_signal(lcd);
  3623   00260E  C01C  F019         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  3624   002612  ECC0  F013         	call	_lcd_4bit_send_enable_signal	;wreg free
  3625   002616  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  3626                           
  3627                           ;mcc_generated_files/lcd/ecu_lcd.c: 49:         ret = lcd_4bit_send(lcd, (command >> 0))
      +                          ;
  3628   002618  C01C  F019         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send@lcd
  3629   00261C  C01D  F01A         	movff	lcd_4bit_send_command@command,lcd_4bit_send@command
  3630   002620  EC83  F011         	call	_lcd_4bit_send	;wreg free
  3631   002624  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  3632                           
  3633                           ;mcc_generated_files/lcd/ecu_lcd.c: 50:         ret = lcd_4bit_send_enable_signal(lcd);
  3634   002626  C01C  F019         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  3635   00262A  ECC0  F013         	call	_lcd_4bit_send_enable_signal	;wreg free
  3636   00262E  6E1E               	movwf	lcd_4bit_send_command@ret^0,c
  3637   002630                     l4490:
  3638                           
  3639                           ;mcc_generated_files/lcd/ecu_lcd.c: 52:     return ret;
  3640   002630  501E               	movf	lcd_4bit_send_command@ret^0,w,c
  3641   002632  0012               	return		;funcret
  3642   002634                     __end_of_lcd_4bit_send_command:
  3643                           	callstack 0
  3644                           
  3645 ;; *************** function _lcd_4bit_send_char_data *****************
  3646 ;; Defined at:
  3647 ;;		line 55 in file "mcc_generated_files/lcd/ecu_lcd.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  lcd             1   27[COMRAM] PTR const struct .
  3650 ;;		 -> my_lcd_4bit(6), 
  3651 ;;  data            1   28[COMRAM] unsigned char 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  ret             1   29[COMRAM] unsigned char 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  1    wreg      unsigned char 
  3656 ;; Registers used:
  3657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3666 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3667 ;;Total ram usage:        3 bytes
  3668 ;; Hardware stack levels used: 1
  3669 ;; Hardware stack levels required when called: 9
  3670 ;; This function calls:
  3671 ;;		_gpio_pin_write_logic
  3672 ;;		_lcd_4bit_send
  3673 ;;		_lcd_4bit_send_enable_signal
  3674 ;; This function is called by:
  3675 ;;		_lcd_4bit_send_char_data_pos
  3676 ;;		_lcd_4bit_send_string_pos
  3677 ;;		_lcd_4bit_send_string
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           	psect	text27
  3682   002634                     __ptext27:
  3683                           	callstack 0
  3684   002634                     _lcd_4bit_send_char_data:
  3685                           	callstack 20
  3686   002634                     
  3687                           ;mcc_generated_files/lcd/ecu_lcd.c: 57:     if(((void*)0) == lcd){
  3688   002634  501C               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  3689   002636  A4D8               	btfss	status,2,c
  3690   002638  EF20  F013         	goto	u2451
  3691   00263C  EF22  F013         	goto	u2450
  3692   002640                     u2451:
  3693   002640  EF26  F013         	goto	l4738
  3694   002644                     u2450:
  3695   002644                     
  3696                           ;mcc_generated_files/lcd/ecu_lcd.c: 58:         ret = 0X00;
  3697   002644  0E00               	movlw	0
  3698   002646  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  3699                           
  3700                           ;mcc_generated_files/lcd/ecu_lcd.c: 59:     }
  3701   002648  EF47  F013         	goto	l4740
  3702   00264C                     l4738:
  3703                           
  3704                           ;mcc_generated_files/lcd/ecu_lcd.c: 61:         ret = gpio_pin_write_logic(&(lcd->rs_pin
      +                          ), GPIO_HIGH);
  3705   00264C  501C               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  3706   00264E  0F04               	addlw	4
  3707   002650  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3708   002652  0E01               	movlw	1
  3709   002654  6E12               	movwf	gpio_pin_write_logic@logic^0,c
  3710   002656  EC6C  F00B         	call	_gpio_pin_write_logic	;wreg free
  3711   00265A  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  3712                           
  3713                           ;mcc_generated_files/lcd/ecu_lcd.c: 63:         ret = lcd_4bit_send(lcd, (data >> 4));
  3714   00265C  C01C  F019         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send@lcd
  3715   002660  381D               	swapf	lcd_4bit_send_char_data@data^0,w,c
  3716   002662  0B0F               	andlw	15
  3717   002664  6E1A               	movwf	lcd_4bit_send@command^0,c
  3718   002666  EC83  F011         	call	_lcd_4bit_send	;wreg free
  3719   00266A  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  3720                           
  3721                           ;mcc_generated_files/lcd/ecu_lcd.c: 64:         ret = lcd_4bit_send_enable_signal(lcd);
  3722   00266C  C01C  F019         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  3723   002670  ECC0  F013         	call	_lcd_4bit_send_enable_signal	;wreg free
  3724   002674  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  3725                           
  3726                           ;mcc_generated_files/lcd/ecu_lcd.c: 66:         ret = lcd_4bit_send(lcd, (data >> 0));
  3727   002676  C01C  F019         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send@lcd
  3728   00267A  C01D  F01A         	movff	lcd_4bit_send_char_data@data,lcd_4bit_send@command
  3729   00267E  EC83  F011         	call	_lcd_4bit_send	;wreg free
  3730   002682  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  3731                           
  3732                           ;mcc_generated_files/lcd/ecu_lcd.c: 67:         ret = lcd_4bit_send_enable_signal(lcd);
  3733   002684  C01C  F019         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  3734   002688  ECC0  F013         	call	_lcd_4bit_send_enable_signal	;wreg free
  3735   00268C  6E1E               	movwf	lcd_4bit_send_char_data@ret^0,c
  3736   00268E                     l4740:
  3737                           
  3738                           ;mcc_generated_files/lcd/ecu_lcd.c: 69:     return ret;
  3739   00268E  501E               	movf	lcd_4bit_send_char_data@ret^0,w,c
  3740   002690  0012               	return		;funcret
  3741   002692                     __end_of_lcd_4bit_send_char_data:
  3742                           	callstack 0
  3743                           
  3744 ;; *************** function _lcd_4bit_send_enable_signal *****************
  3745 ;; Defined at:
  3746 ;;		line 286 in file "mcc_generated_files/lcd/ecu_lcd.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  lcd             1   24[COMRAM] PTR const struct .
  3749 ;;		 -> my_lcd_4bit(6), 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  ret             1   25[COMRAM] unsigned char 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      unsigned char 
  3754 ;; Registers used:
  3755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3761 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3764 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;Total ram usage:        2 bytes
  3766 ;; Hardware stack levels used: 1
  3767 ;; Hardware stack levels required when called: 8
  3768 ;; This function calls:
  3769 ;;		_gpio_pin_write_logic
  3770 ;; This function is called by:
  3771 ;;		_lcd_4bit_send_command
  3772 ;;		_lcd_4bit_send_char_data
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text28
  3777   002780                     __ptext28:
  3778                           	callstack 0
  3779   002780                     _lcd_4bit_send_enable_signal:
  3780                           	callstack 19
  3781   002780                     
  3782                           ;mcc_generated_files/lcd/ecu_lcd.c: 288:     if(((void*)0) == lcd){
  3783   002780  5019               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  3784   002782  A4D8               	btfss	status,2,c
  3785   002784  EFC6  F013         	goto	u2061
  3786   002788  EFC8  F013         	goto	u2060
  3787   00278C                     u2061:
  3788   00278C  EFCC  F013         	goto	l4192
  3789   002790                     u2060:
  3790   002790                     
  3791                           ;mcc_generated_files/lcd/ecu_lcd.c: 289:         ret = 0X00;
  3792   002790  0E00               	movlw	0
  3793   002792  6E1A               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  3794                           
  3795                           ;mcc_generated_files/lcd/ecu_lcd.c: 290:     }
  3796   002794  EFDF  F013         	goto	l4198
  3797   002798                     l4192:
  3798   002798  5019               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  3799   00279A  0F05               	addlw	5
  3800   00279C  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3801   00279E  0E01               	movlw	1
  3802   0027A0  6E12               	movwf	gpio_pin_write_logic@logic^0,c
  3803   0027A2  EC6C  F00B         	call	_gpio_pin_write_logic	;wreg free
  3804   0027A6                     
  3805                           ;mcc_generated_files/lcd/ecu_lcd.c: 293:         _delay((unsigned long)((50)*(8000000/40
      +                          00000.0)));
  3806   0027A6  0E21               	movlw	33
  3807   0027A8                     u3507:
  3808   0027A8  2EE8               	decfsz	wreg,f,c
  3809   0027AA  D7FE               	bra	u3507
  3810   0027AC  0000               	nop	
  3811   0027AE                     
  3812                           ;mcc_generated_files/lcd/ecu_lcd.c: 294:         ret = gpio_pin_write_logic(&(lcd->en_pi
      +                          n), GPIO_LOW);
  3813   0027AE  5019               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  3814   0027B0  0F05               	addlw	5
  3815   0027B2  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3816   0027B4  0E00               	movlw	0
  3817   0027B6  6E12               	movwf	gpio_pin_write_logic@logic^0,c
  3818   0027B8  EC6C  F00B         	call	_gpio_pin_write_logic	;wreg free
  3819   0027BC  6E1A               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  3820   0027BE                     l4198:
  3821                           
  3822                           ;mcc_generated_files/lcd/ecu_lcd.c: 296:     return ret;
  3823   0027BE  501A               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  3824   0027C0  0012               	return		;funcret
  3825   0027C2                     __end_of_lcd_4bit_send_enable_signal:
  3826                           	callstack 0
  3827                           
  3828 ;; *************** function _lcd_4bit_send *****************
  3829 ;; Defined at:
  3830 ;;		line 272 in file "mcc_generated_files/lcd/ecu_lcd.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  lcd             1   24[COMRAM] PTR const struct .
  3833 ;;		 -> my_lcd_4bit(6), 
  3834 ;;  command         1   25[COMRAM] unsigned char 
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;  ret             1   26[COMRAM] unsigned char 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      unsigned char 
  3839 ;; Registers used:
  3840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3846 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;Total ram usage:        3 bytes
  3851 ;; Hardware stack levels used: 1
  3852 ;; Hardware stack levels required when called: 8
  3853 ;; This function calls:
  3854 ;;		_gpio_pin_write_logic
  3855 ;; This function is called by:
  3856 ;;		_lcd_4bit_send_command
  3857 ;;		_lcd_4bit_send_char_data
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text29
  3862   002306                     __ptext29:
  3863                           	callstack 0
  3864   002306                     _lcd_4bit_send:
  3865                           	callstack 19
  3866   002306                     
  3867                           ;mcc_generated_files/lcd/ecu_lcd.c: 274:     if(((void*)0) == lcd){
  3868   002306  5019               	movf	lcd_4bit_send@lcd^0,w,c
  3869   002308  A4D8               	btfss	status,2,c
  3870   00230A  EF89  F011         	goto	u2051
  3871   00230E  EF8B  F011         	goto	u2050
  3872   002312                     u2051:
  3873   002312  EF8F  F011         	goto	l4182
  3874   002316                     u2050:
  3875   002316                     
  3876                           ;mcc_generated_files/lcd/ecu_lcd.c: 275:         ret = 0X00;
  3877   002316  0E00               	movlw	0
  3878   002318  6E1B               	movwf	lcd_4bit_send@ret^0,c
  3879                           
  3880                           ;mcc_generated_files/lcd/ecu_lcd.c: 276:     }
  3881   00231A  EFB6  F011         	goto	l4184
  3882   00231E                     l4182:
  3883                           
  3884                           ;mcc_generated_files/lcd/ecu_lcd.c: 278:         ret = gpio_pin_write_logic(&(lcd->lcd_d
      +                          ata[0]), (command >> 0) & 0X01);
  3885   00231E  C019  F011         	movff	lcd_4bit_send@lcd,gpio_pin_write_logic@_pin_config
  3886   002322  501A               	movf	lcd_4bit_send@command^0,w,c
  3887   002324  0B01               	andlw	1
  3888   002326  6E12               	movwf	gpio_pin_write_logic@logic^0,c
  3889   002328  EC6C  F00B         	call	_gpio_pin_write_logic	;wreg free
  3890   00232C  6E1B               	movwf	lcd_4bit_send@ret^0,c
  3891                           
  3892                           ;mcc_generated_files/lcd/ecu_lcd.c: 279:         ret = gpio_pin_write_logic(&(lcd->lcd_d
      +                          ata[1]), (command >> 1) & 0X01);
  3893   00232E  2819               	incf	lcd_4bit_send@lcd^0,w,c
  3894   002330  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3895   002332  90D8               	bcf	status,0,c
  3896   002334  301A               	rrcf	lcd_4bit_send@command^0,w,c
  3897   002336  0B01               	andlw	1
  3898   002338  6E12               	movwf	gpio_pin_write_logic@logic^0,c
  3899   00233A  EC6C  F00B         	call	_gpio_pin_write_logic	;wreg free
  3900   00233E  6E1B               	movwf	lcd_4bit_send@ret^0,c
  3901                           
  3902                           ;mcc_generated_files/lcd/ecu_lcd.c: 280:         ret = gpio_pin_write_logic(&(lcd->lcd_d
      +                          ata[2]), (command >> 2) & 0X01);
  3903   002340  5019               	movf	lcd_4bit_send@lcd^0,w,c
  3904   002342  0F02               	addlw	2
  3905   002344  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3906   002346  401A               	rrncf	lcd_4bit_send@command^0,w,c
  3907   002348  42E8               	rrncf	wreg,f,c
  3908   00234A  0B3F               	andlw	63
  3909   00234C  0B01               	andlw	1
  3910   00234E  6E12               	movwf	gpio_pin_write_logic@logic^0,c
  3911   002350  EC6C  F00B         	call	_gpio_pin_write_logic	;wreg free
  3912   002354  6E1B               	movwf	lcd_4bit_send@ret^0,c
  3913                           
  3914                           ;mcc_generated_files/lcd/ecu_lcd.c: 281:         ret = gpio_pin_write_logic(&(lcd->lcd_d
      +                          ata[3]), (command >> 3) & 0X01);
  3915   002356  5019               	movf	lcd_4bit_send@lcd^0,w,c
  3916   002358  0F03               	addlw	3
  3917   00235A  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3918   00235C  381A               	swapf	lcd_4bit_send@command^0,w,c
  3919   00235E  46E8               	rlncf	wreg,f,c
  3920   002360  0B1F               	andlw	31
  3921   002362  0B01               	andlw	1
  3922   002364  6E12               	movwf	gpio_pin_write_logic@logic^0,c
  3923   002366  EC6C  F00B         	call	_gpio_pin_write_logic	;wreg free
  3924   00236A  6E1B               	movwf	lcd_4bit_send@ret^0,c
  3925   00236C                     l4184:
  3926                           
  3927                           ;mcc_generated_files/lcd/ecu_lcd.c: 283:     return ret;
  3928   00236C  501B               	movf	lcd_4bit_send@ret^0,w,c
  3929   00236E  0012               	return		;funcret
  3930   002370                     __end_of_lcd_4bit_send:
  3931                           	callstack 0
  3932                           
  3933 ;; *************** function _gpio_pin_write_logic *****************
  3934 ;; Defined at:
  3935 ;;		line 66 in file "mcc_generated_files/gpio/hal_gpio.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;  _pin_config     1   16[COMRAM] PTR const struct .
  3938 ;;		 -> my_lcd_4bit$lcd_data(4), my_lcd_4bit(6), 
  3939 ;;  logic           1   17[COMRAM] enum E3555
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;  ret             1   23[COMRAM] unsigned char 
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  1    wreg      unsigned char 
  3944 ;; Registers used:
  3945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3951 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3953 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;Total ram usage:        8 bytes
  3956 ;; Hardware stack levels used: 1
  3957 ;; Hardware stack levels required when called: 7
  3958 ;; This function calls:
  3959 ;;		Nothing
  3960 ;; This function is called by:
  3961 ;;		_lcd_4bit_send_command
  3962 ;;		_lcd_4bit_send_char_data
  3963 ;;		_lcd_4bit_send
  3964 ;;		_lcd_4bit_send_enable_signal
  3965 ;;		_gpio_pin_intialize
  3966 ;;		_lcd_8bit_send_command
  3967 ;;		_lcd_8bit_send_char_data
  3968 ;;		_lcd_8bit_send_enable_signal
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text30
  3973   0016D8                     __ptext30:
  3974                           	callstack 0
  3975   0016D8                     _gpio_pin_write_logic:
  3976                           	callstack 19
  3977   0016D8                     
  3978                           ;mcc_generated_files/gpio/hal_gpio.c: 67:     Std_ReturnType ret = 0x01;
  3979   0016D8  0E01               	movlw	1
  3980   0016DA  6E18               	movwf	gpio_pin_write_logic@ret^0,c
  3981                           
  3982                           ;mcc_generated_files/gpio/hal_gpio.c: 68:     if(logic){
  3983   0016DC  5012               	movf	gpio_pin_write_logic@logic^0,w,c
  3984   0016DE  B4D8               	btfsc	status,2,c
  3985   0016E0  EF74  F00B         	goto	u1791
  3986   0016E4  EF76  F00B         	goto	u1790
  3987   0016E8                     u1791:
  3988   0016E8  EF9E  F00B         	goto	l4016
  3989   0016EC                     u1790:
  3990   0016EC                     
  3991                           ;mcc_generated_files/gpio/hal_gpio.c: 69:         (*lat_registers[_pin_config->port] |= 
      +                          (1 << _pin_config->pin));
  3992   0016EC  5011               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3993   0016EE  6ED9               	movwf	fsr2l,c
  3994   0016F0  6ADA               	clrf	fsr2h,c
  3995   0016F2  30DF               	rrcf	223,w,c
  3996   0016F4  32E8               	rrcf	wreg,f,c
  3997   0016F6  32E8               	rrcf	wreg,f,c
  3998   0016F8  0B07               	andlw	7
  3999   0016FA  6E13               	movwf	??_gpio_pin_write_logic^0,c
  4000   0016FC  0E01               	movlw	1
  4001   0016FE  6E14               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4002   001700  2A13               	incf	??_gpio_pin_write_logic^0,f,c
  4003   001702  EF85  F00B         	goto	u1804
  4004   001706                     u1805:
  4005   001706  90D8               	bcf	status,0,c
  4006   001708  3614               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4007   00170A                     u1804:
  4008   00170A  2E13               	decfsz	??_gpio_pin_write_logic^0,f,c
  4009   00170C  EF83  F00B         	goto	u1805
  4010   001710  5011               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  4011   001712  6ED9               	movwf	fsr2l,c
  4012   001714  6ADA               	clrf	fsr2h,c
  4013   001716  50DF               	movf	223,w,c
  4014   001718  0B07               	andlw	7
  4015   00171A  0D02               	mullw	2
  4016   00171C  50F3               	movf	243,w,c
  4017   00171E  0FC4               	addlw	low _lat_registers
  4018   001720  6ED9               	movwf	fsr2l,c
  4019   001722  6ADA               	clrf	fsr2h,c
  4020   001724  CFDE F015          	movff	postinc2,??_gpio_pin_write_logic+2
  4021   001728  CFDD F016          	movff	postdec2,??_gpio_pin_write_logic+3
  4022   00172C  C015  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  4023   001730  C016  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  4024   001734  5014               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4025   001736  12DF               	iorwf	indf2,f,c
  4026                           
  4027                           ;mcc_generated_files/gpio/hal_gpio.c: 70:     }
  4028   001738  EFD3  F00B         	goto	l1264
  4029   00173C                     l4016:
  4030   00173C  5012               	movf	gpio_pin_write_logic@logic^0,w,c
  4031   00173E  A4D8               	btfss	status,2,c
  4032   001740  EFA4  F00B         	goto	u1811
  4033   001744  EFA6  F00B         	goto	u1810
  4034   001748                     u1811:
  4035   001748  EFD1  F00B         	goto	l4020
  4036   00174C                     u1810:
  4037   00174C                     
  4038                           ;mcc_generated_files/gpio/hal_gpio.c: 72:         (*lat_registers[_pin_config->port] &= 
      +                          ~(1 << _pin_config->pin));
  4039   00174C  5011               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  4040   00174E  6ED9               	movwf	fsr2l,c
  4041   001750  6ADA               	clrf	fsr2h,c
  4042   001752  30DF               	rrcf	223,w,c
  4043   001754  32E8               	rrcf	wreg,f,c
  4044   001756  32E8               	rrcf	wreg,f,c
  4045   001758  0B07               	andlw	7
  4046   00175A  6E13               	movwf	??_gpio_pin_write_logic^0,c
  4047   00175C  0E01               	movlw	1
  4048   00175E  6E14               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4049   001760  2A13               	incf	??_gpio_pin_write_logic^0,f,c
  4050   001762  EFB5  F00B         	goto	u1824
  4051   001766                     u1825:
  4052   001766  90D8               	bcf	status,0,c
  4053   001768  3614               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4054   00176A                     u1824:
  4055   00176A  2E13               	decfsz	??_gpio_pin_write_logic^0,f,c
  4056   00176C  EFB3  F00B         	goto	u1825
  4057   001770  5014               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4058   001772  0AFF               	xorlw	255
  4059   001774  6E15               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4060   001776  5011               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  4061   001778  6ED9               	movwf	fsr2l,c
  4062   00177A  6ADA               	clrf	fsr2h,c
  4063   00177C  50DF               	movf	223,w,c
  4064   00177E  0B07               	andlw	7
  4065   001780  0D02               	mullw	2
  4066   001782  50F3               	movf	243,w,c
  4067   001784  0FC4               	addlw	low _lat_registers
  4068   001786  6ED9               	movwf	fsr2l,c
  4069   001788  6ADA               	clrf	fsr2h,c
  4070   00178A  CFDE F016          	movff	postinc2,??_gpio_pin_write_logic+3
  4071   00178E  CFDD F017          	movff	postdec2,??_gpio_pin_write_logic+4
  4072   001792  C016  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  4073   001796  C017  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  4074   00179A  5015               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4075   00179C  16DF               	andwf	indf2,f,c
  4076                           
  4077                           ;mcc_generated_files/gpio/hal_gpio.c: 73:     }
  4078   00179E  EFD3  F00B         	goto	l1264
  4079   0017A2                     l4020:
  4080                           
  4081                           ;mcc_generated_files/gpio/hal_gpio.c: 75:         ret = 0X00;
  4082   0017A2  0E00               	movlw	0
  4083   0017A4  6E18               	movwf	gpio_pin_write_logic@ret^0,c
  4084   0017A6                     l1264:
  4085                           
  4086                           ;mcc_generated_files/gpio/hal_gpio.c: 77:     return ret;
  4087   0017A6  5018               	movf	gpio_pin_write_logic@ret^0,w,c
  4088   0017A8  0012               	return		;funcret
  4089   0017AA                     __end_of_gpio_pin_write_logic:
  4090                           	callstack 0
  4091                           
  4092 ;; *************** function _I2C_Write1Byte *****************
  4093 ;; Defined at:
  4094 ;;		line 101 in file "mcc_generated_files/i2c_client/src/i2c_master_example.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;  address         1    wreg     unsigned char 
  4097 ;;  reg             1   25[COMRAM] unsigned char 
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;  address         1   26[COMRAM] unsigned char 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4109 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;Total ram usage:        2 bytes
  4114 ;; Hardware stack levels used: 1
  4115 ;; Hardware stack levels required when called: 10
  4116 ;; This function calls:
  4117 ;;		_I2C_Close
  4118 ;;		_I2C_MasterWrite
  4119 ;;		_I2C_Open
  4120 ;;		_I2C_SetAddressNackCallback
  4121 ;;		_I2C_SetBuffer
  4122 ;; This function is called by:
  4123 ;;		_main
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text31
  4128   002692                     __ptext31:
  4129                           	callstack 0
  4130   002692                     _I2C_Write1Byte:
  4131                           	callstack 20
  4132                           
  4133                           ;incstack = 0
  4134                           ;I2C_Write1Byte@address stored from wreg
  4135   002692  6E1B               	movwf	I2C_Write1Byte@address^0,c
  4136   002694                     l4998:
  4137   002694  501B               	movf	I2C_Write1Byte@address^0,w,c
  4138   002696  ECC7  F00F         	call	_I2C_Open
  4139   00269A  0900               	iorlw	0
  4140   00269C  B4D8               	btfsc	status,2,c
  4141   00269E  EF53  F013         	goto	u2691
  4142   0026A2  EF55  F013         	goto	u2690
  4143   0026A6                     u2691:
  4144   0026A6  EF4A  F013         	goto	l4998
  4145   0026AA                     u2690:
  4146   0026AA                     
  4147                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 103:     I2C_SetBuffer(&reg,1)
      +                          ;
  4148   0026AA  0E1A               	movlw	low I2C_Write1Byte@reg
  4149   0026AC  6E11               	movwf	I2C_SetBuffer@buffer^0,c
  4150   0026AE  6A12               	clrf	(I2C_SetBuffer@buffer+1)^0,c
  4151   0026B0  0E00               	movlw	0
  4152   0026B2  6E14               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  4153   0026B4  0E01               	movlw	1
  4154   0026B6  6E13               	movwf	I2C_SetBuffer@bufferSize^0,c
  4155   0026B8  EC92  F015         	call	_I2C_SetBuffer	;wreg free
  4156   0026BC                     
  4157                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 104:     I2C_SetAddressNackCal
      +                          lback(((void*)0),((void*)0));
  4158   0026BC  0E00               	movlw	0
  4159   0026BE  6E16               	movwf	I2C_SetAddressNackCallback@cb^0,c
  4160   0026C0  0E00               	movlw	0
  4161   0026C2  6E17               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  4162   0026C4  0E00               	movlw	0
  4163   0026C6  6E18               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  4164   0026C8  0E00               	movlw	0
  4165   0026CA  6E19               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  4166   0026CC  EC26  F016         	call	_I2C_SetAddressNackCallback	;wreg free
  4167   0026D0                     
  4168                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 105:     I2C_MasterWrite();
  4169   0026D0  ECD4  F016         	call	_I2C_MasterWrite	;wreg free
  4170   0026D4                     l5006:
  4171   0026D4  ECFA  F014         	call	_I2C_Close	;wreg free
  4172   0026D8  06E8               	decf	wreg,f,c
  4173   0026DA  B4D8               	btfsc	status,2,c
  4174   0026DC  EF72  F013         	goto	u2701
  4175   0026E0  EF74  F013         	goto	u2700
  4176   0026E4                     u2701:
  4177   0026E4  EF6A  F013         	goto	l5006
  4178   0026E8                     u2700:
  4179   0026E8  0012               	return		;funcret
  4180   0026EA                     __end_of_I2C_Write1Byte:
  4181                           	callstack 0
  4182                           
  4183 ;; *************** function _Get_time_And_Date *****************
  4184 ;; Defined at:
  4185 ;;		line 13 in file "mcc_generated_files/DS1307/DS1307.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;		None
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;		None
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  6   31[COMRAM] struct .
  4192 ;; Registers used:
  4193 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4199 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;Total ram usage:        6 bytes
  4204 ;; Hardware stack levels used: 1
  4205 ;; Hardware stack levels required when called: 12
  4206 ;; This function calls:
  4207 ;;		_Get_days
  4208 ;;		_Get_hours
  4209 ;;		_Get_minutes
  4210 ;;		_Get_months
  4211 ;;		_Get_seconds
  4212 ;;		_Get_years
  4213 ;; This function is called by:
  4214 ;;		_main
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text32
  4219   0023DA                     __ptext32:
  4220                           	callstack 0
  4221   0023DA                     _Get_time_And_Date:
  4222                           	callstack 18
  4223   0023DA                     
  4224                           ;mcc_generated_files/DS1307/DS1307.c: 14:     DS1307_obj._Second = Get_seconds(0xD0, 0x0
      +                          0);
  4225   0023DA  0E00               	movlw	0
  4226   0023DC  6E1D               	movwf	Get_seconds@reg^0,c
  4227   0023DE  0ED0               	movlw	208
  4228   0023E0  EC5B  F016         	call	_Get_seconds
  4229   0023E4  0100               	movlb	0	; () banked
  4230   0023E6  6FA6               	movwf	(_DS1307_obj@DS1307$F91+2)& (0+255),b
  4231                           
  4232                           ;mcc_generated_files/DS1307/DS1307.c: 15:     DS1307_obj._Minute = Get_minutes(0xD0, 0x0
      +                          1);
  4233   0023E8  0E01               	movlw	1
  4234   0023EA  6E1D               	movwf	Get_minutes@reg^0,c
  4235   0023EC  0ED0               	movlw	208
  4236   0023EE  EC6D  F016         	call	_Get_minutes
  4237   0023F2  0100               	movlb	0	; () banked
  4238   0023F4  6FA5               	movwf	(_DS1307_obj@DS1307$F91+1)& (0+255),b
  4239                           
  4240                           ;mcc_generated_files/DS1307/DS1307.c: 16:     DS1307_obj._Hour = Get_hours(0xD0, 0x02);
  4241   0023F6  0E02               	movlw	2
  4242   0023F8  6E1D               	movwf	Get_hours@reg^0,c
  4243   0023FA  0ED0               	movlw	208
  4244   0023FC  EC76  F016         	call	_Get_hours
  4245   002400  0100               	movlb	0	; () banked
  4246   002402  6FA4               	movwf	_DS1307_obj@DS1307$F91& (0+255),b
  4247                           
  4248                           ;mcc_generated_files/DS1307/DS1307.c: 17:     DS1307_obj._Year = Get_years(0xD0, 0x06);
  4249   002404  0E06               	movlw	6
  4250   002406  6E1D               	movwf	Get_years@reg^0,c
  4251   002408  0ED0               	movlw	208
  4252   00240A  EC52  F016         	call	_Get_years
  4253   00240E  0100               	movlb	0	; () banked
  4254   002410  6FA7               	movwf	(_DS1307_obj@DS1307$F91+3)& (0+255),b
  4255                           
  4256                           ;mcc_generated_files/DS1307/DS1307.c: 18:     DS1307_obj._Month = Get_months(0xD0, 0x05)
      +                          ;
  4257   002412  0E05               	movlw	5
  4258   002414  6E1D               	movwf	Get_months@reg^0,c
  4259   002416  0ED0               	movlw	208
  4260   002418  EC64  F016         	call	_Get_months
  4261   00241C  0100               	movlb	0	; () banked
  4262   00241E  6FA8               	movwf	(_DS1307_obj@DS1307$F91+4)& (0+255),b
  4263                           
  4264                           ;mcc_generated_files/DS1307/DS1307.c: 19:     DS1307_obj._Day = Get_days(0xD0, 0x04);
  4265   002420  0E04               	movlw	4
  4266   002422  6E1D               	movwf	Get_days@reg^0,c
  4267   002424  0ED0               	movlw	208
  4268   002426  EC7F  F016         	call	_Get_days
  4269   00242A  0100               	movlb	0	; () banked
  4270   00242C  6FA9               	movwf	(_DS1307_obj@DS1307$F91+5)& (0+255),b
  4271   00242E                     
  4272                           ; BSR set to: 0
  4273                           ;mcc_generated_files/DS1307/DS1307.c: 20:     return DS1307_obj;
  4274   00242E  EE20  F0A4         	lfsr	2,_DS1307_obj@DS1307$F91
  4275   002432  EE00  F020         	lfsr	0,?_Get_time_And_Date
  4276   002436  0E05               	movlw	5
  4277   002438                     u2681:
  4278   002438  CFDB FFEB          	movff	plusw2,plusw0
  4279   00243C  06E8               	decf	wreg,f,c
  4280   00243E  E2FC               	bc	u2681
  4281   002440                     
  4282                           ; BSR set to: 0
  4283   002440  0012               	return		;funcret
  4284   002442                     __end_of_Get_time_And_Date:
  4285                           	callstack 0
  4286                           
  4287 ;; *************** function _Get_years *****************
  4288 ;; Defined at:
  4289 ;;		line 38 in file "mcc_generated_files/DS1307/DS1307.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  address         1    wreg     unsigned char 
  4292 ;;  reg             1   28[COMRAM] unsigned char 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  address         1   29[COMRAM] unsigned char 
  4295 ;;  years           1   30[COMRAM] unsigned char 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      unsigned char 
  4298 ;; Registers used:
  4299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4305 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4308 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;Total ram usage:        3 bytes
  4310 ;; Hardware stack levels used: 1
  4311 ;; Hardware stack levels required when called: 11
  4312 ;; This function calls:
  4313 ;;		_I2C_Read1ByteRegister
  4314 ;; This function is called by:
  4315 ;;		_Get_time_And_Date
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           	psect	text33
  4320   002CA4                     __ptext33:
  4321                           	callstack 0
  4322   002CA4                     _Get_years:
  4323                           	callstack 18
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;incstack = 0
  4327                           ;Get_years@address stored from wreg
  4328   002CA4  6E1E               	movwf	Get_years@address^0,c
  4329   002CA6                     
  4330                           ;mcc_generated_files/DS1307/DS1307.c: 39:     uint8_t years = I2C_Read1ByteRegister(addr
      +                          ess, reg);
  4331   002CA6  C01D  F01A         	movff	Get_years@reg,I2C_Read1ByteRegister@reg
  4332   002CAA  501E               	movf	Get_years@address^0,w,c
  4333   002CAC  ECDE  F010         	call	_I2C_Read1ByteRegister
  4334   002CB0  6E1F               	movwf	Get_years@years^0,c
  4335   002CB2                     
  4336                           ;mcc_generated_files/DS1307/DS1307.c: 40:     return years;
  4337   002CB2  501F               	movf	Get_years@years^0,w,c
  4338   002CB4  0012               	return		;funcret
  4339   002CB6                     __end_of_Get_years:
  4340                           	callstack 0
  4341                           
  4342 ;; *************** function _Get_seconds *****************
  4343 ;; Defined at:
  4344 ;;		line 23 in file "mcc_generated_files/DS1307/DS1307.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;  address         1    wreg     unsigned char 
  4347 ;;  reg             1   28[COMRAM] unsigned char 
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;  address         1   29[COMRAM] unsigned char 
  4350 ;;  seconds         1   30[COMRAM] unsigned char 
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  1    wreg      unsigned char 
  4353 ;; Registers used:
  4354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4360 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;Total ram usage:        3 bytes
  4365 ;; Hardware stack levels used: 1
  4366 ;; Hardware stack levels required when called: 11
  4367 ;; This function calls:
  4368 ;;		_I2C_Read1ByteRegister
  4369 ;; This function is called by:
  4370 ;;		_Get_time_And_Date
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           	psect	text34
  4375   002CB6                     __ptext34:
  4376                           	callstack 0
  4377   002CB6                     _Get_seconds:
  4378                           	callstack 18
  4379                           
  4380                           ;incstack = 0
  4381                           ;Get_seconds@address stored from wreg
  4382   002CB6  6E1E               	movwf	Get_seconds@address^0,c
  4383   002CB8                     
  4384                           ;mcc_generated_files/DS1307/DS1307.c: 24:     uint8_t seconds = I2C_Read1ByteRegister(ad
      +                          dress, reg);
  4385   002CB8  C01D  F01A         	movff	Get_seconds@reg,I2C_Read1ByteRegister@reg
  4386   002CBC  501E               	movf	Get_seconds@address^0,w,c
  4387   002CBE  ECDE  F010         	call	_I2C_Read1ByteRegister
  4388   002CC2  6E1F               	movwf	Get_seconds@seconds^0,c
  4389   002CC4                     
  4390                           ;mcc_generated_files/DS1307/DS1307.c: 25:     return seconds;
  4391   002CC4  501F               	movf	Get_seconds@seconds^0,w,c
  4392   002CC6  0012               	return		;funcret
  4393   002CC8                     __end_of_Get_seconds:
  4394                           	callstack 0
  4395                           
  4396 ;; *************** function _Get_months *****************
  4397 ;; Defined at:
  4398 ;;		line 43 in file "mcc_generated_files/DS1307/DS1307.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  address         1    wreg     unsigned char 
  4401 ;;  reg             1   28[COMRAM] unsigned char 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;  address         1   29[COMRAM] unsigned char 
  4404 ;;  months          1   30[COMRAM] unsigned char 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      unsigned char 
  4407 ;; Registers used:
  4408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4414 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;Total ram usage:        3 bytes
  4419 ;; Hardware stack levels used: 1
  4420 ;; Hardware stack levels required when called: 11
  4421 ;; This function calls:
  4422 ;;		_I2C_Read1ByteRegister
  4423 ;; This function is called by:
  4424 ;;		_Get_time_And_Date
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text35
  4429   002CC8                     __ptext35:
  4430                           	callstack 0
  4431   002CC8                     _Get_months:
  4432                           	callstack 18
  4433                           
  4434                           ;incstack = 0
  4435                           ;Get_months@address stored from wreg
  4436   002CC8  6E1E               	movwf	Get_months@address^0,c
  4437   002CCA                     
  4438                           ;mcc_generated_files/DS1307/DS1307.c: 44:     uint8_t months = I2C_Read1ByteRegister(add
      +                          ress, reg);
  4439   002CCA  C01D  F01A         	movff	Get_months@reg,I2C_Read1ByteRegister@reg
  4440   002CCE  501E               	movf	Get_months@address^0,w,c
  4441   002CD0  ECDE  F010         	call	_I2C_Read1ByteRegister
  4442   002CD4  6E1F               	movwf	Get_months@months^0,c
  4443   002CD6                     
  4444                           ;mcc_generated_files/DS1307/DS1307.c: 45:     return months;
  4445   002CD6  501F               	movf	Get_months@months^0,w,c
  4446   002CD8  0012               	return		;funcret
  4447   002CDA                     __end_of_Get_months:
  4448                           	callstack 0
  4449                           
  4450 ;; *************** function _Get_minutes *****************
  4451 ;; Defined at:
  4452 ;;		line 28 in file "mcc_generated_files/DS1307/DS1307.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  address         1    wreg     unsigned char 
  4455 ;;  reg             1   28[COMRAM] unsigned char 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;  address         1   29[COMRAM] unsigned char 
  4458 ;;  minutes         1   30[COMRAM] unsigned char 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      unsigned char 
  4461 ;; Registers used:
  4462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4468 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4471 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4472 ;;Total ram usage:        3 bytes
  4473 ;; Hardware stack levels used: 1
  4474 ;; Hardware stack levels required when called: 11
  4475 ;; This function calls:
  4476 ;;		_I2C_Read1ByteRegister
  4477 ;; This function is called by:
  4478 ;;		_Get_time_And_Date
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text36
  4483   002CDA                     __ptext36:
  4484                           	callstack 0
  4485   002CDA                     _Get_minutes:
  4486                           	callstack 18
  4487                           
  4488                           ;incstack = 0
  4489                           ;Get_minutes@address stored from wreg
  4490   002CDA  6E1E               	movwf	Get_minutes@address^0,c
  4491   002CDC                     
  4492                           ;mcc_generated_files/DS1307/DS1307.c: 29:     uint8_t minutes = I2C_Read1ByteRegister(ad
      +                          dress, reg);
  4493   002CDC  C01D  F01A         	movff	Get_minutes@reg,I2C_Read1ByteRegister@reg
  4494   002CE0  501E               	movf	Get_minutes@address^0,w,c
  4495   002CE2  ECDE  F010         	call	_I2C_Read1ByteRegister
  4496   002CE6  6E1F               	movwf	Get_minutes@minutes^0,c
  4497   002CE8                     
  4498                           ;mcc_generated_files/DS1307/DS1307.c: 30:     return minutes;
  4499   002CE8  501F               	movf	Get_minutes@minutes^0,w,c
  4500   002CEA  0012               	return		;funcret
  4501   002CEC                     __end_of_Get_minutes:
  4502                           	callstack 0
  4503                           
  4504 ;; *************** function _Get_hours *****************
  4505 ;; Defined at:
  4506 ;;		line 33 in file "mcc_generated_files/DS1307/DS1307.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  address         1    wreg     unsigned char 
  4509 ;;  reg             1   28[COMRAM] unsigned char 
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;  address         1   29[COMRAM] unsigned char 
  4512 ;;  hours           1   30[COMRAM] unsigned char 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  1    wreg      unsigned char 
  4515 ;; Registers used:
  4516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4522 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4525 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4526 ;;Total ram usage:        3 bytes
  4527 ;; Hardware stack levels used: 1
  4528 ;; Hardware stack levels required when called: 11
  4529 ;; This function calls:
  4530 ;;		_I2C_Read1ByteRegister
  4531 ;; This function is called by:
  4532 ;;		_Get_time_And_Date
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text37
  4537   002CEC                     __ptext37:
  4538                           	callstack 0
  4539   002CEC                     _Get_hours:
  4540                           	callstack 18
  4541                           
  4542                           ;incstack = 0
  4543                           ;Get_hours@address stored from wreg
  4544   002CEC  6E1E               	movwf	Get_hours@address^0,c
  4545   002CEE                     
  4546                           ;mcc_generated_files/DS1307/DS1307.c: 34:     uint8_t hours = I2C_Read1ByteRegister(addr
      +                          ess, reg);
  4547   002CEE  C01D  F01A         	movff	Get_hours@reg,I2C_Read1ByteRegister@reg
  4548   002CF2  501E               	movf	Get_hours@address^0,w,c
  4549   002CF4  ECDE  F010         	call	_I2C_Read1ByteRegister
  4550   002CF8  6E1F               	movwf	Get_hours@hours^0,c
  4551   002CFA                     
  4552                           ;mcc_generated_files/DS1307/DS1307.c: 35:     return hours;
  4553   002CFA  501F               	movf	Get_hours@hours^0,w,c
  4554   002CFC  0012               	return		;funcret
  4555   002CFE                     __end_of_Get_hours:
  4556                           	callstack 0
  4557                           
  4558 ;; *************** function _Get_days *****************
  4559 ;; Defined at:
  4560 ;;		line 48 in file "mcc_generated_files/DS1307/DS1307.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  address         1    wreg     unsigned char 
  4563 ;;  reg             1   28[COMRAM] unsigned char 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  address         1   29[COMRAM] unsigned char 
  4566 ;;  days            1   30[COMRAM] unsigned char 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  1    wreg      unsigned char 
  4569 ;; Registers used:
  4570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4576 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4577 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4579 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4580 ;;Total ram usage:        3 bytes
  4581 ;; Hardware stack levels used: 1
  4582 ;; Hardware stack levels required when called: 11
  4583 ;; This function calls:
  4584 ;;		_I2C_Read1ByteRegister
  4585 ;; This function is called by:
  4586 ;;		_Get_time_And_Date
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           	psect	text38
  4591   002CFE                     __ptext38:
  4592                           	callstack 0
  4593   002CFE                     _Get_days:
  4594                           	callstack 18
  4595                           
  4596                           ;incstack = 0
  4597                           ;Get_days@address stored from wreg
  4598   002CFE  6E1E               	movwf	Get_days@address^0,c
  4599   002D00                     
  4600                           ;mcc_generated_files/DS1307/DS1307.c: 49:     uint8_t days = I2C_Read1ByteRegister(addre
      +                          ss, reg);
  4601   002D00  C01D  F01A         	movff	Get_days@reg,I2C_Read1ByteRegister@reg
  4602   002D04  501E               	movf	Get_days@address^0,w,c
  4603   002D06  ECDE  F010         	call	_I2C_Read1ByteRegister
  4604   002D0A  6E1F               	movwf	Get_days@days^0,c
  4605   002D0C                     
  4606                           ;mcc_generated_files/DS1307/DS1307.c: 50:     return days;
  4607   002D0C  501F               	movf	Get_days@days^0,w,c
  4608   002D0E  0012               	return		;funcret
  4609   002D10                     __end_of_Get_days:
  4610                           	callstack 0
  4611                           
  4612 ;; *************** function _EX_EEPROM_Write_Byte *****************
  4613 ;; Defined at:
  4614 ;;		line 3 in file "mcc_generated_files/24C01C/24C01C.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  reg             1    wreg     unsigned char 
  4617 ;;  data            1   28[COMRAM] unsigned char 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  reg             1   29[COMRAM] unsigned char 
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      void 
  4622 ;; Registers used:
  4623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4629 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;Total ram usage:        2 bytes
  4634 ;; Hardware stack levels used: 1
  4635 ;; Hardware stack levels required when called: 11
  4636 ;; This function calls:
  4637 ;;		_I2C_Write1ByteRegister
  4638 ;; This function is called by:
  4639 ;;		_main
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text39
  4644   002D10                     __ptext39:
  4645                           	callstack 0
  4646   002D10                     _EX_EEPROM_Write_Byte:
  4647                           	callstack 19
  4648                           
  4649                           ;incstack = 0
  4650                           ;EX_EEPROM_Write_Byte@reg stored from wreg
  4651   002D10  6E1E               	movwf	EX_EEPROM_Write_Byte@reg^0,c
  4652   002D12                     
  4653                           ;mcc_generated_files/24C01C/24C01C.c: 4:     I2C_Write1ByteRegister(0xA2, reg, data);
  4654   002D12  C01E  F01A         	movff	EX_EEPROM_Write_Byte@reg,I2C_Write1ByteRegister@reg
  4655   002D16  C01D  F01B         	movff	EX_EEPROM_Write_Byte@data,I2C_Write1ByteRegister@data
  4656   002D1A  0EA2               	movlw	162
  4657   002D1C  ECB8  F011         	call	_I2C_Write1ByteRegister
  4658   002D20  0012               	return		;funcret
  4659   002D22                     __end_of_EX_EEPROM_Write_Byte:
  4660                           	callstack 0
  4661                           
  4662 ;; *************** function _I2C_Write1ByteRegister *****************
  4663 ;; Defined at:
  4664 ;;		line 91 in file "mcc_generated_files/i2c_client/src/i2c_master_example.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  address         1    wreg     unsigned char 
  4667 ;;  reg             1   25[COMRAM] unsigned char 
  4668 ;;  data            1   26[COMRAM] unsigned char 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;  address         1   27[COMRAM] unsigned char 
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  1    wreg      void 
  4673 ;; Registers used:
  4674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;Total ram usage:        3 bytes
  4685 ;; Hardware stack levels used: 1
  4686 ;; Hardware stack levels required when called: 10
  4687 ;; This function calls:
  4688 ;;		_I2C_Close
  4689 ;;		_I2C_MasterWrite
  4690 ;;		_I2C_Open
  4691 ;;		_I2C_SetAddressNackCallback
  4692 ;;		_I2C_SetBuffer
  4693 ;;		_I2C_SetDataCompleteCallback
  4694 ;; This function is called by:
  4695 ;;		_EX_EEPROM_Write_Byte
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text40
  4700   002370                     __ptext40:
  4701                           	callstack 0
  4702   002370                     _I2C_Write1ByteRegister:
  4703                           	callstack 19
  4704                           
  4705                           ;incstack = 0
  4706                           ;I2C_Write1ByteRegister@address stored from wreg
  4707   002370  6E1C               	movwf	I2C_Write1ByteRegister@address^0,c
  4708   002372                     l4788:
  4709   002372  501C               	movf	I2C_Write1ByteRegister@address^0,w,c
  4710   002374  ECC7  F00F         	call	_I2C_Open
  4711   002378  0900               	iorlw	0
  4712   00237A  B4D8               	btfsc	status,2,c
  4713   00237C  EFC2  F011         	goto	u2511
  4714   002380  EFC4  F011         	goto	u2510
  4715   002384                     u2511:
  4716   002384  EFB9  F011         	goto	l4788
  4717   002388                     u2510:
  4718   002388                     
  4719                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 94:     I2C_SetDataCompleteCal
      +                          lback(wr1RegCompleteHandler,&data);
  4720   002388  0E4C               	movlw	low _wr1RegCompleteHandler
  4721   00238A  6E16               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  4722   00238C  0E2A               	movlw	high _wr1RegCompleteHandler
  4723   00238E  6E17               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  4724   002390  0E1B               	movlw	low I2C_Write1ByteRegister@data
  4725   002392  6E18               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  4726   002394  6A19               	clrf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  4727   002396  EC1A  F016         	call	_I2C_SetDataCompleteCallback	;wreg free
  4728   00239A                     
  4729                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 95:     I2C_SetBuffer(&reg,1);
  4730   00239A  0E1A               	movlw	low I2C_Write1ByteRegister@reg
  4731   00239C  6E11               	movwf	I2C_SetBuffer@buffer^0,c
  4732   00239E  6A12               	clrf	(I2C_SetBuffer@buffer+1)^0,c
  4733   0023A0  0E00               	movlw	0
  4734   0023A2  6E14               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  4735   0023A4  0E01               	movlw	1
  4736   0023A6  6E13               	movwf	I2C_SetBuffer@bufferSize^0,c
  4737   0023A8  EC92  F015         	call	_I2C_SetBuffer	;wreg free
  4738   0023AC                     
  4739                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 96:     I2C_SetAddressNackCall
      +                          back(((void*)0),((void*)0));
  4740   0023AC  0E00               	movlw	0
  4741   0023AE  6E16               	movwf	I2C_SetAddressNackCallback@cb^0,c
  4742   0023B0  0E00               	movlw	0
  4743   0023B2  6E17               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  4744   0023B4  0E00               	movlw	0
  4745   0023B6  6E18               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  4746   0023B8  0E00               	movlw	0
  4747   0023BA  6E19               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  4748   0023BC  EC26  F016         	call	_I2C_SetAddressNackCallback	;wreg free
  4749   0023C0                     
  4750                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 97:     I2C_MasterWrite();
  4751   0023C0  ECD4  F016         	call	_I2C_MasterWrite	;wreg free
  4752   0023C4                     l4798:
  4753   0023C4  ECFA  F014         	call	_I2C_Close	;wreg free
  4754   0023C8  06E8               	decf	wreg,f,c
  4755   0023CA  B4D8               	btfsc	status,2,c
  4756   0023CC  EFEA  F011         	goto	u2521
  4757   0023D0  EFEC  F011         	goto	u2520
  4758   0023D4                     u2521:
  4759   0023D4  EFE2  F011         	goto	l4798
  4760   0023D8                     u2520:
  4761   0023D8  0012               	return		;funcret
  4762   0023DA                     __end_of_I2C_Write1ByteRegister:
  4763                           	callstack 0
  4764                           
  4765 ;; *************** function _EX_EEPROM_Read_Byte *****************
  4766 ;; Defined at:
  4767 ;;		line 7 in file "mcc_generated_files/24C01C/24C01C.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  reg             1    wreg     unsigned char 
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  reg             1   28[COMRAM] unsigned char 
  4772 ;;  received_dat    1   29[COMRAM] unsigned char 
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  1    wreg      unsigned char 
  4775 ;; Registers used:
  4776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;Total ram usage:        2 bytes
  4787 ;; Hardware stack levels used: 1
  4788 ;; Hardware stack levels required when called: 11
  4789 ;; This function calls:
  4790 ;;		_I2C_Read1ByteRegister
  4791 ;; This function is called by:
  4792 ;;		_main
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text41
  4797   002D22                     __ptext41:
  4798                           	callstack 0
  4799   002D22                     _EX_EEPROM_Read_Byte:
  4800                           	callstack 19
  4801                           
  4802                           ;incstack = 0
  4803                           ;EX_EEPROM_Read_Byte@reg stored from wreg
  4804   002D22  6E1D               	movwf	EX_EEPROM_Read_Byte@reg^0,c
  4805   002D24                     
  4806                           ;mcc_generated_files/24C01C/24C01C.c: 8:     uint8_t received_data = I2C_Read1ByteRegist
      +                          er(0xA3, reg);
  4807   002D24  C01D  F01A         	movff	EX_EEPROM_Read_Byte@reg,I2C_Read1ByteRegister@reg
  4808   002D28  0EA3               	movlw	163
  4809   002D2A  ECDE  F010         	call	_I2C_Read1ByteRegister
  4810   002D2E  6E1E               	movwf	EX_EEPROM_Read_Byte@received_data^0,c
  4811   002D30                     
  4812                           ;mcc_generated_files/24C01C/24C01C.c: 9:     return received_data;
  4813   002D30  501E               	movf	EX_EEPROM_Read_Byte@received_data^0,w,c
  4814   002D32  0012               	return		;funcret
  4815   002D34                     __end_of_EX_EEPROM_Read_Byte:
  4816                           	callstack 0
  4817                           
  4818 ;; *************** function _I2C_Read1ByteRegister *****************
  4819 ;; Defined at:
  4820 ;;		line 63 in file "mcc_generated_files/i2c_client/src/i2c_master_example.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  address         1    wreg     unsigned char 
  4823 ;;  reg             1   25[COMRAM] unsigned char 
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;  address         1   26[COMRAM] unsigned char 
  4826 ;;  returnValue     1   27[COMRAM] unsigned char 
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  1    wreg      unsigned char 
  4829 ;; Registers used:
  4830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4836 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;Total ram usage:        3 bytes
  4841 ;; Hardware stack levels used: 1
  4842 ;; Hardware stack levels required when called: 10
  4843 ;; This function calls:
  4844 ;;		_I2C_Close
  4845 ;;		_I2C_MasterWrite
  4846 ;;		_I2C_Open
  4847 ;;		_I2C_SetAddressNackCallback
  4848 ;;		_I2C_SetBuffer
  4849 ;;		_I2C_SetDataCompleteCallback
  4850 ;; This function is called by:
  4851 ;;		_EX_EEPROM_Read_Byte
  4852 ;;		_Get_seconds
  4853 ;;		_Get_minutes
  4854 ;;		_Get_hours
  4855 ;;		_Get_years
  4856 ;;		_Get_months
  4857 ;;		_Get_days
  4858 ;;		_Read_Temperature
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           	psect	text42
  4863   0021BC                     __ptext42:
  4864                           	callstack 0
  4865   0021BC                     _I2C_Read1ByteRegister:
  4866                           	callstack 19
  4867                           
  4868                           ;incstack = 0
  4869                           ;I2C_Read1ByteRegister@address stored from wreg
  4870   0021BC  6E1B               	movwf	I2C_Read1ByteRegister@address^0,c
  4871   0021BE                     
  4872                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 63: uint8_t I2C_Read1ByteRegis
      +                          ter(i2c_address_t address, uint8_t reg);mcc_generated_files/i2c_client/src/i2c_master_ex
      +                          ample.c: 64: {;mcc_generated_files/i2c_client/src/i2c_master_example.c: 65:     uint8_t 
      +                          returnValue = 0x00;
  4873   0021BE  0E00               	movlw	0
  4874   0021C0  6E1C               	movwf	I2C_Read1ByteRegister@returnValue^0,c
  4875   0021C2                     l4506:
  4876   0021C2  501B               	movf	I2C_Read1ByteRegister@address^0,w,c
  4877   0021C4  ECC7  F00F         	call	_I2C_Open
  4878   0021C8  0900               	iorlw	0
  4879   0021CA  B4D8               	btfsc	status,2,c
  4880   0021CC  EFEA  F010         	goto	u2291
  4881   0021D0  EFEC  F010         	goto	u2290
  4882   0021D4                     u2291:
  4883   0021D4  EFE1  F010         	goto	l4506
  4884   0021D8                     u2290:
  4885   0021D8                     
  4886                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 68:     I2C_SetDataCompleteCal
      +                          lback(rd1RegCompleteHandler,&returnValue);
  4887   0021D8  0EA4               	movlw	low _rd1RegCompleteHandler
  4888   0021DA  6E16               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  4889   0021DC  0E2A               	movlw	high _rd1RegCompleteHandler
  4890   0021DE  6E17               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  4891   0021E0  0E1C               	movlw	low I2C_Read1ByteRegister@returnValue
  4892   0021E2  6E18               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  4893   0021E4  6A19               	clrf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  4894   0021E6  EC1A  F016         	call	_I2C_SetDataCompleteCallback	;wreg free
  4895   0021EA                     
  4896                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 69:     I2C_SetBuffer(&reg,1);
  4897   0021EA  0E1A               	movlw	low I2C_Read1ByteRegister@reg
  4898   0021EC  6E11               	movwf	I2C_SetBuffer@buffer^0,c
  4899   0021EE  6A12               	clrf	(I2C_SetBuffer@buffer+1)^0,c
  4900   0021F0  0E00               	movlw	0
  4901   0021F2  6E14               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  4902   0021F4  0E01               	movlw	1
  4903   0021F6  6E13               	movwf	I2C_SetBuffer@bufferSize^0,c
  4904   0021F8  EC92  F015         	call	_I2C_SetBuffer	;wreg free
  4905   0021FC                     
  4906                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 70:     I2C_SetAddressNackCall
      +                          back(((void*)0),((void*)0));
  4907   0021FC  0E00               	movlw	0
  4908   0021FE  6E16               	movwf	I2C_SetAddressNackCallback@cb^0,c
  4909   002200  0E00               	movlw	0
  4910   002202  6E17               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  4911   002204  0E00               	movlw	0
  4912   002206  6E18               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  4913   002208  0E00               	movlw	0
  4914   00220A  6E19               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  4915   00220C  EC26  F016         	call	_I2C_SetAddressNackCallback	;wreg free
  4916   002210                     
  4917                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 71:     I2C_MasterWrite();
  4918   002210  ECD4  F016         	call	_I2C_MasterWrite	;wreg free
  4919   002214                     l4516:
  4920   002214  ECFA  F014         	call	_I2C_Close	;wreg free
  4921   002218  06E8               	decf	wreg,f,c
  4922   00221A  B4D8               	btfsc	status,2,c
  4923   00221C  EF12  F011         	goto	u2301
  4924   002220  EF14  F011         	goto	u2300
  4925   002224                     u2301:
  4926   002224  EF0A  F011         	goto	l4516
  4927   002228                     u2300:
  4928   002228                     
  4929                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 74:     return returnValue;
  4930   002228  501C               	movf	I2C_Read1ByteRegister@returnValue^0,w,c
  4931   00222A  0012               	return		;funcret
  4932   00222C                     __end_of_I2C_Read1ByteRegister:
  4933                           	callstack 0
  4934                           
  4935 ;; *************** function _I2C_SetDataCompleteCallback *****************
  4936 ;; Defined at:
  4937 ;;		line 274 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  cb              2   21[COMRAM] PTR FTN(PTR void ,)enum 
  4940 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  4941 ;;		 -> rd1RegCompleteHandler(1), NULL(1), 
  4942 ;;  ptr             2   23[COMRAM] PTR void 
  4943 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4944 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;		None
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4959 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4960 ;;Total ram usage:        4 bytes
  4961 ;; Hardware stack levels used: 1
  4962 ;; Hardware stack levels required when called: 8
  4963 ;; This function calls:
  4964 ;;		_I2C_SetCallback
  4965 ;; This function is called by:
  4966 ;;		_I2C_Read1ByteRegister
  4967 ;;		_I2C_Write1ByteRegister
  4968 ;;		_I2C_Read2ByteRegister
  4969 ;;		_I2C_Write2ByteRegister
  4970 ;;		_I2C_ReadDataBlock
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           	psect	text43
  4975   002C34                     __ptext43:
  4976                           	callstack 0
  4977   002C34                     _I2C_SetDataCompleteCallback:
  4978                           	callstack 20
  4979   002C34                     
  4980                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 274: void I2C_SetDataCompleteCallback(
      +                          i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_client/src/i2c_master.c: 275: {;mc
      +                          c_generated_files/i2c_client/src/i2c_master.c: 276:     I2C_SetCallback(I2C_DATA_COMPLET
      +                          E, cb, ptr);
  4981   002C34  C016  F011         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
  4982   002C38  C017  F012         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
  4983   002C3C  C018  F013         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
  4984   002C40  C019  F014         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
  4985   002C44  0E00               	movlw	0
  4986   002C46  EC21  F012         	call	_I2C_SetCallback
  4987   002C4A  0012               	return		;funcret
  4988   002C4C                     __end_of_I2C_SetDataCompleteCallback:
  4989                           	callstack 0
  4990                           
  4991 ;; *************** function _I2C_SetBuffer *****************
  4992 ;; Defined at:
  4993 ;;		line 264 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  buffer          2   16[COMRAM] PTR void 
  4996 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  4997 ;;		 -> I2C_Write1Byte@reg(1), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(
      +1), 
  4998 ;;		 -> I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), NULL(0
      +), 
  4999 ;;  bufferSize      2   18[COMRAM] unsigned int 
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;		None
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2, status,0
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;Total ram usage:        4 bytes
  5016 ;; Hardware stack levels used: 1
  5017 ;; Hardware stack levels required when called: 7
  5018 ;; This function calls:
  5019 ;;		Nothing
  5020 ;; This function is called by:
  5021 ;;		_I2C_Read1ByteRegister
  5022 ;;		_I2C_Write1ByteRegister
  5023 ;;		_I2C_Write1Byte
  5024 ;;		_I2C_Read2ByteRegister
  5025 ;;		_I2C_Write2ByteRegister
  5026 ;;		_I2C_WriteNBytes
  5027 ;;		_I2C_ReadNBytes
  5028 ;;		_I2C_ReadDataBlock
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text44
  5033   002B24                     __ptext44:
  5034                           	callstack 0
  5035   002B24                     _I2C_SetBuffer:
  5036                           	callstack 21
  5037   002B24                     
  5038                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, 
      +                          size_t bufferSize);mcc_generated_files/i2c_client/src/i2c_master.c: 265: {;mcc_generated
      +                          _files/i2c_client/src/i2c_master.c: 266:     if(I2C_Status.bufferFree)
  5039   002B24  0100               	movlb	0	; () banked
  5040   002B26  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
  5041   002B28  EF98  F015         	goto	u2251
  5042   002B2C  EF9A  F015         	goto	u2250
  5043   002B30                     u2251:
  5044   002B30  EFA3  F015         	goto	l187
  5045   002B34                     u2250:
  5046   002B34                     
  5047                           ; BSR set to: 0
  5048                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 267:     {;mcc_generated_files/i2c_cli
      +                          ent/src/i2c_master.c: 268:         I2C_Status.data_ptr = buffer;
  5049   002B34  C011  F07D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
  5050   002B38  C012  F07E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
  5051   002B3C                     
  5052                           ; BSR set to: 0
  5053                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 269:         I2C_Status.data_length = 
      +                          bufferSize;
  5054   002B3C  C013  F07F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
  5055   002B40  C014  F080         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  5056   002B44                     
  5057                           ; BSR set to: 0
  5058                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 270:         I2C_Status.bufferFree = 0
      +                          ;
  5059   002B44  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
  5060   002B46                     l187:
  5061                           
  5062                           ; BSR set to: 0
  5063   002B46  0012               	return		;funcret
  5064   002B48                     __end_of_I2C_SetBuffer:
  5065                           	callstack 0
  5066                           
  5067 ;; *************** function _I2C_SetAddressNackCallback *****************
  5068 ;; Defined at:
  5069 ;;		line 284 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  cb              2   21[COMRAM] PTR FTN(PTR void ,)enum 
  5072 ;;		 -> NULL(1), 
  5073 ;;  ptr             2   23[COMRAM] PTR void 
  5074 ;;		 -> NULL(0), 
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;		None
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  1    wreg      void 
  5079 ;; Registers used:
  5080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5086 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5089 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5090 ;;Total ram usage:        4 bytes
  5091 ;; Hardware stack levels used: 1
  5092 ;; Hardware stack levels required when called: 8
  5093 ;; This function calls:
  5094 ;;		_I2C_SetCallback
  5095 ;; This function is called by:
  5096 ;;		_I2C_Read1ByteRegister
  5097 ;;		_I2C_Write1ByteRegister
  5098 ;;		_I2C_Write1Byte
  5099 ;;		_I2C_Read2ByteRegister
  5100 ;;		_I2C_Write2ByteRegister
  5101 ;;		_I2C_WriteNBytes
  5102 ;;		_I2C_ReadDataBlock
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           	psect	text45
  5107   002C4C                     __ptext45:
  5108                           	callstack 0
  5109   002C4C                     _I2C_SetAddressNackCallback:
  5110                           	callstack 20
  5111   002C4C                     
  5112                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 284: void I2C_SetAddressNackCallback(i
      +                          2c_callback_t cb, void *ptr);mcc_generated_files/i2c_client/src/i2c_master.c: 285: {;mcc
      +                          _generated_files/i2c_client/src/i2c_master.c: 286:     I2C_SetCallback(I2C_ADDR_NACK, cb
      +                          , ptr);
  5113   002C4C  C016  F011         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  5114   002C50  C017  F012         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  5115   002C54  C018  F013         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  5116   002C58  C019  F014         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  5117   002C5C  0E02               	movlw	2
  5118   002C5E  EC21  F012         	call	_I2C_SetCallback
  5119   002C62  0012               	return		;funcret
  5120   002C64                     __end_of_I2C_SetAddressNackCallback:
  5121                           	callstack 0
  5122                           
  5123 ;; *************** function _I2C_SetCallback *****************
  5124 ;; Defined at:
  5125 ;;		line 304 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;  idx             1    wreg     enum E3152
  5128 ;;  cb              2   16[COMRAM] PTR FTN(PTR void ,)enum 
  5129 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  5130 ;;		 -> rd1RegCompleteHandler(1), NULL(1), 
  5131 ;;  ptr             2   18[COMRAM] PTR void 
  5132 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5133 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;  idx             1   20[COMRAM] enum E3152
  5136 ;; Return value:  Size  Location     Type
  5137 ;;                  1    wreg      void 
  5138 ;; Registers used:
  5139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5145 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5146 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5148 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5149 ;;Total ram usage:        5 bytes
  5150 ;; Hardware stack levels used: 1
  5151 ;; Hardware stack levels required when called: 7
  5152 ;; This function calls:
  5153 ;;		Nothing
  5154 ;; This function is called by:
  5155 ;;		_I2C_SetDataCompleteCallback
  5156 ;;		_I2C_SetAddressNackCallback
  5157 ;;		_I2C_SetWriteCollisionCallback
  5158 ;;		_I2C_SetDataNackCallback
  5159 ;;		_I2C_SetTimeoutCallback
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text46
  5164   002442                     __ptext46:
  5165                           	callstack 0
  5166   002442                     _I2C_SetCallback:
  5167                           	callstack 20
  5168                           
  5169                           ;incstack = 0
  5170                           ;I2C_SetCallback@idx stored from wreg
  5171   002442  6E15               	movwf	I2C_SetCallback@idx^0,c
  5172   002444                     
  5173                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 304: static void I2C_SetCallback(i2c_c
      +                          allbackIndex_t idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_client/src/i2c
      +                          _master.c: 305: {;mcc_generated_files/i2c_client/src/i2c_master.c: 306:     if(cb)
  5174   002444  5011               	movf	I2C_SetCallback@cb^0,w,c
  5175   002446  1012               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
  5176   002448  B4D8               	btfsc	status,2,c
  5177   00244A  EF29  F012         	goto	u2041
  5178   00244E  EF2B  F012         	goto	u2040
  5179   002452                     u2041:
  5180   002452  EF41  F012         	goto	l4170
  5181   002456                     u2040:
  5182   002456                     
  5183                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 307:     {;mcc_generated_files/i2c_cli
      +                          ent/src/i2c_master.c: 308:         I2C_Status.callbackTable[idx] = cb;
  5184   002456  5015               	movf	I2C_SetCallback@idx^0,w,c
  5185   002458  0D02               	mullw	2
  5186   00245A  50F3               	movf	243,w,c
  5187   00245C  0F60               	addlw	low _I2C_Status
  5188   00245E  6ED9               	movwf	fsr2l,c
  5189   002460  6ADA               	clrf	fsr2h,c
  5190   002462  C011  FFDE         	movff	I2C_SetCallback@cb,postinc2
  5191   002466  C012  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
  5192                           
  5193                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 309:         I2C_Status.callbackPayloa
      +                          d[idx] = ptr;
  5194   00246A  5015               	movf	I2C_SetCallback@idx^0,w,c
  5195   00246C  0D02               	mullw	2
  5196   00246E  50F3               	movf	243,w,c
  5197   002470  0F6C               	addlw	low (_I2C_Status+12)
  5198   002472  6ED9               	movwf	fsr2l,c
  5199   002474  6ADA               	clrf	fsr2h,c
  5200   002476  C013  FFDE         	movff	I2C_SetCallback@ptr,postinc2
  5201   00247A  C014  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
  5202                           
  5203                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 310:     }
  5204   00247E  EF53  F012         	goto	l210
  5205   002482                     l4170:
  5206                           
  5207                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 312:     {;mcc_generated_files/i2c_cli
      +                          ent/src/i2c_master.c: 313:         I2C_Status.callbackTable[idx] = I2C_CallbackReturnSto
      +                          p;
  5208   002482  5015               	movf	I2C_SetCallback@idx^0,w,c
  5209   002484  0D02               	mullw	2
  5210   002486  50F3               	movf	243,w,c
  5211   002488  0F60               	addlw	low _I2C_Status
  5212   00248A  6ED9               	movwf	fsr2l,c
  5213   00248C  6ADA               	clrf	fsr2h,c
  5214   00248E  0E48               	movlw	low _I2C_CallbackReturnStop
  5215   002490  6EDE               	movwf	postinc2,c
  5216   002492  0E2E               	movlw	high _I2C_CallbackReturnStop
  5217   002494  6EDD               	movwf	postdec2,c
  5218                           
  5219                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 314:         I2C_Status.callbackPayloa
      +                          d[idx] = ((void*)0);
  5220   002496  5015               	movf	I2C_SetCallback@idx^0,w,c
  5221   002498  0D02               	mullw	2
  5222   00249A  50F3               	movf	243,w,c
  5223   00249C  0F6C               	addlw	low (_I2C_Status+12)
  5224   00249E  6ED9               	movwf	fsr2l,c
  5225   0024A0  6ADA               	clrf	fsr2h,c
  5226   0024A2  6ADE               	clrf	postinc2,c
  5227   0024A4  6ADD               	clrf	postdec2,c
  5228   0024A6                     l210:
  5229   0024A6  0012               	return		;funcret
  5230   0024A8                     __end_of_I2C_SetCallback:
  5231                           	callstack 0
  5232                           
  5233 ;; *************** function _I2C_Open *****************
  5234 ;; Defined at:
  5235 ;;		line 176 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;  address         1    wreg     unsigned char 
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;  address         1   18[COMRAM] unsigned char 
  5240 ;;  returnValue     1   19[COMRAM] enum E358
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  1    wreg      enum E358
  5243 ;; Registers used:
  5244 ;;		wreg, status,2, status,0, cstack
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5251 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5254 ;;Total ram usage:        2 bytes
  5255 ;; Hardware stack levels used: 1
  5256 ;; Hardware stack levels required when called: 8
  5257 ;; This function calls:
  5258 ;;		_I2C_MasterClearIrq
  5259 ;;		_I2C_MasterEnableIrq
  5260 ;;		_I2C_MasterOpen
  5261 ;;		_I2C_SetInterruptHandler
  5262 ;; This function is called by:
  5263 ;;		_I2C_Read1ByteRegister
  5264 ;;		_I2C_Write1ByteRegister
  5265 ;;		_I2C_Write1Byte
  5266 ;;		_I2C_Read2ByteRegister
  5267 ;;		_I2C_Write2ByteRegister
  5268 ;;		_I2C_WriteNBytes
  5269 ;;		_I2C_ReadNBytes
  5270 ;;		_I2C_ReadDataBlock
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text47
  5275   001F8E                     __ptext47:
  5276                           	callstack 0
  5277   001F8E                     _I2C_Open:
  5278                           	callstack 20
  5279                           
  5280                           ;incstack = 0
  5281                           ;I2C_Open@address stored from wreg
  5282   001F8E  6E13               	movwf	I2C_Open@address^0,c
  5283   001F90                     
  5284                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_
      +                          t address);mcc_generated_files/i2c_client/src/i2c_master.c: 177: {;mcc_generated_files/i
      +                          2c_client/src/i2c_master.c: 178:     i2c_error_t returnValue = I2C_BUSY;
  5285   001F90  0E01               	movlw	1
  5286   001F92  6E14               	movwf	I2C_Open@returnValue^0,c
  5287   001F94                     
  5288                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 180:     if(!I2C_Status.inUse)
  5289   001F94  0100               	movlb	0	; () banked
  5290   001F96  B583               	btfsc	(_I2C_Status+35)& (0+255),2,b
  5291   001F98  EFD0  F00F         	goto	u2231
  5292   001F9C  EFD2  F00F         	goto	u2230
  5293   001FA0                     u2231:
  5294   001FA0  EF14  F010         	goto	l4350
  5295   001FA4                     u2230:
  5296   001FA4                     
  5297                           ; BSR set to: 0
  5298                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 181:     {;mcc_generated_files/i2c_cli
      +                          ent/src/i2c_master.c: 182:         I2C_Status.address = address;
  5299   001FA4  C013  F07C         	movff	I2C_Open@address,_I2C_Status+28
  5300   001FA8                     
  5301                           ; BSR set to: 0
  5302                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 183:         I2C_Status.busy = 0;
  5303   001FA8  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  5304   001FAA                     
  5305                           ; BSR set to: 0
  5306                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 184:         I2C_Status.inUse = 1;
  5307   001FAA  8583               	bsf	(_I2C_Status+35)& (0+255),2,b
  5308   001FAC                     
  5309                           ; BSR set to: 0
  5310                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 185:         I2C_Status.addressNackChe
      +                          ck = 0;
  5311   001FAC  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  5312   001FAE                     
  5313                           ; BSR set to: 0
  5314                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 186:         I2C_Status.state = I2C_RE
      +                          SET;
  5315   001FAE  0E0E               	movlw	14
  5316   001FB0  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  5317   001FB2                     
  5318                           ; BSR set to: 0
  5319                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 187:         I2C_Status.time_out_value
      +                           = 500;
  5320   001FB2  0E01               	movlw	1
  5321   001FB4  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
  5322   001FB6  0EF4               	movlw	244
  5323   001FB8  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
  5324   001FBA                     
  5325                           ; BSR set to: 0
  5326                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 188:         I2C_Status.bufferFree = 1
      +                          ;
  5327   001FBA  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  5328   001FBC                     
  5329                           ; BSR set to: 0
  5330                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 191:         I2C_Status.callbackTable[
      +                          I2C_DATA_COMPLETE]=I2C_CallbackReturnStop;
  5331   001FBC  0E48               	movlw	low _I2C_CallbackReturnStop
  5332   001FBE  6F60               	movwf	_I2C_Status& (0+255),b
  5333   001FC0  0E2E               	movlw	high _I2C_CallbackReturnStop
  5334   001FC2  6F61               	movwf	(_I2C_Status+1)& (0+255),b
  5335   001FC4                     
  5336                           ; BSR set to: 0
  5337                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 192:         I2C_Status.callbackPayloa
      +                          d[I2C_DATA_COMPLETE] = ((void*)0);
  5338   001FC4  0E00               	movlw	0
  5339   001FC6  6F6C               	movwf	(_I2C_Status+12)& (0+255),b
  5340   001FC8  0E00               	movlw	0
  5341   001FCA  6F6D               	movwf	(_I2C_Status+13)& (0+255),b
  5342   001FCC                     
  5343                           ; BSR set to: 0
  5344                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 193:         I2C_Status.callbackTable[
      +                          I2C_WRITE_COLLISION]=I2C_CallbackReturnStop;
  5345   001FCC  0E48               	movlw	low _I2C_CallbackReturnStop
  5346   001FCE  6F62               	movwf	(_I2C_Status+2)& (0+255),b
  5347   001FD0  0E2E               	movlw	high _I2C_CallbackReturnStop
  5348   001FD2  6F63               	movwf	(_I2C_Status+3)& (0+255),b
  5349   001FD4                     
  5350                           ; BSR set to: 0
  5351                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 194:         I2C_Status.callbackPayloa
      +                          d[I2C_WRITE_COLLISION] = ((void*)0);
  5352   001FD4  0E00               	movlw	0
  5353   001FD6  6F6E               	movwf	(_I2C_Status+14)& (0+255),b
  5354   001FD8  0E00               	movlw	0
  5355   001FDA  6F6F               	movwf	(_I2C_Status+15)& (0+255),b
  5356   001FDC                     
  5357                           ; BSR set to: 0
  5358                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 195:         I2C_Status.callbackTable[
      +                          I2C_ADDR_NACK]=I2C_CallbackReturnStop;
  5359   001FDC  0E48               	movlw	low _I2C_CallbackReturnStop
  5360   001FDE  6F64               	movwf	(_I2C_Status+4)& (0+255),b
  5361   001FE0  0E2E               	movlw	high _I2C_CallbackReturnStop
  5362   001FE2  6F65               	movwf	(_I2C_Status+5)& (0+255),b
  5363   001FE4                     
  5364                           ; BSR set to: 0
  5365                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 196:         I2C_Status.callbackPayloa
      +                          d[I2C_ADDR_NACK] = ((void*)0);
  5366   001FE4  0E00               	movlw	0
  5367   001FE6  6F70               	movwf	(_I2C_Status+16)& (0+255),b
  5368   001FE8  0E00               	movlw	0
  5369   001FEA  6F71               	movwf	(_I2C_Status+17)& (0+255),b
  5370   001FEC                     
  5371                           ; BSR set to: 0
  5372                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 197:         I2C_Status.callbackTable[
      +                          I2C_DATA_NACK]=I2C_CallbackReturnStop;
  5373   001FEC  0E48               	movlw	low _I2C_CallbackReturnStop
  5374   001FEE  6F66               	movwf	(_I2C_Status+6)& (0+255),b
  5375   001FF0  0E2E               	movlw	high _I2C_CallbackReturnStop
  5376   001FF2  6F67               	movwf	(_I2C_Status+7)& (0+255),b
  5377   001FF4                     
  5378                           ; BSR set to: 0
  5379                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 198:         I2C_Status.callbackPayloa
      +                          d[I2C_DATA_NACK] = ((void*)0);
  5380   001FF4  0E00               	movlw	0
  5381   001FF6  6F72               	movwf	(_I2C_Status+18)& (0+255),b
  5382   001FF8  0E00               	movlw	0
  5383   001FFA  6F73               	movwf	(_I2C_Status+19)& (0+255),b
  5384   001FFC                     
  5385                           ; BSR set to: 0
  5386                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 199:         I2C_Status.callbackTable[
      +                          I2C_TIMEOUT]=I2C_CallbackReturnReset;
  5387   001FFC  0E44               	movlw	low _I2C_CallbackReturnReset
  5388   001FFE  6F68               	movwf	(_I2C_Status+8)& (0+255),b
  5389   002000  0E2E               	movlw	high _I2C_CallbackReturnReset
  5390   002002  6F69               	movwf	(_I2C_Status+9)& (0+255),b
  5391   002004                     
  5392                           ; BSR set to: 0
  5393                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 200:         I2C_Status.callbackPayloa
      +                          d[I2C_TIMEOUT] = ((void*)0);
  5394   002004  0E00               	movlw	0
  5395   002006  6F74               	movwf	(_I2C_Status+20)& (0+255),b
  5396   002008  0E00               	movlw	0
  5397   00200A  6F75               	movwf	(_I2C_Status+21)& (0+255),b
  5398   00200C                     
  5399                           ; BSR set to: 0
  5400                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 202:         I2C_SetInterruptHandler(I
      +                          2C_MasterIsr);
  5401   00200C  0E06               	movlw	low _I2C_MasterIsr
  5402   00200E  6E11               	movwf	I2C_SetInterruptHandler@InterruptHandler^0,c
  5403   002010  0E2E               	movlw	high _I2C_MasterIsr
  5404   002012  6E12               	movwf	(I2C_SetInterruptHandler@InterruptHandler+1)^0,c
  5405   002014  ECCF  F016         	call	_I2C_SetInterruptHandler	;wreg free
  5406   002018                     
  5407                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 203:         I2C_MasterClearIrq();
  5408   002018  EC18  F017         	call	_I2C_MasterClearIrq	;wreg free
  5409   00201C                     
  5410                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 204:         I2C_MasterOpen();
  5411   00201C  ECB6  F015         	call	_I2C_MasterOpen	;wreg free
  5412   002020                     
  5413                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 205:         I2C_MasterEnableIrq();
  5414   002020  EC10  F017         	call	_I2C_MasterEnableIrq	;wreg free
  5415   002024                     
  5416                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 206:         returnValue = I2C_NOERR;
  5417   002024  0E00               	movlw	0
  5418   002026  6E14               	movwf	I2C_Open@returnValue^0,c
  5419   002028                     l4350:
  5420                           
  5421                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 208:     return returnValue;
  5422   002028  5014               	movf	I2C_Open@returnValue^0,w,c
  5423   00202A  0012               	return		;funcret
  5424   00202C                     __end_of_I2C_Open:
  5425                           	callstack 0
  5426                           
  5427 ;; *************** function _I2C_SetInterruptHandler *****************
  5428 ;; Defined at:
  5429 ;;		line 299 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  InterruptHan    2   16[COMRAM] PTR FTN()void 
  5432 ;;		 -> I2C_MasterIsr(1), 
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;		None
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  1    wreg      void 
  5437 ;; Registers used:
  5438 ;;		wreg, status,2, status,0
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5447 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;Total ram usage:        2 bytes
  5449 ;; Hardware stack levels used: 1
  5450 ;; Hardware stack levels required when called: 7
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_I2C_Open
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           	psect	text48
  5459   002D9E                     __ptext48:
  5460                           	callstack 0
  5461   002D9E                     _I2C_SetInterruptHandler:
  5462                           	callstack 20
  5463   002D9E                     
  5464                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 299: void I2C_SetInterruptHandler(void
      +                           (* InterruptHandler)(void));mcc_generated_files/i2c_client/src/i2c_master.c: 300: {;mcc
      +                          _generated_files/i2c_client/src/i2c_master.c: 301:     MSSP_InterruptHandler = Interrupt
      +                          Handler;
  5465   002D9E  C011  F04D         	movff	I2C_SetInterruptHandler@InterruptHandler,_MSSP_InterruptHandler
  5466   002DA2  C012  F04E         	movff	I2C_SetInterruptHandler@InterruptHandler+1,_MSSP_InterruptHandler+1
  5467   002DA6  0012               	return		;funcret
  5468   002DA8                     __end_of_I2C_SetInterruptHandler:
  5469                           	callstack 0
  5470                           
  5471 ;; *************** function _I2C_MasterOpen *****************
  5472 ;; Defined at:
  5473 ;;		line 544 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      _Bool 
  5480 ;; Registers used:
  5481 ;;		wreg, status,2
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5491 ;;Total ram usage:        0 bytes
  5492 ;; Hardware stack levels used: 1
  5493 ;; Hardware stack levels required when called: 7
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_I2C_Open
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text49
  5502   002B6C                     __ptext49:
  5503                           	callstack 0
  5504   002B6C                     _I2C_MasterOpen:
  5505                           	callstack 20
  5506   002B6C                     
  5507                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 546:     if(!SSPCON1bits.SSPEN)
  5508   002B6C  BAC6               	btfsc	198,5,c	;volatile
  5509   002B6E  EFBB  F015         	goto	u2011
  5510   002B72  EFBD  F015         	goto	u2010
  5511   002B76                     u2011:
  5512   002B76  EFC6  F015         	goto	l329
  5513   002B7A                     u2010:
  5514   002B7A                     
  5515                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 547:     {;mcc_generated_files/i2c_cli
      +                          ent/src/i2c_master.c: 548:         SSPSTAT = 0x80;
  5516   002B7A  0E80               	movlw	128
  5517   002B7C  6EC7               	movwf	199,c	;volatile
  5518                           
  5519                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 549:         SSPCON1 = 0x08;
  5520   002B7E  0E08               	movlw	8
  5521   002B80  6EC6               	movwf	198,c	;volatile
  5522                           
  5523                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 550:         SSPCON2 = 0x00;
  5524   002B82  0E00               	movlw	0
  5525   002B84  6EC5               	movwf	197,c	;volatile
  5526                           
  5527                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 551:         SSPADD = 0x27;
  5528   002B86  0E27               	movlw	39
  5529   002B88  6EC8               	movwf	200,c	;volatile
  5530   002B8A                     
  5531                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 552:         SSPCON1bits.SSPEN = 1;
  5532   002B8A  8AC6               	bsf	198,5,c	;volatile
  5533   002B8C                     l329:
  5534   002B8C  0012               	return		;funcret
  5535   002B8E                     __end_of_I2C_MasterOpen:
  5536                           	callstack 0
  5537                           
  5538 ;; *************** function _I2C_MasterEnableIrq *****************
  5539 ;; Defined at:
  5540 ;;		line 627 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;		None
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;		None
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  1    wreg      void 
  5547 ;; Registers used:
  5548 ;;		None
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5558 ;;Total ram usage:        0 bytes
  5559 ;; Hardware stack levels used: 1
  5560 ;; Hardware stack levels required when called: 7
  5561 ;; This function calls:
  5562 ;;		Nothing
  5563 ;; This function is called by:
  5564 ;;		_I2C_Open
  5565 ;;		_I2C_SetTimeOut
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text50
  5570   002E20                     __ptext50:
  5571                           	callstack 0
  5572   002E20                     _I2C_MasterEnableIrq:
  5573                           	callstack 20
  5574   002E20                     
  5575                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 629:     PIE1bits.SSPIE = 1;
  5576   002E20  869D               	bsf	157,3,c	;volatile
  5577   002E22  0012               	return		;funcret
  5578   002E24                     __end_of_I2C_MasterEnableIrq:
  5579                           	callstack 0
  5580                           
  5581 ;; *************** function _I2C_MasterWrite *****************
  5582 ;; Defined at:
  5583 ;;		line 252 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;		None
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  1    wreg      enum E358
  5590 ;; Registers used:
  5591 ;;		wreg, status,2, cstack
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5601 ;;Total ram usage:        0 bytes
  5602 ;; Hardware stack levels used: 1
  5603 ;; Hardware stack levels required when called: 9
  5604 ;; This function calls:
  5605 ;;		_I2C_MasterOperation
  5606 ;; This function is called by:
  5607 ;;		_I2C_Read1ByteRegister
  5608 ;;		_I2C_Write1ByteRegister
  5609 ;;		_I2C_Write1Byte
  5610 ;;		_I2C_Read2ByteRegister
  5611 ;;		_I2C_Write2ByteRegister
  5612 ;;		_I2C_WriteNBytes
  5613 ;;		_I2C_ReadDataBlock
  5614 ;; This function uses a non-reentrant model
  5615 ;;
  5616                           
  5617                           	psect	text51
  5618   002DA8                     __ptext51:
  5619                           	callstack 0
  5620   002DA8                     _I2C_MasterWrite:
  5621                           	callstack 19
  5622   002DA8                     
  5623                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 254:     return I2C_MasterOperation(0)
      +                          ;;	Return value of _I2C_MasterWrite is never used
  5624   002DA8  0E00               	movlw	0
  5625   002DAA  EC02  F014         	call	_I2C_MasterOperation
  5626   002DAE  0012               	return		;funcret
  5627   002DB0                     __end_of_I2C_MasterWrite:
  5628                           	callstack 0
  5629                           
  5630 ;; *************** function _I2C_MasterOperation *****************
  5631 ;; Defined at:
  5632 ;;		line 226 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;  read            1    wreg     _Bool 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  read            1   16[COMRAM] _Bool 
  5637 ;;  returnValue     1   17[COMRAM] enum E358
  5638 ;; Return value:  Size  Location     Type
  5639 ;;                  1    wreg      enum E358
  5640 ;; Registers used:
  5641 ;;		wreg, status,2, cstack
  5642 ;; Tracked objects:
  5643 ;;		On entry : 0/0
  5644 ;;		On exit  : 0/0
  5645 ;;		Unchanged: 0/0
  5646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5648 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5651 ;;Total ram usage:        2 bytes
  5652 ;; Hardware stack levels used: 1
  5653 ;; Hardware stack levels required when called: 8
  5654 ;; This function calls:
  5655 ;;		_I2C_MasterStart
  5656 ;; This function is called by:
  5657 ;;		_I2C_MasterWrite
  5658 ;;		_I2C_MasterRead
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text52
  5663   002804                     __ptext52:
  5664                           	callstack 0
  5665   002804                     _I2C_MasterOperation:
  5666                           	callstack 19
  5667                           
  5668                           ;incstack = 0
  5669                           ;I2C_MasterOperation@read stored from wreg
  5670   002804  6E11               	movwf	I2C_MasterOperation@read^0,c
  5671   002806                     
  5672                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 226: i2c_error_t I2C_MasterOperation(_
      +                          Bool read);mcc_generated_files/i2c_client/src/i2c_master.c: 227: {;mcc_generated_files/i
      +                          2c_client/src/i2c_master.c: 228:     i2c_error_t returnValue = I2C_BUSY;
  5673   002806  0E01               	movlw	1
  5674   002808  6E12               	movwf	I2C_MasterOperation@returnValue^0,c
  5675   00280A                     
  5676                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 229:     if(!I2C_Status.busy)
  5677   00280A  0100               	movlb	0	; () banked
  5678   00280C  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  5679   00280E  EF0B  F014         	goto	u2021
  5680   002812  EF0D  F014         	goto	u2020
  5681   002816                     u2021:
  5682   002816  EF20  F014         	goto	l4162
  5683   00281A                     u2020:
  5684   00281A                     
  5685                           ; BSR set to: 0
  5686                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 230:     {;mcc_generated_files/i2c_cli
      +                          ent/src/i2c_master.c: 231:         I2C_Status.busy = 1;
  5687   00281A  8383               	bsf	(_I2C_Status+35)& (0+255),1,b
  5688   00281C                     
  5689                           ; BSR set to: 0
  5690                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 232:         returnValue = I2C_NOERR;
  5691   00281C  0E00               	movlw	0
  5692   00281E  6E12               	movwf	I2C_MasterOperation@returnValue^0,c
  5693   002820                     
  5694                           ; BSR set to: 0
  5695                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 234:         if(read)
  5696   002820  5011               	movf	I2C_MasterOperation@read^0,w,c
  5697   002822  B4D8               	btfsc	status,2,c
  5698   002824  EF16  F014         	goto	u2031
  5699   002828  EF18  F014         	goto	u2030
  5700   00282C                     u2031:
  5701   00282C  EF1C  F014         	goto	l4158
  5702   002830                     u2030:
  5703   002830                     
  5704                           ; BSR set to: 0
  5705                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 235:         {;mcc_generated_files/i2c
      +                          _client/src/i2c_master.c: 236:             I2C_Status.state = I2C_SEND_ADR_READ;
  5706   002830  0E01               	movlw	1
  5707   002832  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  5708                           
  5709                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 237:         }
  5710   002834  EF1E  F014         	goto	l4160
  5711   002838                     l4158:
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 239:         {;mcc_generated_files/i2c
      +                          _client/src/i2c_master.c: 240:             I2C_Status.state = I2C_SEND_ADR_WRITE;
  5715   002838  0E02               	movlw	2
  5716   00283A  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  5717   00283C                     l4160:
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 242:         I2C_MasterStart();
  5721   00283C  EC12  F017         	call	_I2C_MasterStart	;wreg free
  5722   002840                     l4162:
  5723                           
  5724                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 244:     return returnValue;
  5725   002840  5012               	movf	I2C_MasterOperation@returnValue^0,w,c
  5726   002842  0012               	return		;funcret
  5727   002844                     __end_of_I2C_MasterOperation:
  5728                           	callstack 0
  5729                           
  5730 ;; *************** function _I2C_MasterStart *****************
  5731 ;; Defined at:
  5732 ;;		line 589 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;		None
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;		None
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  1    wreg      void 
  5739 ;; Registers used:
  5740 ;;		None
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5750 ;;Total ram usage:        0 bytes
  5751 ;; Hardware stack levels used: 1
  5752 ;; Hardware stack levels required when called: 7
  5753 ;; This function calls:
  5754 ;;		Nothing
  5755 ;; This function is called by:
  5756 ;;		_I2C_MasterOperation
  5757 ;; This function uses a non-reentrant model
  5758 ;;
  5759                           
  5760                           	psect	text53
  5761   002E24                     __ptext53:
  5762                           	callstack 0
  5763   002E24                     _I2C_MasterStart:
  5764                           	callstack 19
  5765   002E24                     
  5766                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 591:     SSPCON2bits.SEN = 1;
  5767   002E24  80C5               	bsf	197,0,c	;volatile
  5768   002E26  0012               	return		;funcret
  5769   002E28                     __end_of_I2C_MasterStart:
  5770                           	callstack 0
  5771                           
  5772 ;; *************** function _I2C_Close *****************
  5773 ;; Defined at:
  5774 ;;		line 211 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;		None
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;  returnValue     1   16[COMRAM] enum E358
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  1    wreg      enum E358
  5781 ;; Registers used:
  5782 ;;		wreg, status,2, cstack
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5792 ;;Total ram usage:        1 bytes
  5793 ;; Hardware stack levels used: 1
  5794 ;; Hardware stack levels required when called: 8
  5795 ;; This function calls:
  5796 ;;		_I2C_MasterClearIrq
  5797 ;;		_I2C_MasterClose
  5798 ;;		_I2C_MasterDisableIrq
  5799 ;; This function is called by:
  5800 ;;		_I2C_Read1ByteRegister
  5801 ;;		_I2C_Write1ByteRegister
  5802 ;;		_I2C_Write1Byte
  5803 ;;		_I2C_Read2ByteRegister
  5804 ;;		_I2C_Write2ByteRegister
  5805 ;;		_I2C_WriteNBytes
  5806 ;;		_I2C_ReadNBytes
  5807 ;;		_I2C_ReadDataBlock
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           	psect	text54
  5812   0029F4                     __ptext54:
  5813                           	callstack 0
  5814   0029F4                     _I2C_Close:
  5815                           	callstack 20
  5816   0029F4                     
  5817                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 213:     i2c_error_t returnValue = I2C
      +                          _BUSY;
  5818   0029F4  0E01               	movlw	1
  5819   0029F6  6E11               	movwf	I2C_Close@returnValue^0,c
  5820   0029F8                     
  5821                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 214:     if(!I2C_Status.busy)
  5822   0029F8  0100               	movlb	0	; () banked
  5823   0029FA  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  5824   0029FC  EF02  F015         	goto	u2241
  5825   002A00  EF04  F015         	goto	u2240
  5826   002A04                     u2241:
  5827   002A04  EF0E  F015         	goto	l4364
  5828   002A08                     u2240:
  5829   002A08                     
  5830                           ; BSR set to: 0
  5831                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 215:     {;mcc_generated_files/i2c_cli
      +                          ent/src/i2c_master.c: 216:         I2C_Status.inUse = 0;
  5832   002A08  9583               	bcf	(_I2C_Status+35)& (0+255),2,b
  5833                           
  5834                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 217:         I2C_Status.address = 0xff
      +                          ;
  5835   002A0A  697C               	setf	(_I2C_Status+28)& (0+255),b
  5836   002A0C                     
  5837                           ; BSR set to: 0
  5838                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 218:         I2C_MasterClearIrq();
  5839   002A0C  EC18  F017         	call	_I2C_MasterClearIrq	;wreg free
  5840                           
  5841                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 219:         I2C_MasterDisableIrq();
  5842   002A10  EC14  F017         	call	_I2C_MasterDisableIrq	;wreg free
  5843                           
  5844                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 220:         I2C_MasterClose();
  5845   002A14  EC16  F017         	call	_I2C_MasterClose	;wreg free
  5846   002A18                     
  5847                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 221:         returnValue = I2C_Status.
      +                          error;
  5848   002A18  C082  F011         	movff	_I2C_Status+34,I2C_Close@returnValue
  5849   002A1C                     l4364:
  5850                           
  5851                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 223:     return returnValue;
  5852   002A1C  5011               	movf	I2C_Close@returnValue^0,w,c
  5853   002A1E  0012               	return		;funcret
  5854   002A20                     __end_of_I2C_Close:
  5855                           	callstack 0
  5856                           
  5857 ;; *************** function _I2C_MasterDisableIrq *****************
  5858 ;; Defined at:
  5859 ;;		line 637 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;		None
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;		None
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  1    wreg      void 
  5866 ;; Registers used:
  5867 ;;		None
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5877 ;;Total ram usage:        0 bytes
  5878 ;; Hardware stack levels used: 1
  5879 ;; Hardware stack levels required when called: 7
  5880 ;; This function calls:
  5881 ;;		Nothing
  5882 ;; This function is called by:
  5883 ;;		_I2C_Close
  5884 ;;		_I2C_SetTimeOut
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           	psect	text55
  5889   002E28                     __ptext55:
  5890                           	callstack 0
  5891   002E28                     _I2C_MasterDisableIrq:
  5892                           	callstack 20
  5893   002E28                     
  5894                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 639:     PIE1bits.SSPIE = 0;
  5895   002E28  969D               	bcf	157,3,c	;volatile
  5896   002E2A  0012               	return		;funcret
  5897   002E2C                     __end_of_I2C_MasterDisableIrq:
  5898                           	callstack 0
  5899                           
  5900 ;; *************** function _I2C_MasterClose *****************
  5901 ;; Defined at:
  5902 ;;		line 558 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;		None
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;		None
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      void 
  5909 ;; Registers used:
  5910 ;;		None
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5920 ;;Total ram usage:        0 bytes
  5921 ;; Hardware stack levels used: 1
  5922 ;; Hardware stack levels required when called: 7
  5923 ;; This function calls:
  5924 ;;		Nothing
  5925 ;; This function is called by:
  5926 ;;		_I2C_Close
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           	psect	text56
  5931   002E2C                     __ptext56:
  5932                           	callstack 0
  5933   002E2C                     _I2C_MasterClose:
  5934                           	callstack 20
  5935   002E2C                     
  5936                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 561:     SSPCON1bits.SSPEN = 0;
  5937   002E2C  9AC6               	bcf	198,5,c	;volatile
  5938   002E2E  0012               	return		;funcret
  5939   002E30                     __end_of_I2C_MasterClose:
  5940                           	callstack 0
  5941                           
  5942 ;; *************** function _I2C_MasterClearIrq *****************
  5943 ;; Defined at:
  5944 ;;		line 642 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;		None
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;		None
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  1    wreg      void 
  5951 ;; Registers used:
  5952 ;;		None
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5962 ;;Total ram usage:        0 bytes
  5963 ;; Hardware stack levels used: 1
  5964 ;; Hardware stack levels required when called: 7
  5965 ;; This function calls:
  5966 ;;		Nothing
  5967 ;; This function is called by:
  5968 ;;		_I2C_Open
  5969 ;;		_I2C_Close
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           	psect	text57
  5974   002E30                     __ptext57:
  5975                           	callstack 0
  5976   002E30                     _I2C_MasterClearIrq:
  5977                           	callstack 20
  5978   002E30                     
  5979                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  5980   002E30  969E               	bcf	158,3,c	;volatile
  5981   002E32  0012               	return		;funcret
  5982   002E34                     __end_of_I2C_MasterClearIrq:
  5983                           	callstack 0
  5984                           
  5985 ;; *************** function _EUSART_Send_Time *****************
  5986 ;; Defined at:
  5987 ;;		line 146 in file "main.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;		None
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;		None
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  1    wreg      void 
  5994 ;; Registers used:
  5995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6003 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6004 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6005 ;;Total ram usage:        2 bytes
  6006 ;; Hardware stack levels used: 1
  6007 ;; Hardware stack levels required when called: 13
  6008 ;; This function calls:
  6009 ;;		_EUSART_IsTxReady
  6010 ;;		_EUSART_Send_String
  6011 ;;		_EUSART_Write
  6012 ;;		_convert_byte_to_str
  6013 ;; This function is called by:
  6014 ;;		_main
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	text58
  6019   001ABA                     __ptext58:
  6020                           	callstack 0
  6021   001ABA                     _EUSART_Send_Time:
  6022                           	callstack 17
  6023   001ABA                     
  6024                           ;main.c: 147:     EUSART_Send_String("Time : ");
  6025   001ABA  0EB2               	movlw	low (STR_3+1)
  6026   001ABC  6E15               	movwf	EUSART_Send_String@str^0,c
  6027   001ABE  5015               	movf	EUSART_Send_String@str^0,w,c
  6028   001AC0  A4D8               	btfss	status,2,c
  6029   001AC2  0E10               	movlw	high __smallconst
  6030   001AC4  6E16               	movwf	(EUSART_Send_String@str+1)^0,c
  6031   001AC6  EC61  F010         	call	_EUSART_Send_String	;wreg free
  6032   001ACA                     
  6033                           ;main.c: 148:     convert_byte_to_str(dummy_str, DS1307_obj._Hour);
  6034   001ACA  0E55               	movlw	low _dummy_str
  6035   001ACC  6E3F               	movwf	convert_byte_to_str@str^0,c
  6036   001ACE  C0B2  F040         	movff	_DS1307_obj,convert_byte_to_str@val
  6037   001AD2  EC10  F015         	call	_convert_byte_to_str	;wreg free
  6038   001AD6                     
  6039                           ;main.c: 149:     EUSART_Send_String(dummy_str);
  6040   001AD6  0E55               	movlw	low _dummy_str
  6041   001AD8  6E15               	movwf	EUSART_Send_String@str^0,c
  6042   001ADA  6A16               	clrf	(EUSART_Send_String@str+1)^0,c
  6043   001ADC  EC61  F010         	call	_EUSART_Send_String	;wreg free
  6044   001AE0                     l5164:
  6045   001AE0  EC7E  F015         	call	_EUSART_IsTxReady	;wreg free
  6046   001AE4  0900               	iorlw	0
  6047   001AE6  B4D8               	btfsc	status,2,c
  6048   001AE8  EF78  F00D         	goto	u2761
  6049   001AEC  EF7A  F00D         	goto	u2760
  6050   001AF0                     u2761:
  6051   001AF0  EF70  F00D         	goto	l5164
  6052   001AF4                     u2760:
  6053   001AF4                     
  6054                           ;main.c: 151:     EUSART_Write(':');
  6055   001AF4  0E3A               	movlw	58
  6056   001AF6  ECD8  F016         	call	_EUSART_Write
  6057   001AFA                     
  6058                           ;main.c: 152:     convert_byte_to_str(dummy_str, DS1307_obj._Minute);
  6059   001AFA  0E55               	movlw	low _dummy_str
  6060   001AFC  6E3F               	movwf	convert_byte_to_str@str^0,c
  6061   001AFE  C0B3  F040         	movff	_DS1307_obj+1,convert_byte_to_str@val
  6062   001B02  EC10  F015         	call	_convert_byte_to_str	;wreg free
  6063   001B06                     
  6064                           ;main.c: 153:     EUSART_Send_String(dummy_str);
  6065   001B06  0E55               	movlw	low _dummy_str
  6066   001B08  6E15               	movwf	EUSART_Send_String@str^0,c
  6067   001B0A  6A16               	clrf	(EUSART_Send_String@str+1)^0,c
  6068   001B0C  EC61  F010         	call	_EUSART_Send_String	;wreg free
  6069   001B10                     l5172:
  6070   001B10  EC7E  F015         	call	_EUSART_IsTxReady	;wreg free
  6071   001B14  0900               	iorlw	0
  6072   001B16  B4D8               	btfsc	status,2,c
  6073   001B18  EF90  F00D         	goto	u2771
  6074   001B1C  EF92  F00D         	goto	u2770
  6075   001B20                     u2771:
  6076   001B20  EF88  F00D         	goto	l5172
  6077   001B24                     u2770:
  6078   001B24                     
  6079                           ;main.c: 155:     EUSART_Write(':');
  6080   001B24  0E3A               	movlw	58
  6081   001B26  ECD8  F016         	call	_EUSART_Write
  6082   001B2A                     
  6083                           ;main.c: 156:     convert_byte_to_str(dummy_str, DS1307_obj._Second);
  6084   001B2A  0E55               	movlw	low _dummy_str
  6085   001B2C  6E3F               	movwf	convert_byte_to_str@str^0,c
  6086   001B2E  C0B4  F040         	movff	_DS1307_obj+2,convert_byte_to_str@val
  6087   001B32  EC10  F015         	call	_convert_byte_to_str	;wreg free
  6088   001B36                     
  6089                           ;main.c: 157:     EUSART_Send_String(dummy_str);
  6090   001B36  0E55               	movlw	low _dummy_str
  6091   001B38  6E15               	movwf	EUSART_Send_String@str^0,c
  6092   001B3A  6A16               	clrf	(EUSART_Send_String@str+1)^0,c
  6093   001B3C  EC61  F010         	call	_EUSART_Send_String	;wreg free
  6094   001B40                     l5180:
  6095   001B40  EC7E  F015         	call	_EUSART_IsTxReady	;wreg free
  6096   001B44  0900               	iorlw	0
  6097   001B46  B4D8               	btfsc	status,2,c
  6098   001B48  EFA8  F00D         	goto	u2781
  6099   001B4C  EFAA  F00D         	goto	u2780
  6100   001B50                     u2781:
  6101   001B50  EFA0  F00D         	goto	l5180
  6102   001B54                     u2780:
  6103   001B54                     
  6104                           ;main.c: 159:     EUSART_Write('\r');
  6105   001B54  0E0D               	movlw	13
  6106   001B56  ECD8  F016         	call	_EUSART_Write
  6107   001B5A                     
  6108                           ;main.c: 160:     _delay((unsigned long)((250)*(8000000/4000.0)));
  6109   001B5A  0E03               	movlw	3
  6110   001B5C  6E42               	movwf	(??_EUSART_Send_Time+1)^0,c
  6111   001B5E  0E8A               	movlw	138
  6112   001B60  6E41               	movwf	??_EUSART_Send_Time^0,c
  6113   001B62  0E56               	movlw	86
  6114   001B64                     u3517:
  6115   001B64  2EE8               	decfsz	wreg,f,c
  6116   001B66  D7FE               	bra	u3517
  6117   001B68  2E41               	decfsz	??_EUSART_Send_Time^0,f,c
  6118   001B6A  D7FC               	bra	u3517
  6119   001B6C  2E42               	decfsz	(??_EUSART_Send_Time+1)^0,f,c
  6120   001B6E  D7FA               	bra	u3517
  6121   001B70  0012               	return		;funcret
  6122   001B72                     __end_of_EUSART_Send_Time:
  6123                           	callstack 0
  6124                           
  6125 ;; *************** function _EUSART_Send_Temp *****************
  6126 ;; Defined at:
  6127 ;;		line 163 in file "main.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;		None
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;		None
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  1    wreg      void 
  6134 ;; Registers used:
  6135 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6145 ;;Total ram usage:        0 bytes
  6146 ;; Hardware stack levels used: 1
  6147 ;; Hardware stack levels required when called: 13
  6148 ;; This function calls:
  6149 ;;		_EUSART_IsTxReady
  6150 ;;		_EUSART_Send_String
  6151 ;;		_EUSART_Write
  6152 ;;		_convert_byte_to_str
  6153 ;; This function is called by:
  6154 ;;		_main
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158                           	psect	text59
  6159   00229A                     __ptext59:
  6160                           	callstack 0
  6161   00229A                     _EUSART_Send_Temp:
  6162                           	callstack 17
  6163   00229A                     
  6164                           ;main.c: 164:     EUSART_Send_String("Temperature : ");
  6165   00229A  0E78               	movlw	low (STR_1+1)
  6166   00229C  6E15               	movwf	EUSART_Send_String@str^0,c
  6167   00229E  5015               	movf	EUSART_Send_String@str^0,w,c
  6168   0022A0  A4D8               	btfss	status,2,c
  6169   0022A2  0E10               	movlw	high __smallconst
  6170   0022A4  6E16               	movwf	(EUSART_Send_String@str+1)^0,c
  6171   0022A6  EC61  F010         	call	_EUSART_Send_String	;wreg free
  6172   0022AA                     
  6173                           ;main.c: 165:     convert_byte_to_str(hex_str, TC74_Temp);
  6174   0022AA  0EB8               	movlw	low _hex_str
  6175   0022AC  6E3F               	movwf	convert_byte_to_str@str^0,c
  6176   0022AE  C051  F040         	movff	_TC74_Temp,convert_byte_to_str@val
  6177   0022B2  EC10  F015         	call	_convert_byte_to_str	;wreg free
  6178   0022B6                     
  6179                           ;main.c: 166:     EUSART_Send_String(hex_str);
  6180   0022B6  0EB8               	movlw	low _hex_str
  6181   0022B8  6E15               	movwf	EUSART_Send_String@str^0,c
  6182   0022BA  6A16               	clrf	(EUSART_Send_String@str+1)^0,c
  6183   0022BC  EC61  F010         	call	_EUSART_Send_String	;wreg free
  6184   0022C0                     l5192:
  6185   0022C0  EC7E  F015         	call	_EUSART_IsTxReady	;wreg free
  6186   0022C4  0900               	iorlw	0
  6187   0022C6  B4D8               	btfsc	status,2,c
  6188   0022C8  EF68  F011         	goto	u2791
  6189   0022CC  EF6A  F011         	goto	u2790
  6190   0022D0                     u2791:
  6191   0022D0  EF60  F011         	goto	l5192
  6192   0022D4                     u2790:
  6193   0022D4                     
  6194                           ;main.c: 168:     EUSART_Write('C');
  6195   0022D4  0E43               	movlw	67
  6196   0022D6  ECD8  F016         	call	_EUSART_Write
  6197   0022DA                     
  6198                           ;main.c: 169:     EUSART_Send_String(" (in hexa) ");
  6199   0022DA  0EA5               	movlw	low STR_8
  6200   0022DC  6E15               	movwf	EUSART_Send_String@str^0,c
  6201   0022DE  5015               	movf	EUSART_Send_String@str^0,w,c
  6202   0022E0  A4D8               	btfss	status,2,c
  6203   0022E2  0E10               	movlw	high __smallconst
  6204   0022E4  6E16               	movwf	(EUSART_Send_String@str+1)^0,c
  6205   0022E6  EC61  F010         	call	_EUSART_Send_String	;wreg free
  6206   0022EA                     l5198:
  6207   0022EA  EC7E  F015         	call	_EUSART_IsTxReady	;wreg free
  6208   0022EE  0900               	iorlw	0
  6209   0022F0  B4D8               	btfsc	status,2,c
  6210   0022F2  EF7D  F011         	goto	u2801
  6211   0022F6  EF7F  F011         	goto	u2800
  6212   0022FA                     u2801:
  6213   0022FA  EF75  F011         	goto	l5198
  6214   0022FE                     u2800:
  6215   0022FE                     
  6216                           ;main.c: 171:     EUSART_Write('\r');
  6217   0022FE  0E0D               	movlw	13
  6218   002300  ECD8  F016         	call	_EUSART_Write
  6219   002304  0012               	return		;funcret
  6220   002306                     __end_of_EUSART_Send_Temp:
  6221                           	callstack 0
  6222                           
  6223 ;; *************** function _EUSART_Send_Date *****************
  6224 ;; Defined at:
  6225 ;;		line 129 in file "main.c"
  6226 ;; Parameters:    Size  Location     Type
  6227 ;;		None
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;		None
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  1    wreg      void 
  6232 ;; Registers used:
  6233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;Total ram usage:        2 bytes
  6244 ;; Hardware stack levels used: 1
  6245 ;; Hardware stack levels required when called: 13
  6246 ;; This function calls:
  6247 ;;		_EUSART_IsTxReady
  6248 ;;		_EUSART_Send_String
  6249 ;;		_EUSART_Write
  6250 ;;		_convert_byte_to_str
  6251 ;; This function is called by:
  6252 ;;		_main
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           	psect	text60
  6257   001B72                     __ptext60:
  6258                           	callstack 0
  6259   001B72                     _EUSART_Send_Date:
  6260                           	callstack 17
  6261   001B72                     
  6262                           ;main.c: 130:     EUSART_Send_String("Date : ");
  6263   001B72  0EBB               	movlw	low (STR_2+1)
  6264   001B74  6E15               	movwf	EUSART_Send_String@str^0,c
  6265   001B76  5015               	movf	EUSART_Send_String@str^0,w,c
  6266   001B78  A4D8               	btfss	status,2,c
  6267   001B7A  0E10               	movlw	high __smallconst
  6268   001B7C  6E16               	movwf	(EUSART_Send_String@str+1)^0,c
  6269   001B7E  EC61  F010         	call	_EUSART_Send_String	;wreg free
  6270   001B82                     
  6271                           ;main.c: 131:     convert_byte_to_str(dummy_str, DS1307_obj._Day);
  6272   001B82  0E55               	movlw	low _dummy_str
  6273   001B84  6E3F               	movwf	convert_byte_to_str@str^0,c
  6274   001B86  C0B7  F040         	movff	_DS1307_obj+5,convert_byte_to_str@val
  6275   001B8A  EC10  F015         	call	_convert_byte_to_str	;wreg free
  6276   001B8E                     
  6277                           ;main.c: 132:     EUSART_Send_String(dummy_str);
  6278   001B8E  0E55               	movlw	low _dummy_str
  6279   001B90  6E15               	movwf	EUSART_Send_String@str^0,c
  6280   001B92  6A16               	clrf	(EUSART_Send_String@str+1)^0,c
  6281   001B94  EC61  F010         	call	_EUSART_Send_String	;wreg free
  6282   001B98                     l5136:
  6283   001B98  EC7E  F015         	call	_EUSART_IsTxReady	;wreg free
  6284   001B9C  0900               	iorlw	0
  6285   001B9E  B4D8               	btfsc	status,2,c
  6286   001BA0  EFD4  F00D         	goto	u2731
  6287   001BA4  EFD6  F00D         	goto	u2730
  6288   001BA8                     u2731:
  6289   001BA8  EFCC  F00D         	goto	l5136
  6290   001BAC                     u2730:
  6291   001BAC                     
  6292                           ;main.c: 134:     EUSART_Write('/');
  6293   001BAC  0E2F               	movlw	47
  6294   001BAE  ECD8  F016         	call	_EUSART_Write
  6295   001BB2                     
  6296                           ;main.c: 135:     convert_byte_to_str(dummy_str, DS1307_obj._Month);
  6297   001BB2  0E55               	movlw	low _dummy_str
  6298   001BB4  6E3F               	movwf	convert_byte_to_str@str^0,c
  6299   001BB6  C0B6  F040         	movff	_DS1307_obj+4,convert_byte_to_str@val
  6300   001BBA  EC10  F015         	call	_convert_byte_to_str	;wreg free
  6301   001BBE                     
  6302                           ;main.c: 136:     EUSART_Send_String(dummy_str);
  6303   001BBE  0E55               	movlw	low _dummy_str
  6304   001BC0  6E15               	movwf	EUSART_Send_String@str^0,c
  6305   001BC2  6A16               	clrf	(EUSART_Send_String@str+1)^0,c
  6306   001BC4  EC61  F010         	call	_EUSART_Send_String	;wreg free
  6307   001BC8                     l5144:
  6308   001BC8  EC7E  F015         	call	_EUSART_IsTxReady	;wreg free
  6309   001BCC  0900               	iorlw	0
  6310   001BCE  B4D8               	btfsc	status,2,c
  6311   001BD0  EFEC  F00D         	goto	u2741
  6312   001BD4  EFEE  F00D         	goto	u2740
  6313   001BD8                     u2741:
  6314   001BD8  EFE4  F00D         	goto	l5144
  6315   001BDC                     u2740:
  6316   001BDC                     
  6317                           ;main.c: 138:     EUSART_Write('/');
  6318   001BDC  0E2F               	movlw	47
  6319   001BDE  ECD8  F016         	call	_EUSART_Write
  6320   001BE2                     
  6321                           ;main.c: 139:     convert_byte_to_str(dummy_str, DS1307_obj._Year);
  6322   001BE2  0E55               	movlw	low _dummy_str
  6323   001BE4  6E3F               	movwf	convert_byte_to_str@str^0,c
  6324   001BE6  C0B5  F040         	movff	_DS1307_obj+3,convert_byte_to_str@val
  6325   001BEA  EC10  F015         	call	_convert_byte_to_str	;wreg free
  6326   001BEE                     
  6327                           ;main.c: 140:     EUSART_Send_String(dummy_str);
  6328   001BEE  0E55               	movlw	low _dummy_str
  6329   001BF0  6E15               	movwf	EUSART_Send_String@str^0,c
  6330   001BF2  6A16               	clrf	(EUSART_Send_String@str+1)^0,c
  6331   001BF4  EC61  F010         	call	_EUSART_Send_String	;wreg free
  6332   001BF8                     l5152:
  6333   001BF8  EC7E  F015         	call	_EUSART_IsTxReady	;wreg free
  6334   001BFC  0900               	iorlw	0
  6335   001BFE  B4D8               	btfsc	status,2,c
  6336   001C00  EF04  F00E         	goto	u2751
  6337   001C04  EF06  F00E         	goto	u2750
  6338   001C08                     u2751:
  6339   001C08  EFFC  F00D         	goto	l5152
  6340   001C0C                     u2750:
  6341   001C0C                     
  6342                           ;main.c: 142:     EUSART_Write('\r');
  6343   001C0C  0E0D               	movlw	13
  6344   001C0E  ECD8  F016         	call	_EUSART_Write
  6345   001C12                     
  6346                           ;main.c: 143:     _delay((unsigned long)((250)*(8000000/4000.0)));
  6347   001C12  0E03               	movlw	3
  6348   001C14  6E42               	movwf	(??_EUSART_Send_Date+1)^0,c
  6349   001C16  0E8A               	movlw	138
  6350   001C18  6E41               	movwf	??_EUSART_Send_Date^0,c
  6351   001C1A  0E56               	movlw	86
  6352   001C1C                     u3527:
  6353   001C1C  2EE8               	decfsz	wreg,f,c
  6354   001C1E  D7FE               	bra	u3527
  6355   001C20  2E41               	decfsz	??_EUSART_Send_Date^0,f,c
  6356   001C22  D7FC               	bra	u3527
  6357   001C24  2E42               	decfsz	(??_EUSART_Send_Date+1)^0,f,c
  6358   001C26  D7FA               	bra	u3527
  6359   001C28  0012               	return		;funcret
  6360   001C2A                     __end_of_EUSART_Send_Date:
  6361                           	callstack 0
  6362                           
  6363 ;; *************** function _convert_byte_to_str *****************
  6364 ;; Defined at:
  6365 ;;		line 174 in file "main.c"
  6366 ;; Parameters:    Size  Location     Type
  6367 ;;  str             1   62[COMRAM] PTR unsigned char 
  6368 ;;		 -> hex_str(2), dummy_str(2), 
  6369 ;;  val             1   63[COMRAM] unsigned char 
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;		None
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  1    wreg      void 
  6374 ;; Registers used:
  6375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6385 ;;Total ram usage:        2 bytes
  6386 ;; Hardware stack levels used: 1
  6387 ;; Hardware stack levels required when called: 12
  6388 ;; This function calls:
  6389 ;;		_memset
  6390 ;;		_sprintf
  6391 ;; This function is called by:
  6392 ;;		_EUSART_Send_Date
  6393 ;;		_EUSART_Send_Time
  6394 ;;		_EUSART_Send_Temp
  6395 ;;		_LCD_Print_Temperature
  6396 ;;		_LCD_Print_Date
  6397 ;;		_LCD_Print_Time
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           	psect	text61
  6402   002A20                     __ptext61:
  6403                           	callstack 0
  6404   002A20                     _convert_byte_to_str:
  6405                           	callstack 17
  6406   002A20                     
  6407                           ;main.c: 175:     memset(str, '\0', 3);
  6408   002A20  C03F  F011         	movff	convert_byte_to_str@str,memset@dest
  6409   002A24  0E00               	movlw	0
  6410   002A26  6E13               	movwf	(memset@c+1)^0,c
  6411   002A28  0E00               	movlw	0
  6412   002A2A  6E12               	movwf	memset@c^0,c
  6413   002A2C  0E00               	movlw	0
  6414   002A2E  6E15               	movwf	(memset@n+1)^0,c
  6415   002A30  0E03               	movlw	3
  6416   002A32  6E14               	movwf	memset@n^0,c
  6417   002A34  ECE2  F014         	call	_memset	;wreg free
  6418   002A38                     
  6419                           ;main.c: 176:     sprintf(str, "%x", val);
  6420   002A38  C03F  F02C         	movff	convert_byte_to_str@str,sprintf@s
  6421   002A3C  0EC6               	movlw	low STR_9
  6422   002A3E  6E2D               	movwf	sprintf@fmt^0,c
  6423   002A40  C040  F02E         	movff	convert_byte_to_str@val,?_sprintf+2
  6424   002A44  6A2F               	clrf	(?_sprintf+3)^0,c
  6425   002A46  EC96  F014         	call	_sprintf	;wreg free
  6426   002A4A  0012               	return		;funcret
  6427   002A4C                     __end_of_convert_byte_to_str:
  6428                           	callstack 0
  6429                           
  6430 ;; *************** function _sprintf *****************
  6431 ;; Defined at:
  6432 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;  s               1   43[COMRAM] PTR unsigned char 
  6435 ;;		 -> hex_str(2), dummy_str(2), 
  6436 ;;  fmt             1   44[COMRAM] PTR const unsigned char 
  6437 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_10(3), 
  6438 ;;		 -> STR_9(3), 
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;  f              12   50[COMRAM] struct _IO_FILE
  6441 ;;  ret             2    0        int 
  6442 ;;  ap              1   49[COMRAM] PTR void [1]
  6443 ;;		 -> ?_sprintf(2), 
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  2   43[COMRAM] int 
  6446 ;; Registers used:
  6447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6453 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6454 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6456 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6457 ;;Total ram usage:       19 bytes
  6458 ;; Hardware stack levels used: 1
  6459 ;; Hardware stack levels required when called: 11
  6460 ;; This function calls:
  6461 ;;		_vfprintf
  6462 ;; This function is called by:
  6463 ;;		_convert_byte_to_str
  6464 ;;		_convert_decimal_to_str
  6465 ;;		_covert_byte_to_str
  6466 ;;		_covert_short_to_str
  6467 ;;		_covert_int_to_str
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           	psect	text62
  6472   00292C                     __ptext62:
  6473                           	callstack 0
  6474   00292C                     _sprintf:
  6475                           	callstack 17
  6476   00292C  0E2E               	movlw	low (?_sprintf+2)
  6477   00292E  6E32               	movwf	sprintf@ap^0,c
  6478   002930  C02C  F033         	movff	sprintf@s,sprintf@f
  6479   002934  0E00               	movlw	0
  6480   002936  6E37               	movwf	(sprintf@f+4)^0,c
  6481   002938  0E00               	movlw	0
  6482   00293A  6E36               	movwf	(sprintf@f+3)^0,c
  6483   00293C  0E00               	movlw	0
  6484   00293E  6E3E               	movwf	(sprintf@f+11)^0,c
  6485   002940  0E00               	movlw	0
  6486   002942  6E3D               	movwf	(sprintf@f+10)^0,c
  6487   002944  0E33               	movlw	low sprintf@f
  6488   002946  6E28               	movwf	vfprintf@fp^0,c
  6489   002948  C02D  F029         	movff	sprintf@fmt,vfprintf@fmt
  6490   00294C  0E32               	movlw	low sprintf@ap
  6491   00294E  6E2A               	movwf	vfprintf@ap^0,c
  6492   002950  EC22  F014         	call	_vfprintf	;wreg free
  6493   002954  502C               	movf	sprintf@s^0,w,c
  6494   002956  2436               	addwf	(sprintf@f+3)^0,w,c
  6495   002958  6ED9               	movwf	fsr2l,c
  6496   00295A  6ADA               	clrf	fsr2h,c
  6497   00295C  6ADF               	clrf	indf2,c
  6498   00295E  0012               	return		;funcret
  6499   002960                     __end_of_sprintf:
  6500                           	callstack 0
  6501                           
  6502 ;; *************** function _vfprintf *****************
  6503 ;; Defined at:
  6504 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;  fp              1   39[COMRAM] PTR struct _IO_FILE
  6507 ;;		 -> sprintf@f(12), 
  6508 ;;  fmt             1   40[COMRAM] PTR const unsigned char 
  6509 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_10(3), 
  6510 ;;		 -> STR_9(3), 
  6511 ;;  ap              1   41[COMRAM] PTR PTR void 
  6512 ;;		 -> sprintf@ap(1), 
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;  cfmt            1   42[COMRAM] PTR unsigned char 
  6515 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_10(3), 
  6516 ;;		 -> STR_9(3), 
  6517 ;; Return value:  Size  Location     Type
  6518 ;;                  2   39[COMRAM] int 
  6519 ;; Registers used:
  6520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6521 ;; Tracked objects:
  6522 ;;		On entry : 0/0
  6523 ;;		On exit  : 0/0
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6526 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6529 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6530 ;;Total ram usage:        4 bytes
  6531 ;; Hardware stack levels used: 1
  6532 ;; Hardware stack levels required when called: 10
  6533 ;; This function calls:
  6534 ;;		_vfpfcnvrt
  6535 ;; This function is called by:
  6536 ;;		_sprintf
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540                           	psect	text63
  6541   002844                     __ptext63:
  6542                           	callstack 0
  6543   002844                     _vfprintf:
  6544                           	callstack 17
  6545   002844                     
  6546                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6547   002844  C029  F02B         	movff	vfprintf@fmt,vfprintf@cfmt
  6548                           
  6549                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6550   002848  EF2E  F014         	goto	l4498
  6551   00284C                     l4496:
  6552                           
  6553                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6554   00284C  C028  F01B         	movff	vfprintf@fp,vfpfcnvrt@fp
  6555   002850  0E2B               	movlw	low vfprintf@cfmt
  6556   002852  6E1C               	movwf	vfpfcnvrt@fmt^0,c
  6557   002854  C02A  F01D         	movff	vfprintf@ap,vfpfcnvrt@ap
  6558   002858  EC67  F008         	call	_vfpfcnvrt	;wreg free
  6559   00285C                     l4498:
  6560                           
  6561                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6562   00285C  C02B  FFF6         	movff	vfprintf@cfmt,tblptrl
  6563   002860                     	if	1	;There is more than 1 active tblptr byte
  6564   002860  0E10               	movlw	high __smallconst
  6565   002862  6EF7               	movwf	tblptrh,c
  6566   002864                     	endif
  6567   002864                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6568   002864  6AF8               	clrf	tblptru,c
  6569   002866                     	endif
  6570   002866                     	if	0	;tblptru may be non-zero
  6571   002866                     	endif
  6572   002866  0008               	tblrd		*
  6573   002868  50F5               	movf	tablat,w,c
  6574   00286A  0900               	iorlw	0
  6575   00286C  A4D8               	btfss	status,2,c
  6576   00286E  EF3B  F014         	goto	u2281
  6577   002872  EF3D  F014         	goto	u2280
  6578   002876                     u2281:
  6579   002876  EF26  F014         	goto	l4496
  6580   00287A                     u2280:
  6581   00287A                     
  6582                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6583   00287A  0E00               	movlw	0
  6584   00287C  6E29               	movwf	(?_vfprintf+1)^0,c
  6585   00287E  0E00               	movlw	0
  6586   002880  6E28               	movwf	?_vfprintf^0,c
  6587   002882  0012               	return		;funcret
  6588   002884                     __end_of_vfprintf:
  6589                           	callstack 0
  6590                           
  6591 ;; *************** function _vfpfcnvrt *****************
  6592 ;; Defined at:
  6593 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;  fp              1   26[COMRAM] PTR struct _IO_FILE
  6596 ;;		 -> sprintf@f(12), 
  6597 ;;  fmt             1   27[COMRAM] PTR PTR unsigned char 
  6598 ;;		 -> vfprintf@cfmt(1), 
  6599 ;;  ap              1   28[COMRAM] PTR PTR void 
  6600 ;;		 -> sprintf@ap(1), 
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;  convarg         4   34[COMRAM] struct .
  6603 ;;  c               1   38[COMRAM] unsigned char 
  6604 ;;  cp              1   33[COMRAM] PTR unsigned char 
  6605 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_10(3), 
  6606 ;;		 -> STR_9(3), 
  6607 ;;  x               1   32[COMRAM] unsigned char 
  6608 ;;  done            1   31[COMRAM] _Bool 
  6609 ;; Return value:  Size  Location     Type
  6610 ;;                  1    wreg      void 
  6611 ;; Registers used:
  6612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6613 ;; Tracked objects:
  6614 ;;		On entry : 0/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6618 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6619 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6621 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6622 ;;Total ram usage:       13 bytes
  6623 ;; Hardware stack levels used: 1
  6624 ;; Hardware stack levels required when called: 9
  6625 ;; This function calls:
  6626 ;;		___awdiv
  6627 ;;		___awmod
  6628 ;;		_abs
  6629 ;;		_fputc
  6630 ;; This function is called by:
  6631 ;;		_vfprintf
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           	psect	text64
  6636   0010CE                     __ptext64:
  6637                           	callstack 0
  6638   0010CE                     _vfpfcnvrt:
  6639                           	callstack 17
  6640   0010CE                     
  6641                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1194:  char x;
  6642   0010CE  501C               	movf	vfpfcnvrt@fmt^0,w,c
  6643   0010D0  6ED9               	movwf	fsr2l,c
  6644   0010D2  6ADA               	clrf	fsr2h,c
  6645   0010D4  CFDF FFF6          	movff	indf2,tblptrl
  6646   0010D8                     	if	1	;There is more than 1 active tblptr byte
  6647   0010D8  0E10               	movlw	high __smallconst
  6648   0010DA  6EF7               	movwf	tblptrh,c
  6649   0010DC                     	endif
  6650   0010DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6651   0010DC  6AF8               	clrf	tblptru,c
  6652   0010DE                     	endif
  6653   0010DE                     	if	0	;tblptru may be non-zero
  6654   0010DE                     	endif
  6655   0010DE  0008               	tblrd		*
  6656   0010E0  50F5               	movf	tablat,w,c
  6657   0010E2  0A25               	xorlw	37
  6658   0010E4  A4D8               	btfss	status,2,c
  6659   0010E6  EF77  F008         	goto	u2071
  6660   0010EA  EF79  F008         	goto	u2070
  6661   0010EE                     u2071:
  6662   0010EE  EFBD  F009         	goto	l4280
  6663   0010F2                     u2070:
  6664   0010F2                     
  6665                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  6666   0010F2  501C               	movf	vfpfcnvrt@fmt^0,w,c
  6667   0010F4  6ED9               	movwf	fsr2l,c
  6668   0010F6  6ADA               	clrf	fsr2h,c
  6669   0010F8  2ADF               	incf	indf2,f,c
  6670   0010FA                     
  6671                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  6672   0010FA  0E00               	movlw	0
  6673   0010FC  0100               	movlb	0	; () banked
  6674   0010FE  6FAB               	movwf	(_width+1)& (0+255),b
  6675   001100  0E00               	movlw	0
  6676   001102  6FAA               	movwf	_width& (0+255),b
  6677   001104  C0AA  F04F         	movff	_width,_flags
  6678   001108                     
  6679                           ; BSR set to: 0
  6680                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  6681   001108  69AC               	setf	_prec& (0+255),b
  6682   00110A  69AD               	setf	(_prec+1)& (0+255),b
  6683   00110C                     
  6684                           ; BSR set to: 0
  6685                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  6686   00110C  501C               	movf	vfpfcnvrt@fmt^0,w,c
  6687   00110E  6ED9               	movwf	fsr2l,c
  6688   001110  6ADA               	clrf	fsr2h,c
  6689   001112  50DF               	movf	indf2,w,c
  6690   001114  6E22               	movwf	vfpfcnvrt@cp^0,c
  6691   001116                     
  6692                           ; BSR set to: 0
  6693                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6694   001116  C022  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6695   00111A                     	if	1	;There is more than 1 active tblptr byte
  6696   00111A  0E10               	movlw	high __smallconst
  6697   00111C  6EF7               	movwf	tblptrh,c
  6698   00111E                     	endif
  6699   00111E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6700   00111E  6AF8               	clrf	tblptru,c
  6701   001120                     	endif
  6702   001120                     	if	0	;tblptru may be non-zero
  6703   001120                     	endif
  6704   001120  0008               	tblrd		*
  6705   001122  50F5               	movf	tablat,w,c
  6706   001124  0A64               	xorlw	100
  6707   001126  B4D8               	btfsc	status,2,c
  6708   001128  EF98  F008         	goto	u2081
  6709   00112C  EF9A  F008         	goto	u2080
  6710   001130                     u2081:
  6711   001130  EFA9  F008         	goto	l4216
  6712   001134                     u2080:
  6713   001134                     
  6714                           ; BSR set to: 0
  6715   001134  C022  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6716   001138                     	if	1	;There is more than 1 active tblptr byte
  6717   001138  0E10               	movlw	high __smallconst
  6718   00113A  6EF7               	movwf	tblptrh,c
  6719   00113C                     	endif
  6720   00113C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6721   00113C  6AF8               	clrf	tblptru,c
  6722   00113E                     	endif
  6723   00113E                     	if	0	;tblptru may be non-zero
  6724   00113E                     	endif
  6725   00113E  0008               	tblrd		*
  6726   001140  50F5               	movf	tablat,w,c
  6727   001142  0A69               	xorlw	105
  6728   001144  A4D8               	btfss	status,2,c
  6729   001146  EFA7  F008         	goto	u2091
  6730   00114A  EFA9  F008         	goto	u2090
  6731   00114E                     u2091:
  6732   00114E  EF2F  F009         	goto	l4242
  6733   001152                     u2090:
  6734   001152                     l4216:
  6735                           
  6736                           ; BSR set to: 0
  6737                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6738   001152  501D               	movf	vfpfcnvrt@ap^0,w,c
  6739   001154  6ED9               	movwf	fsr2l,c
  6740   001156  6ADA               	clrf	fsr2h,c
  6741   001158  0E02               	movlw	2
  6742   00115A  26DF               	addwf	indf2,f,c
  6743   00115C  5CDF               	subwf	indf2,w,c
  6744   00115E  6ED9               	movwf	fsr2l,c
  6745   001160  6ADA               	clrf	fsr2h,c
  6746   001162  CFDE F023          	movff	postinc2,vfpfcnvrt@convarg
  6747   001166  CFDE F024          	movff	postinc2,vfpfcnvrt@convarg+1
  6748   00116A                     
  6749                           ; BSR set to: 0
  6750                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  6751   00116A  501C               	movf	vfpfcnvrt@fmt^0,w,c
  6752   00116C  6ED9               	movwf	fsr2l,c
  6753   00116E  6ADA               	clrf	fsr2h,c
  6754   001170  2822               	incf	vfpfcnvrt@cp^0,w,c
  6755   001172  6EDF               	movwf	indf2,c
  6756   001174                     
  6757                           ; BSR set to: 0
  6758                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  6759   001174  0E20               	movlw	32
  6760   001176  6E27               	movwf	vfpfcnvrt@c^0,c
  6761                           
  6762                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  6763   001178  BE24               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  6764   00117A  EFC1  F008         	goto	u2101
  6765   00117E  EFC4  F008         	goto	u2100
  6766   001182                     u2101:
  6767   001182  0E01               	movlw	1
  6768   001184  EFC5  F008         	goto	u2110
  6769   001188                     u2100:
  6770   001188  0E00               	movlw	0
  6771   00118A                     u2110:
  6772   00118A  6E20               	movwf	vfpfcnvrt@done^0,c
  6773   00118C                     l4222:
  6774                           
  6775                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  6776   00118C  0627               	decf	vfpfcnvrt@c^0,f,c
  6777   00118E  5027               	movf	vfpfcnvrt@c^0,w,c
  6778   001190  0F84               	addlw	low _dbuf
  6779   001192  6ED9               	movwf	fsr2l,c
  6780   001194  6ADA               	clrf	fsr2h,c
  6781   001196  C023  F011         	movff	vfpfcnvrt@convarg,___awmod@dividend
  6782   00119A  C024  F012         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  6783   00119E  0E00               	movlw	0
  6784   0011A0  6E14               	movwf	(___awmod@divisor+1)^0,c
  6785   0011A2  0E0A               	movlw	10
  6786   0011A4  6E13               	movwf	___awmod@divisor^0,c
  6787   0011A6  ECC7  F00E         	call	___awmod	;wreg free
  6788   0011AA  C011  F017         	movff	?___awmod,abs@a
  6789   0011AE  C012  F018         	movff	?___awmod+1,abs@a+1
  6790   0011B2  ECB0  F014         	call	_abs	;wreg free
  6791   0011B6  5017               	movf	?_abs^0,w,c
  6792   0011B8  0F30               	addlw	48
  6793   0011BA  6EDF               	movwf	indf2,c
  6794   0011BC                     
  6795                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  6796   0011BC  C023  F011         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  6797   0011C0  C024  F012         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  6798   0011C4  0E00               	movlw	0
  6799   0011C6  6E14               	movwf	(___awdiv@divisor+1)^0,c
  6800   0011C8  0E0A               	movlw	10
  6801   0011CA  6E13               	movwf	___awdiv@divisor^0,c
  6802   0011CC  EC3D  F00C         	call	___awdiv	;wreg free
  6803   0011D0  C011  F023         	movff	?___awdiv,vfpfcnvrt@convarg
  6804   0011D4  C012  F024         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  6805   0011D8                     
  6806                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  6807   0011D8  5023               	movf	vfpfcnvrt@convarg^0,w,c
  6808   0011DA  1024               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  6809   0011DC  B4D8               	btfsc	status,2,c
  6810   0011DE  EFF3  F008         	goto	u2121
  6811   0011E2  EFF5  F008         	goto	u2120
  6812   0011E6                     u2121:
  6813   0011E6  EFFD  F008         	goto	l4230
  6814   0011EA                     u2120:
  6815   0011EA  5027               	movf	vfpfcnvrt@c^0,w,c
  6816   0011EC  A4D8               	btfss	status,2,c
  6817   0011EE  EFFB  F008         	goto	u2131
  6818   0011F2  EFFD  F008         	goto	u2130
  6819   0011F6                     u2131:
  6820   0011F6  EFC6  F008         	goto	l4222
  6821   0011FA                     u2130:
  6822   0011FA                     l4230:
  6823                           
  6824                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  6825   0011FA  5027               	movf	vfpfcnvrt@c^0,w,c
  6826   0011FC  B4D8               	btfsc	status,2,c
  6827   0011FE  EF03  F009         	goto	u2141
  6828   001202  EF05  F009         	goto	u2140
  6829   001206                     u2141:
  6830   001206  EF24  F009         	goto	l4240
  6831   00120A                     u2140:
  6832   00120A  5020               	movf	vfpfcnvrt@done^0,w,c
  6833   00120C  B4D8               	btfsc	status,2,c
  6834   00120E  EF0B  F009         	goto	u2151
  6835   001212  EF0D  F009         	goto	u2150
  6836   001216                     u2151:
  6837   001216  EF24  F009         	goto	l4240
  6838   00121A                     u2150:
  6839   00121A                     
  6840                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  6841   00121A  0627               	decf	vfpfcnvrt@c^0,f,c
  6842   00121C  5027               	movf	vfpfcnvrt@c^0,w,c
  6843   00121E  0F84               	addlw	low _dbuf
  6844   001220  6ED9               	movwf	fsr2l,c
  6845   001222  6ADA               	clrf	fsr2h,c
  6846   001224  0E2D               	movlw	45
  6847   001226  6EDF               	movwf	indf2,c
  6848   001228  EF24  F009         	goto	l4240
  6849   00122C                     l4236:
  6850                           
  6851                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  6852   00122C  5027               	movf	vfpfcnvrt@c^0,w,c
  6853   00122E  0F84               	addlw	low _dbuf
  6854   001230  6ED9               	movwf	fsr2l,c
  6855   001232  6ADA               	clrf	fsr2h,c
  6856   001234  50DF               	movf	indf2,w,c
  6857   001236  6E1E               	movwf	??_vfpfcnvrt^0,c
  6858   001238  501E               	movf	??_vfpfcnvrt^0,w,c
  6859   00123A  6E11               	movwf	fputc@c^0,c
  6860   00123C  6A12               	clrf	(fputc@c+1)^0,c
  6861   00123E  C01B  F013         	movff	vfpfcnvrt@fp,fputc@fp
  6862   001242  EC1F  F00F         	call	_fputc	;wreg free
  6863   001246  2A27               	incf	vfpfcnvrt@c^0,f,c
  6864   001248                     l4240:
  6865                           
  6866                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  6867   001248  0E20               	movlw	32
  6868   00124A  1827               	xorwf	vfpfcnvrt@c^0,w,c
  6869   00124C  A4D8               	btfss	status,2,c
  6870   00124E  EF2B  F009         	goto	u2161
  6871   001252  EF2D  F009         	goto	u2160
  6872   001256                     u2161:
  6873   001256  EF16  F009         	goto	l4236
  6874   00125A                     u2160:
  6875   00125A  EFCF  F009         	goto	l2031
  6876   00125E                     l4242:
  6877                           
  6878                           ; BSR set to: 0
  6879   00125E  C022  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6880   001262                     	if	1	;There is more than 1 active tblptr byte
  6881   001262  0E10               	movlw	high __smallconst
  6882   001264  6EF7               	movwf	tblptrh,c
  6883   001266                     	endif
  6884   001266                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6885   001266  6AF8               	clrf	tblptru,c
  6886   001268                     	endif
  6887   001268                     	if	0	;tblptru may be non-zero
  6888   001268                     	endif
  6889   001268  0008               	tblrd		*
  6890   00126A  50F5               	movf	tablat,w,c
  6891   00126C  0A78               	xorlw	120
  6892   00126E  A4D8               	btfss	status,2,c
  6893   001270  EF3C  F009         	goto	u2171
  6894   001274  EF3E  F009         	goto	u2170
  6895   001278                     u2171:
  6896   001278  EFB7  F009         	goto	l4276
  6897   00127C                     u2170:
  6898   00127C                     
  6899                           ; BSR set to: 0
  6900                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  6901   00127C  501D               	movf	vfpfcnvrt@ap^0,w,c
  6902   00127E  6ED9               	movwf	fsr2l,c
  6903   001280  6ADA               	clrf	fsr2h,c
  6904   001282  0E02               	movlw	2
  6905   001284  26DF               	addwf	indf2,f,c
  6906   001286  5CDF               	subwf	indf2,w,c
  6907   001288  6ED9               	movwf	fsr2l,c
  6908   00128A  6ADA               	clrf	fsr2h,c
  6909   00128C  CFDE F023          	movff	postinc2,vfpfcnvrt@convarg
  6910   001290  CFDE F024          	movff	postinc2,vfpfcnvrt@convarg+1
  6911   001294                     
  6912                           ; BSR set to: 0
  6913                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  6914   001294  501C               	movf	vfpfcnvrt@fmt^0,w,c
  6915   001296  6ED9               	movwf	fsr2l,c
  6916   001298  6ADA               	clrf	fsr2h,c
  6917   00129A  2822               	incf	vfpfcnvrt@cp^0,w,c
  6918   00129C  6EDF               	movwf	indf2,c
  6919                           
  6920                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  6921   00129E  EFA0  F009         	goto	l4274
  6922   0012A2                     l4248:
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1553:      c = si
      +                          zeof(dbuf);
  6926   0012A2  0E20               	movlw	32
  6927   0012A4  6E27               	movwf	vfpfcnvrt@c^0,c
  6928   0012A6                     l4250:
  6929                           
  6930                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1558:       x = (
      +                          convarg.uint & 0xf);
  6931   0012A6  5023               	movf	vfpfcnvrt@convarg^0,w,c
  6932   0012A8  0B0F               	andlw	15
  6933   0012AA  6E21               	movwf	vfpfcnvrt@x^0,c
  6934   0012AC                     
  6935                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1559:       if (x
      +                           < 10) {
  6936   0012AC  0E0A               	movlw	10
  6937   0012AE  6021               	cpfslt	vfpfcnvrt@x^0,c
  6938   0012B0  EF5C  F009         	goto	u2181
  6939   0012B4  EF5E  F009         	goto	u2180
  6940   0012B8                     u2181:
  6941   0012B8  EF62  F009         	goto	l4256
  6942   0012BC                     u2180:
  6943   0012BC                     
  6944                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1560:        x +=
      +                           '0';
  6945   0012BC  0E30               	movlw	48
  6946   0012BE  2621               	addwf	vfpfcnvrt@x^0,f,c
  6947                           
  6948                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1561:       }
  6949   0012C0  EF64  F009         	goto	l4258
  6950   0012C4                     l4256:
  6951                           
  6952                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1566:        x +=
      +                           'a' - 10;
  6953   0012C4  0E57               	movlw	87
  6954   0012C6  2621               	addwf	vfpfcnvrt@x^0,f,c
  6955   0012C8                     l4258:
  6956                           
  6957                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1571:       dbuf[
      +                          --c] = x;
  6958   0012C8  0627               	decf	vfpfcnvrt@c^0,f,c
  6959   0012CA  5027               	movf	vfpfcnvrt@c^0,w,c
  6960   0012CC  0F84               	addlw	low _dbuf
  6961   0012CE  6ED9               	movwf	fsr2l,c
  6962   0012D0  6ADA               	clrf	fsr2h,c
  6963   0012D2  C021  FFDF         	movff	vfpfcnvrt@x,indf2
  6964   0012D6                     
  6965                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1572:       conva
      +                          rg.uint >>= 4;
  6966   0012D6  3A23               	swapf	vfpfcnvrt@convarg^0,f,c
  6967   0012D8  3A24               	swapf	(vfpfcnvrt@convarg+1)^0,f,c
  6968   0012DA  0E0F               	movlw	15
  6969   0012DC  1623               	andwf	vfpfcnvrt@convarg^0,f,c
  6970   0012DE  5024               	movf	(vfpfcnvrt@convarg+1)^0,w,c
  6971   0012E0  0BF0               	andlw	240
  6972   0012E2  1223               	iorwf	vfpfcnvrt@convarg^0,f,c
  6973   0012E4  0E0F               	movlw	15
  6974   0012E6  1624               	andwf	(vfpfcnvrt@convarg+1)^0,f,c
  6975   0012E8                     
  6976                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1576:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  6977   0012E8  5023               	movf	vfpfcnvrt@convarg^0,w,c
  6978   0012EA  1024               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  6979   0012EC  B4D8               	btfsc	status,2,c
  6980   0012EE  EF7B  F009         	goto	u2191
  6981   0012F2  EF7D  F009         	goto	u2190
  6982   0012F6                     u2191:
  6983   0012F6  EF95  F009         	goto	l4270
  6984   0012FA                     u2190:
  6985   0012FA  5027               	movf	vfpfcnvrt@c^0,w,c
  6986   0012FC  A4D8               	btfss	status,2,c
  6987   0012FE  EF83  F009         	goto	u2201
  6988   001302  EF85  F009         	goto	u2200
  6989   001306                     u2201:
  6990   001306  EF53  F009         	goto	l4250
  6991   00130A                     u2200:
  6992   00130A  EF95  F009         	goto	l4270
  6993   00130E                     l4266:
  6994                           
  6995                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1578:       fputc
      +                          (dbuf[c++], fp);
  6996   00130E  5027               	movf	vfpfcnvrt@c^0,w,c
  6997   001310  0F84               	addlw	low _dbuf
  6998   001312  6ED9               	movwf	fsr2l,c
  6999   001314  6ADA               	clrf	fsr2h,c
  7000   001316  50DF               	movf	indf2,w,c
  7001   001318  6E1E               	movwf	??_vfpfcnvrt^0,c
  7002   00131A  501E               	movf	??_vfpfcnvrt^0,w,c
  7003   00131C  6E11               	movwf	fputc@c^0,c
  7004   00131E  6A12               	clrf	(fputc@c+1)^0,c
  7005   001320  C01B  F013         	movff	vfpfcnvrt@fp,fputc@fp
  7006   001324  EC1F  F00F         	call	_fputc	;wreg free
  7007   001328  2A27               	incf	vfpfcnvrt@c^0,f,c
  7008   00132A                     l4270:
  7009                           
  7010                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1577:      while 
      +                          (c != sizeof(dbuf)) {
  7011   00132A  0E20               	movlw	32
  7012   00132C  1827               	xorwf	vfpfcnvrt@c^0,w,c
  7013   00132E  A4D8               	btfss	status,2,c
  7014   001330  EF9C  F009         	goto	u2211
  7015   001334  EF9E  F009         	goto	u2210
  7016   001338                     u2211:
  7017   001338  EF87  F009         	goto	l4266
  7018   00133C                     u2210:
  7019   00133C  EFCF  F009         	goto	l2031
  7020   001340                     l4274:
  7021                           
  7022                           ; BSR set to: 0
  7023   001340  C022  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7024   001344                     	if	1	;There is more than 1 active tblptr byte
  7025   001344  0E10               	movlw	high __smallconst
  7026   001346  6EF7               	movwf	tblptrh,c
  7027   001348                     	endif
  7028   001348                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7029   001348  6AF8               	clrf	tblptru,c
  7030   00134A                     	endif
  7031   00134A                     	if	0	;tblptru may be non-zero
  7032   00134A                     	endif
  7033   00134A  0008               	tblrd		*
  7034   00134C  50F5               	movf	tablat,w,c
  7035   00134E  6E1E               	movwf	??_vfpfcnvrt^0,c
  7036   001350  6A1F               	clrf	(??_vfpfcnvrt+1)^0,c
  7037                           
  7038                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7039                           ; Switch size 1, requested type "simple"
  7040                           ; Number of cases is 1, Range of values is 0 to 0
  7041                           ; switch strategies available:
  7042                           ; Name         Instructions Cycles
  7043                           ; simple_byte            4     3 (average)
  7044                           ;	Chosen strategy is simple_byte
  7045   001352  501F               	movf	(??_vfpfcnvrt+1)^0,w,c
  7046   001354  0A00               	xorlw	0	; case 0
  7047   001356  B4D8               	btfsc	status,2,c
  7048   001358  EFB0  F009         	goto	l5842
  7049   00135C  EFB7  F009         	goto	l4276
  7050   001360                     l5842:
  7051                           
  7052                           ; BSR set to: 0
  7053                           ; Switch size 1, requested type "simple"
  7054                           ; Number of cases is 1, Range of values is 120 to 120
  7055                           ; switch strategies available:
  7056                           ; Name         Instructions Cycles
  7057                           ; simple_byte            4     3 (average)
  7058                           ;	Chosen strategy is simple_byte
  7059   001360  501E               	movf	??_vfpfcnvrt^0,w,c
  7060   001362  0A78               	xorlw	120	; case 120
  7061   001364  B4D8               	btfsc	status,2,c
  7062   001366  EF51  F009         	goto	l4248
  7063   00136A  EFB7  F009         	goto	l4276
  7064   00136E                     l4276:
  7065                           
  7066                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  7067   00136E  501C               	movf	vfpfcnvrt@fmt^0,w,c
  7068   001370  6ED9               	movwf	fsr2l,c
  7069   001372  6ADA               	clrf	fsr2h,c
  7070   001374  2ADF               	incf	indf2,f,c
  7071   001376  EFCF  F009         	goto	l2031
  7072   00137A                     l4280:
  7073                           
  7074                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  7075   00137A  501C               	movf	vfpfcnvrt@fmt^0,w,c
  7076   00137C  6ED9               	movwf	fsr2l,c
  7077   00137E  6ADA               	clrf	fsr2h,c
  7078   001380  CFDF FFF6          	movff	indf2,tblptrl
  7079   001384                     	if	1	;There is more than 1 active tblptr byte
  7080   001384  0E10               	movlw	high __smallconst
  7081   001386  6EF7               	movwf	tblptrh,c
  7082   001388                     	endif
  7083   001388                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7084   001388  6AF8               	clrf	tblptru,c
  7085   00138A                     	endif
  7086   00138A                     	if	0	;tblptru may be non-zero
  7087   00138A                     	endif
  7088   00138A  0008               	tblrd		*
  7089   00138C  50F5               	movf	tablat,w,c
  7090   00138E  6E11               	movwf	fputc@c^0,c
  7091   001390  6A12               	clrf	(fputc@c+1)^0,c
  7092   001392  C01B  F013         	movff	vfpfcnvrt@fp,fputc@fp
  7093   001396  EC1F  F00F         	call	_fputc	;wreg free
  7094   00139A  EFB7  F009         	goto	l4276
  7095   00139E                     l2031:
  7096   00139E  0012               	return		;funcret
  7097   0013A0                     __end_of_vfpfcnvrt:
  7098                           	callstack 0
  7099                           
  7100 ;; *************** function _fputc *****************
  7101 ;; Defined at:
  7102 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  c               2   16[COMRAM] int 
  7105 ;;  fp              1   18[COMRAM] PTR struct _IO_FILE
  7106 ;;		 -> sprintf@f(12), 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;		None
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  2   16[COMRAM] int 
  7111 ;; Registers used:
  7112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7118 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7120 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7122 ;;Total ram usage:        8 bytes
  7123 ;; Hardware stack levels used: 1
  7124 ;; Hardware stack levels required when called: 8
  7125 ;; This function calls:
  7126 ;;		_putch
  7127 ;; This function is called by:
  7128 ;;		_vfpfcnvrt
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132                           	psect	text65
  7133   001E3E                     __ptext65:
  7134                           	callstack 0
  7135   001E3E                     _fputc:
  7136                           	callstack 17
  7137   001E3E  5013               	movf	fputc@fp^0,w,c
  7138   001E40  B4D8               	btfsc	status,2,c
  7139   001E42  EF25  F00F         	goto	u1951
  7140   001E46  EF27  F00F         	goto	u1950
  7141   001E4A                     u1951:
  7142   001E4A  EF2F  F00F         	goto	l4108
  7143   001E4E                     u1950:
  7144   001E4E  5013               	movf	fputc@fp^0,w,c
  7145   001E50  A4D8               	btfss	status,2,c
  7146   001E52  EF2D  F00F         	goto	u1961
  7147   001E56  EF2F  F00F         	goto	u1960
  7148   001E5A                     u1961:
  7149   001E5A  EF34  F00F         	goto	l4110
  7150   001E5E                     u1960:
  7151   001E5E                     l4108:
  7152   001E5E  5011               	movf	fputc@c^0,w,c
  7153   001E60  EC2A  F017         	call	_putch
  7154   001E64  EF73  F00F         	goto	l2071
  7155   001E68                     l4110:
  7156   001E68  5013               	movf	fputc@fp^0,w,c
  7157   001E6A  6ED9               	movwf	fsr2l,c
  7158   001E6C  6ADA               	clrf	fsr2h,c
  7159   001E6E  0E0A               	movlw	10
  7160   001E70  26D9               	addwf	fsr2l,f,c
  7161   001E72  50DE               	movf	postinc2,w,c
  7162   001E74  10DE               	iorwf	postinc2,w,c
  7163   001E76  B4D8               	btfsc	status,2,c
  7164   001E78  EF40  F00F         	goto	u1971
  7165   001E7C  EF42  F00F         	goto	u1970
  7166   001E80                     u1971:
  7167   001E80  EF5B  F00F         	goto	l4114
  7168   001E84                     u1970:
  7169   001E84  5013               	movf	fputc@fp^0,w,c
  7170   001E86  6ED9               	movwf	fsr2l,c
  7171   001E88  6ADA               	clrf	fsr2h,c
  7172   001E8A  0E0A               	movlw	10
  7173   001E8C  26D9               	addwf	fsr2l,f,c
  7174   001E8E  5013               	movf	fputc@fp^0,w,c
  7175   001E90  6EE1               	movwf	fsr1l,c
  7176   001E92  6AE2               	clrf	fsr1h,c
  7177   001E94  0E03               	movlw	3
  7178   001E96  26E1               	addwf	fsr1l,f,c
  7179   001E98  50DE               	movf	postinc2,w,c
  7180   001E9A  5CE6               	subwf	postinc1,w,c
  7181   001E9C  50E6               	movf	postinc1,w,c
  7182   001E9E  0A80               	xorlw	128
  7183   001EA0  6E18               	movwf	(??_fputc+4)^0,c
  7184   001EA2  50DE               	movf	postinc2,w,c
  7185   001EA4  0A80               	xorlw	128
  7186   001EA6  5818               	subwfb	(??_fputc+4)^0,w,c
  7187   001EA8  B0D8               	btfsc	status,0,c
  7188   001EAA  EF59  F00F         	goto	u1981
  7189   001EAE  EF5B  F00F         	goto	u1980
  7190   001EB2                     u1981:
  7191   001EB2  EF73  F00F         	goto	l2071
  7192   001EB6                     u1980:
  7193   001EB6                     l4114:
  7194   001EB6  5013               	movf	fputc@fp^0,w,c
  7195   001EB8  6ED9               	movwf	fsr2l,c
  7196   001EBA  6ADA               	clrf	fsr2h,c
  7197   001EBC  0E03               	movlw	3
  7198   001EBE  26D9               	addwf	fsr2l,f,c
  7199   001EC0  50DF               	movf	indf2,w,c
  7200   001EC2  6E14               	movwf	??_fputc^0,c
  7201   001EC4  5013               	movf	fputc@fp^0,w,c
  7202   001EC6  6ED9               	movwf	fsr2l,c
  7203   001EC8  6ADA               	clrf	fsr2h,c
  7204   001ECA  50DF               	movf	indf2,w,c
  7205   001ECC  2414               	addwf	??_fputc^0,w,c
  7206   001ECE  6ED9               	movwf	fsr2l,c
  7207   001ED0  6ADA               	clrf	fsr2h,c
  7208   001ED2  C011  FFDF         	movff	fputc@c,indf2
  7209   001ED6  5013               	movf	fputc@fp^0,w,c
  7210   001ED8  6ED9               	movwf	fsr2l,c
  7211   001EDA  6ADA               	clrf	fsr2h,c
  7212   001EDC  0E03               	movlw	3
  7213   001EDE  26D9               	addwf	fsr2l,f,c
  7214   001EE0  2ADE               	incf	postinc2,f,c
  7215   001EE2  0E00               	movlw	0
  7216   001EE4  22DD               	addwfc	postdec2,f,c
  7217   001EE6                     l2071:
  7218   001EE6  0012               	return		;funcret
  7219   001EE8                     __end_of_fputc:
  7220                           	callstack 0
  7221                           
  7222 ;; *************** function _putch *****************
  7223 ;; Defined at:
  7224 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;  c               1    wreg     unsigned char 
  7227 ;; Auto vars:     Size  Location     Type
  7228 ;;  c               1    0[COMRAM] unsigned char 
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  1    wreg      void 
  7231 ;; Registers used:
  7232 ;;		wreg
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7242 ;;Total ram usage:        0 bytes
  7243 ;; Hardware stack levels used: 1
  7244 ;; Hardware stack levels required when called: 7
  7245 ;; This function calls:
  7246 ;;		Nothing
  7247 ;; This function is called by:
  7248 ;;		_fputc
  7249 ;; This function uses a non-reentrant model
  7250 ;;
  7251                           
  7252                           	psect	text66
  7253   002E54                     __ptext66:
  7254                           	callstack 0
  7255   002E54                     _putch:
  7256                           	callstack 17
  7257   002E54  0012               	return		;funcret
  7258   002E56                     __end_of_putch:
  7259                           	callstack 0
  7260                           
  7261 ;; *************** function _abs *****************
  7262 ;; Defined at:
  7263 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  7264 ;; Parameters:    Size  Location     Type
  7265 ;;  a               2   22[COMRAM] int 
  7266 ;; Auto vars:     Size  Location     Type
  7267 ;;		None
  7268 ;; Return value:  Size  Location     Type
  7269 ;;                  2   22[COMRAM] int 
  7270 ;; Registers used:
  7271 ;;		wreg, status,2, status,0
  7272 ;; Tracked objects:
  7273 ;;		On entry : 0/0
  7274 ;;		On exit  : 0/0
  7275 ;;		Unchanged: 0/0
  7276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7279 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7280 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7281 ;;Total ram usage:        4 bytes
  7282 ;; Hardware stack levels used: 1
  7283 ;; Hardware stack levels required when called: 7
  7284 ;; This function calls:
  7285 ;;		Nothing
  7286 ;; This function is called by:
  7287 ;;		_vfpfcnvrt
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290                           
  7291                           	psect	text67
  7292   002960                     __ptext67:
  7293                           	callstack 0
  7294   002960                     _abs:
  7295                           	callstack 18
  7296   002960  BE18               	btfsc	(abs@a+1)^0,7,c
  7297   002962  EFB5  F014         	goto	u1991
  7298   002966  EFB7  F014         	goto	u1990
  7299   00296A                     u1991:
  7300   00296A  EFBD  F014         	goto	l2056
  7301   00296E                     u1990:
  7302   00296E  C017  F017         	movff	abs@a,?_abs
  7303   002972  C018  F018         	movff	abs@a+1,?_abs+1
  7304   002976  EFC9  F014         	goto	l2059
  7305   00297A                     l2056:
  7306   00297A  C017  F019         	movff	abs@a,??_abs
  7307   00297E  C018  F01A         	movff	abs@a+1,??_abs+1
  7308   002982  1E19               	comf	??_abs^0,f,c
  7309   002984  1E1A               	comf	(??_abs+1)^0,f,c
  7310   002986  4A19               	infsnz	??_abs^0,f,c
  7311   002988  2A1A               	incf	(??_abs+1)^0,f,c
  7312   00298A  C019  F017         	movff	??_abs,?_abs
  7313   00298E  C01A  F018         	movff	??_abs+1,?_abs+1
  7314   002992                     l2059:
  7315   002992  0012               	return		;funcret
  7316   002994                     __end_of_abs:
  7317                           	callstack 0
  7318                           
  7319 ;; *************** function ___awmod *****************
  7320 ;; Defined at:
  7321 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;  dividend        2   16[COMRAM] int 
  7324 ;;  divisor         2   18[COMRAM] int 
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;  sign            1   21[COMRAM] unsigned char 
  7327 ;;  counter         1   20[COMRAM] unsigned char 
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  2   16[COMRAM] int 
  7330 ;; Registers used:
  7331 ;;		wreg, status,2, status,0
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7340 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7341 ;;Total ram usage:        6 bytes
  7342 ;; Hardware stack levels used: 1
  7343 ;; Hardware stack levels required when called: 7
  7344 ;; This function calls:
  7345 ;;		Nothing
  7346 ;; This function is called by:
  7347 ;;		_vfpfcnvrt
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           	psect	text68
  7352   001D8E                     __ptext68:
  7353                           	callstack 0
  7354   001D8E                     ___awmod:
  7355                           	callstack 18
  7356   001D8E  0E00               	movlw	0
  7357   001D90  6E16               	movwf	___awmod@sign^0,c
  7358   001D92  BE12               	btfsc	(___awmod@dividend+1)^0,7,c
  7359   001D94  EFD0  F00E         	goto	u1890
  7360   001D98  EFCE  F00E         	goto	u1891
  7361   001D9C                     u1891:
  7362   001D9C  EFD6  F00E         	goto	l4076
  7363   001DA0                     u1890:
  7364   001DA0  6C11               	negf	___awmod@dividend^0,c
  7365   001DA2  1E12               	comf	(___awmod@dividend+1)^0,f,c
  7366   001DA4  B0D8               	btfsc	status,0,c
  7367   001DA6  2A12               	incf	(___awmod@dividend+1)^0,f,c
  7368   001DA8  0E01               	movlw	1
  7369   001DAA  6E16               	movwf	___awmod@sign^0,c
  7370   001DAC                     l4076:
  7371   001DAC  BE14               	btfsc	(___awmod@divisor+1)^0,7,c
  7372   001DAE  EFDD  F00E         	goto	u1900
  7373   001DB2  EFDB  F00E         	goto	u1901
  7374   001DB6                     u1901:
  7375   001DB6  EFE1  F00E         	goto	l4080
  7376   001DBA                     u1900:
  7377   001DBA  6C13               	negf	___awmod@divisor^0,c
  7378   001DBC  1E14               	comf	(___awmod@divisor+1)^0,f,c
  7379   001DBE  B0D8               	btfsc	status,0,c
  7380   001DC0  2A14               	incf	(___awmod@divisor+1)^0,f,c
  7381   001DC2                     l4080:
  7382   001DC2  5013               	movf	___awmod@divisor^0,w,c
  7383   001DC4  1014               	iorwf	(___awmod@divisor+1)^0,w,c
  7384   001DC6  B4D8               	btfsc	status,2,c
  7385   001DC8  EFE8  F00E         	goto	u1911
  7386   001DCC  EFEA  F00E         	goto	u1910
  7387   001DD0                     u1911:
  7388   001DD0  EF0E  F00F         	goto	l4096
  7389   001DD4                     u1910:
  7390   001DD4  0E01               	movlw	1
  7391   001DD6  6E15               	movwf	___awmod@counter^0,c
  7392   001DD8  EFF2  F00E         	goto	l4086
  7393   001DDC                     l4084:
  7394   001DDC  90D8               	bcf	status,0,c
  7395   001DDE  3613               	rlcf	___awmod@divisor^0,f,c
  7396   001DE0  3614               	rlcf	(___awmod@divisor+1)^0,f,c
  7397   001DE2  2A15               	incf	___awmod@counter^0,f,c
  7398   001DE4                     l4086:
  7399   001DE4  AE14               	btfss	(___awmod@divisor+1)^0,7,c
  7400   001DE6  EFF7  F00E         	goto	u1921
  7401   001DEA  EFF9  F00E         	goto	u1920
  7402   001DEE                     u1921:
  7403   001DEE  EFEE  F00E         	goto	l4084
  7404   001DF2                     u1920:
  7405   001DF2                     l4088:
  7406   001DF2  5013               	movf	___awmod@divisor^0,w,c
  7407   001DF4  5C11               	subwf	___awmod@dividend^0,w,c
  7408   001DF6  5014               	movf	(___awmod@divisor+1)^0,w,c
  7409   001DF8  5812               	subwfb	(___awmod@dividend+1)^0,w,c
  7410   001DFA  A0D8               	btfss	status,0,c
  7411   001DFC  EF02  F00F         	goto	u1931
  7412   001E00  EF04  F00F         	goto	u1930
  7413   001E04                     u1931:
  7414   001E04  EF08  F00F         	goto	l4092
  7415   001E08                     u1930:
  7416   001E08  5013               	movf	___awmod@divisor^0,w,c
  7417   001E0A  5E11               	subwf	___awmod@dividend^0,f,c
  7418   001E0C  5014               	movf	(___awmod@divisor+1)^0,w,c
  7419   001E0E  5A12               	subwfb	(___awmod@dividend+1)^0,f,c
  7420   001E10                     l4092:
  7421   001E10  90D8               	bcf	status,0,c
  7422   001E12  3214               	rrcf	(___awmod@divisor+1)^0,f,c
  7423   001E14  3213               	rrcf	___awmod@divisor^0,f,c
  7424   001E16  2E15               	decfsz	___awmod@counter^0,f,c
  7425   001E18  EFF9  F00E         	goto	l4088
  7426   001E1C                     l4096:
  7427   001E1C  5016               	movf	___awmod@sign^0,w,c
  7428   001E1E  B4D8               	btfsc	status,2,c
  7429   001E20  EF14  F00F         	goto	u1941
  7430   001E24  EF16  F00F         	goto	u1940
  7431   001E28                     u1941:
  7432   001E28  EF1A  F00F         	goto	l4100
  7433   001E2C                     u1940:
  7434   001E2C  6C11               	negf	___awmod@dividend^0,c
  7435   001E2E  1E12               	comf	(___awmod@dividend+1)^0,f,c
  7436   001E30  B0D8               	btfsc	status,0,c
  7437   001E32  2A12               	incf	(___awmod@dividend+1)^0,f,c
  7438   001E34                     l4100:
  7439   001E34  C011  F011         	movff	___awmod@dividend,?___awmod
  7440   001E38  C012  F012         	movff	___awmod@dividend+1,?___awmod+1
  7441   001E3C  0012               	return		;funcret
  7442   001E3E                     __end_of___awmod:
  7443                           	callstack 0
  7444                           
  7445 ;; *************** function ___awdiv *****************
  7446 ;; Defined at:
  7447 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;  dividend        2   16[COMRAM] int 
  7450 ;;  divisor         2   18[COMRAM] int 
  7451 ;; Auto vars:     Size  Location     Type
  7452 ;;  quotient        2   22[COMRAM] int 
  7453 ;;  sign            1   21[COMRAM] unsigned char 
  7454 ;;  counter         1   20[COMRAM] unsigned char 
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  2   16[COMRAM] int 
  7457 ;; Registers used:
  7458 ;;		wreg, status,2, status,0
  7459 ;; Tracked objects:
  7460 ;;		On entry : 0/0
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7464 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7465 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7467 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7468 ;;Total ram usage:        8 bytes
  7469 ;; Hardware stack levels used: 1
  7470 ;; Hardware stack levels required when called: 7
  7471 ;; This function calls:
  7472 ;;		Nothing
  7473 ;; This function is called by:
  7474 ;;		_vfpfcnvrt
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           	psect	text69
  7479   00187A                     __ptext69:
  7480                           	callstack 0
  7481   00187A                     ___awdiv:
  7482                           	callstack 18
  7483   00187A  0E00               	movlw	0
  7484   00187C  6E16               	movwf	___awdiv@sign^0,c
  7485   00187E  BE14               	btfsc	(___awdiv@divisor+1)^0,7,c
  7486   001880  EF46  F00C         	goto	u1830
  7487   001884  EF44  F00C         	goto	u1831
  7488   001888                     u1831:
  7489   001888  EF4C  F00C         	goto	l4032
  7490   00188C                     u1830:
  7491   00188C  6C13               	negf	___awdiv@divisor^0,c
  7492   00188E  1E14               	comf	(___awdiv@divisor+1)^0,f,c
  7493   001890  B0D8               	btfsc	status,0,c
  7494   001892  2A14               	incf	(___awdiv@divisor+1)^0,f,c
  7495   001894  0E01               	movlw	1
  7496   001896  6E16               	movwf	___awdiv@sign^0,c
  7497   001898                     l4032:
  7498   001898  BE12               	btfsc	(___awdiv@dividend+1)^0,7,c
  7499   00189A  EF53  F00C         	goto	u1840
  7500   00189E  EF51  F00C         	goto	u1841
  7501   0018A2                     u1841:
  7502   0018A2  EF59  F00C         	goto	l4038
  7503   0018A6                     u1840:
  7504   0018A6  6C11               	negf	___awdiv@dividend^0,c
  7505   0018A8  1E12               	comf	(___awdiv@dividend+1)^0,f,c
  7506   0018AA  B0D8               	btfsc	status,0,c
  7507   0018AC  2A12               	incf	(___awdiv@dividend+1)^0,f,c
  7508   0018AE  0E01               	movlw	1
  7509   0018B0  1A16               	xorwf	___awdiv@sign^0,f,c
  7510   0018B2                     l4038:
  7511   0018B2  0E00               	movlw	0
  7512   0018B4  6E18               	movwf	(___awdiv@quotient+1)^0,c
  7513   0018B6  0E00               	movlw	0
  7514   0018B8  6E17               	movwf	___awdiv@quotient^0,c
  7515   0018BA  5013               	movf	___awdiv@divisor^0,w,c
  7516   0018BC  1014               	iorwf	(___awdiv@divisor+1)^0,w,c
  7517   0018BE  B4D8               	btfsc	status,2,c
  7518   0018C0  EF64  F00C         	goto	u1851
  7519   0018C4  EF66  F00C         	goto	u1850
  7520   0018C8                     u1851:
  7521   0018C8  EF8E  F00C         	goto	l4060
  7522   0018CC                     u1850:
  7523   0018CC  0E01               	movlw	1
  7524   0018CE  6E15               	movwf	___awdiv@counter^0,c
  7525   0018D0  EF6E  F00C         	goto	l4046
  7526   0018D4                     l4044:
  7527   0018D4  90D8               	bcf	status,0,c
  7528   0018D6  3613               	rlcf	___awdiv@divisor^0,f,c
  7529   0018D8  3614               	rlcf	(___awdiv@divisor+1)^0,f,c
  7530   0018DA  2A15               	incf	___awdiv@counter^0,f,c
  7531   0018DC                     l4046:
  7532   0018DC  AE14               	btfss	(___awdiv@divisor+1)^0,7,c
  7533   0018DE  EF73  F00C         	goto	u1861
  7534   0018E2  EF75  F00C         	goto	u1860
  7535   0018E6                     u1861:
  7536   0018E6  EF6A  F00C         	goto	l4044
  7537   0018EA                     u1860:
  7538   0018EA                     l4048:
  7539   0018EA  90D8               	bcf	status,0,c
  7540   0018EC  3617               	rlcf	___awdiv@quotient^0,f,c
  7541   0018EE  3618               	rlcf	(___awdiv@quotient+1)^0,f,c
  7542   0018F0  5013               	movf	___awdiv@divisor^0,w,c
  7543   0018F2  5C11               	subwf	___awdiv@dividend^0,w,c
  7544   0018F4  5014               	movf	(___awdiv@divisor+1)^0,w,c
  7545   0018F6  5812               	subwfb	(___awdiv@dividend+1)^0,w,c
  7546   0018F8  A0D8               	btfss	status,0,c
  7547   0018FA  EF81  F00C         	goto	u1871
  7548   0018FE  EF83  F00C         	goto	u1870
  7549   001902                     u1871:
  7550   001902  EF88  F00C         	goto	l4056
  7551   001906                     u1870:
  7552   001906  5013               	movf	___awdiv@divisor^0,w,c
  7553   001908  5E11               	subwf	___awdiv@dividend^0,f,c
  7554   00190A  5014               	movf	(___awdiv@divisor+1)^0,w,c
  7555   00190C  5A12               	subwfb	(___awdiv@dividend+1)^0,f,c
  7556   00190E  8017               	bsf	___awdiv@quotient^0,0,c
  7557   001910                     l4056:
  7558   001910  90D8               	bcf	status,0,c
  7559   001912  3214               	rrcf	(___awdiv@divisor+1)^0,f,c
  7560   001914  3213               	rrcf	___awdiv@divisor^0,f,c
  7561   001916  2E15               	decfsz	___awdiv@counter^0,f,c
  7562   001918  EF75  F00C         	goto	l4048
  7563   00191C                     l4060:
  7564   00191C  5016               	movf	___awdiv@sign^0,w,c
  7565   00191E  B4D8               	btfsc	status,2,c
  7566   001920  EF94  F00C         	goto	u1881
  7567   001924  EF96  F00C         	goto	u1880
  7568   001928                     u1881:
  7569   001928  EF9A  F00C         	goto	l4064
  7570   00192C                     u1880:
  7571   00192C  6C17               	negf	___awdiv@quotient^0,c
  7572   00192E  1E18               	comf	(___awdiv@quotient+1)^0,f,c
  7573   001930  B0D8               	btfsc	status,0,c
  7574   001932  2A18               	incf	(___awdiv@quotient+1)^0,f,c
  7575   001934                     l4064:
  7576   001934  C017  F011         	movff	___awdiv@quotient,?___awdiv
  7577   001938  C018  F012         	movff	___awdiv@quotient+1,?___awdiv+1
  7578   00193C  0012               	return		;funcret
  7579   00193E                     __end_of___awdiv:
  7580                           	callstack 0
  7581                           
  7582 ;; *************** function _memset *****************
  7583 ;; Defined at:
  7584 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  dest            1   16[COMRAM] PTR void 
  7587 ;;		 -> hex_str(2), dummy_str(2), 
  7588 ;;  c               2   17[COMRAM] int 
  7589 ;;  n               2   19[COMRAM] unsigned int 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;  p               1   21[COMRAM] PTR unsigned char 
  7592 ;;		 -> hex_str(2), dummy_str(2), 
  7593 ;; Return value:  Size  Location     Type
  7594 ;;                  1    wreg      PTR void 
  7595 ;; Registers used:
  7596 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7597 ;; Tracked objects:
  7598 ;;		On entry : 0/0
  7599 ;;		On exit  : 0/0
  7600 ;;		Unchanged: 0/0
  7601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7602 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7605 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7606 ;;Total ram usage:        6 bytes
  7607 ;; Hardware stack levels used: 1
  7608 ;; Hardware stack levels required when called: 7
  7609 ;; This function calls:
  7610 ;;		Nothing
  7611 ;; This function is called by:
  7612 ;;		_convert_byte_to_str
  7613 ;;		_convert_decimal_to_str
  7614 ;;		_covert_byte_to_str
  7615 ;;		_covert_short_to_str
  7616 ;;		_covert_int_to_str
  7617 ;; This function uses a non-reentrant model
  7618 ;;
  7619                           
  7620                           	psect	text70
  7621   0029C4                     __ptext70:
  7622                           	callstack 0
  7623   0029C4                     _memset:
  7624                           	callstack 21
  7625   0029C4  C011  F016         	movff	memset@dest,memset@p
  7626   0029C8  EFEC  F014         	goto	l4720
  7627   0029CC                     l4716:
  7628   0029CC  5016               	movf	memset@p^0,w,c
  7629   0029CE  6ED9               	movwf	fsr2l,c
  7630   0029D0  6ADA               	clrf	fsr2h,c
  7631   0029D2  C012  FFDF         	movff	memset@c,indf2
  7632   0029D6  2A16               	incf	memset@p^0,f,c
  7633   0029D8                     l4720:
  7634   0029D8  0614               	decf	memset@n^0,f,c
  7635   0029DA  A0D8               	btfss	status,0,c
  7636   0029DC  0615               	decf	(memset@n+1)^0,f,c
  7637   0029DE  2814               	incf	memset@n^0,w,c
  7638   0029E0  E106               	bnz	u2441
  7639   0029E2  2815               	incf	(memset@n+1)^0,w,c
  7640   0029E4  A4D8               	btfss	status,2,c
  7641   0029E6  EFF7  F014         	goto	u2441
  7642   0029EA  EFF9  F014         	goto	u2440
  7643   0029EE                     u2441:
  7644   0029EE  EFE6  F014         	goto	l4716
  7645   0029F2                     u2440:
  7646   0029F2  0012               	return		;funcret
  7647   0029F4                     __end_of_memset:
  7648                           	callstack 0
  7649                           
  7650 ;; *************** function _EUSART_Send_String *****************
  7651 ;; Defined at:
  7652 ;;		line 248 in file "mcc_generated_files/uart/src/eusart.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;  str             2   20[COMRAM] PTR unsigned char 
  7655 ;;		 -> STR_8(12), hex_str(2), STR_7(15), STR_6(8), 
  7656 ;;		 -> dummy_str(2), STR_5(8), STR_4(19), 
  7657 ;; Auto vars:     Size  Location     Type
  7658 ;;  i               1   24[COMRAM] unsigned char 
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  1    wreg      void 
  7661 ;; Registers used:
  7662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7663 ;; Tracked objects:
  7664 ;;		On entry : 0/0
  7665 ;;		On exit  : 0/0
  7666 ;;		Unchanged: 0/0
  7667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7670 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7671 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7672 ;;Total ram usage:        5 bytes
  7673 ;; Hardware stack levels used: 1
  7674 ;; Hardware stack levels required when called: 8
  7675 ;; This function calls:
  7676 ;;		_EUSART_IsTxReady
  7677 ;;		_EUSART_Write
  7678 ;;		_strlen
  7679 ;; This function is called by:
  7680 ;;		_main
  7681 ;;		_EUSART_Send_Date
  7682 ;;		_EUSART_Send_Time
  7683 ;;		_EUSART_Send_Temp
  7684 ;; This function uses a non-reentrant model
  7685 ;;
  7686                           
  7687                           	psect	text71
  7688   0020C2                     __ptext71:
  7689                           	callstack 0
  7690   0020C2                     _EUSART_Send_String:
  7691                           	callstack 21
  7692   0020C2                     
  7693                           ;mcc_generated_files/uart/src/eusart.c: 249:     uint8_t i = 0;
  7694   0020C2  0E00               	movlw	0
  7695   0020C4  6E19               	movwf	EUSART_Send_String@i^0,c
  7696                           
  7697                           ;mcc_generated_files/uart/src/eusart.c: 250:     for(i = 0; i < strlen(str); i++){
  7698   0020C6  0E00               	movlw	0
  7699   0020C8  6E19               	movwf	EUSART_Send_String@i^0,c
  7700   0020CA  EF8B  F010         	goto	l4894
  7701   0020CE                     l4888:
  7702   0020CE  EC7E  F015         	call	_EUSART_IsTxReady	;wreg free
  7703   0020D2  0900               	iorlw	0
  7704   0020D4  B4D8               	btfsc	status,2,c
  7705   0020D6  EF6F  F010         	goto	u2561
  7706   0020DA  EF71  F010         	goto	u2560
  7707   0020DE                     u2561:
  7708   0020DE  EF67  F010         	goto	l4888
  7709   0020E2                     u2560:
  7710   0020E2                     
  7711                           ;mcc_generated_files/uart/src/eusart.c: 252:         EUSART_Write(str[i]);
  7712   0020E2  5019               	movf	EUSART_Send_String@i^0,w,c
  7713   0020E4  2415               	addwf	EUSART_Send_String@str^0,w,c
  7714   0020E6  6E17               	movwf	??_EUSART_Send_String^0,c
  7715   0020E8  0E00               	movlw	0
  7716   0020EA  2016               	addwfc	(EUSART_Send_String@str+1)^0,w,c
  7717   0020EC  6E18               	movwf	(??_EUSART_Send_String+1)^0,c
  7718   0020EE  C017  FFF6         	movff	??_EUSART_Send_String,tblptrl
  7719   0020F2  C018  FFF7         	movff	??_EUSART_Send_String+1,tblptrh
  7720   0020F6  0E00               	movlw	low (__smallconst shr (0+16))
  7721   0020F8  6EF8               	movwf	tblptru,c
  7722   0020FA  0E0F               	movlw	(high __ramtop+-1)
  7723   0020FC  64F7               	cpfsgt	tblptrh,c
  7724   0020FE  D003               	bra	u2577
  7725   002100  0008               	tblrd		*
  7726   002102  50F5               	movf	tablat,w,c
  7727   002104  D005               	bra	u2570
  7728   002106                     u2577:
  7729   002106  CFF6 FFE9          	movff	tblptrl,fsr0l
  7730   00210A  CFF7 FFEA          	movff	tblptrh,fsr0h
  7731   00210E  50EF               	movf	indf0,w,c
  7732   002110                     u2570:
  7733   002110  ECD8  F016         	call	_EUSART_Write
  7734   002114                     
  7735                           ;mcc_generated_files/uart/src/eusart.c: 253:     }
  7736   002114  2A19               	incf	EUSART_Send_String@i^0,f,c
  7737   002116                     l4894:
  7738   002116  C015  F011         	movff	EUSART_Send_String@str,strlen@s
  7739   00211A  C016  F012         	movff	EUSART_Send_String@str+1,strlen@s+1
  7740   00211E  EC75  F013         	call	_strlen	;wreg free
  7741   002122  5019               	movf	EUSART_Send_String@i^0,w,c
  7742   002124  6E17               	movwf	??_EUSART_Send_String^0,c
  7743   002126  6A18               	clrf	(??_EUSART_Send_String+1)^0,c
  7744   002128  5011               	movf	?_strlen^0,w,c
  7745   00212A  5C17               	subwf	??_EUSART_Send_String^0,w,c
  7746   00212C  5012               	movf	(?_strlen+1)^0,w,c
  7747   00212E  5818               	subwfb	(??_EUSART_Send_String+1)^0,w,c
  7748   002130  A0D8               	btfss	status,0,c
  7749   002132  EF9D  F010         	goto	u2581
  7750   002136  EF9F  F010         	goto	u2580
  7751   00213A                     u2581:
  7752   00213A  EF67  F010         	goto	l4888
  7753   00213E                     u2580:
  7754   00213E  0012               	return		;funcret
  7755   002140                     __end_of_EUSART_Send_String:
  7756                           	callstack 0
  7757                           
  7758 ;; *************** function _strlen *****************
  7759 ;; Defined at:
  7760 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  s               2   16[COMRAM] PTR const unsigned char 
  7763 ;;		 -> STR_8(12), hex_str(2), STR_7(15), STR_6(8), 
  7764 ;;		 -> dummy_str(2), STR_5(8), STR_4(19), 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  a               2   18[COMRAM] PTR const unsigned char 
  7767 ;;		 -> STR_8(12), hex_str(2), STR_7(15), STR_6(8), 
  7768 ;;		 -> dummy_str(2), STR_5(8), STR_4(19), 
  7769 ;; Return value:  Size  Location     Type
  7770 ;;                  2   16[COMRAM] unsigned int 
  7771 ;; Registers used:
  7772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  7773 ;; Tracked objects:
  7774 ;;		On entry : 0/0
  7775 ;;		On exit  : 0/0
  7776 ;;		Unchanged: 0/0
  7777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7779 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7781 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7782 ;;Total ram usage:        4 bytes
  7783 ;; Hardware stack levels used: 1
  7784 ;; Hardware stack levels required when called: 7
  7785 ;; This function calls:
  7786 ;;		Nothing
  7787 ;; This function is called by:
  7788 ;;		_EUSART_Send_String
  7789 ;;		_lcd_4bit_send_string
  7790 ;;		_lcd_8bit_send_string
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           	psect	text72
  7795   0026EA                     __ptext72:
  7796                           	callstack 0
  7797   0026EA                     _strlen:
  7798                           	callstack 21
  7799   0026EA  C011  F013         	movff	strlen@s,strlen@a
  7800   0026EE  C012  F014         	movff	strlen@s+1,strlen@a+1
  7801   0026F2  EF7D  F013         	goto	l4708
  7802   0026F6                     l4706:
  7803   0026F6  4A11               	infsnz	strlen@s^0,f,c
  7804   0026F8  2A12               	incf	(strlen@s+1)^0,f,c
  7805   0026FA                     l4708:
  7806   0026FA  C011  FFF6         	movff	strlen@s,tblptrl
  7807   0026FE  C012  FFF7         	movff	strlen@s+1,tblptrh
  7808   002702  0E00               	movlw	low (__smallconst shr (0+16))
  7809   002704  6EF8               	movwf	tblptru,c
  7810   002706  0E0F               	movlw	(high __ramtop+-1)
  7811   002708  64F7               	cpfsgt	tblptrh,c
  7812   00270A  D003               	bra	u2427
  7813   00270C  0008               	tblrd		*
  7814   00270E  50F5               	movf	tablat,w,c
  7815   002710  D005               	bra	u2420
  7816   002712                     u2427:
  7817   002712  CFF6 FFE9          	movff	tblptrl,fsr0l
  7818   002716  CFF7 FFEA          	movff	tblptrh,fsr0h
  7819   00271A  50EF               	movf	indf0,w,c
  7820   00271C                     u2420:
  7821   00271C  0900               	iorlw	0
  7822   00271E  A4D8               	btfss	status,2,c
  7823   002720  EF94  F013         	goto	u2431
  7824   002724  EF96  F013         	goto	u2430
  7825   002728                     u2431:
  7826   002728  EF7B  F013         	goto	l4706
  7827   00272C                     u2430:
  7828   00272C  5013               	movf	strlen@a^0,w,c
  7829   00272E  5C11               	subwf	strlen@s^0,w,c
  7830   002730  6E11               	movwf	?_strlen^0,c
  7831   002732  5014               	movf	(strlen@a+1)^0,w,c
  7832   002734  5812               	subwfb	(strlen@s+1)^0,w,c
  7833   002736  6E12               	movwf	(?_strlen+1)^0,c
  7834   002738  0012               	return		;funcret
  7835   00273A                     __end_of_strlen:
  7836                           	callstack 0
  7837                           
  7838 ;; *************** function _EUSART_Write *****************
  7839 ;; Defined at:
  7840 ;;		line 243 in file "mcc_generated_files/uart/src/eusart.c"
  7841 ;; Parameters:    Size  Location     Type
  7842 ;;  txData          1    wreg     unsigned char 
  7843 ;; Auto vars:     Size  Location     Type
  7844 ;;  txData          1   16[COMRAM] unsigned char 
  7845 ;; Return value:  Size  Location     Type
  7846 ;;                  1    wreg      void 
  7847 ;; Registers used:
  7848 ;;		wreg
  7849 ;; Tracked objects:
  7850 ;;		On entry : 0/0
  7851 ;;		On exit  : 0/0
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7858 ;;Total ram usage:        1 bytes
  7859 ;; Hardware stack levels used: 1
  7860 ;; Hardware stack levels required when called: 7
  7861 ;; This function calls:
  7862 ;;		Nothing
  7863 ;; This function is called by:
  7864 ;;		_EUSART_Send_String
  7865 ;;		_EUSART_Send_Date
  7866 ;;		_EUSART_Send_Time
  7867 ;;		_EUSART_Send_Temp
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           	psect	text73
  7872   002DB0                     __ptext73:
  7873                           	callstack 0
  7874   002DB0                     _EUSART_Write:
  7875                           	callstack 22
  7876                           
  7877                           ;incstack = 0
  7878                           ;EUSART_Write@txData stored from wreg
  7879   002DB0  6E11               	movwf	EUSART_Write@txData^0,c
  7880   002DB2                     
  7881                           ;mcc_generated_files/uart/src/eusart.c: 243: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 244: {;mcc_generated_files/uart/src/eusart.c: 245:     TXR
      +                          EG = txData;
  7882   002DB2  C011  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  7883   002DB6  0012               	return		;funcret
  7884   002DB8                     __end_of_EUSART_Write:
  7885                           	callstack 0
  7886                           
  7887 ;; *************** function _EUSART_IsTxReady *****************
  7888 ;; Defined at:
  7889 ;;		line 198 in file "mcc_generated_files/uart/src/eusart.c"
  7890 ;; Parameters:    Size  Location     Type
  7891 ;;		None
  7892 ;; Auto vars:     Size  Location     Type
  7893 ;;		None
  7894 ;; Return value:  Size  Location     Type
  7895 ;;                  1    wreg      _Bool 
  7896 ;; Registers used:
  7897 ;;		wreg, status,2
  7898 ;; Tracked objects:
  7899 ;;		On entry : 0/0
  7900 ;;		On exit  : 0/0
  7901 ;;		Unchanged: 0/0
  7902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7904 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7906 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7907 ;;Total ram usage:        1 bytes
  7908 ;; Hardware stack levels used: 1
  7909 ;; Hardware stack levels required when called: 7
  7910 ;; This function calls:
  7911 ;;		Nothing
  7912 ;; This function is called by:
  7913 ;;		_EUSART_Send_String
  7914 ;;		_EUSART_Send_Date
  7915 ;;		_EUSART_Send_Time
  7916 ;;		_EUSART_Send_Temp
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           	psect	text74
  7921   002AFC                     __ptext74:
  7922                           	callstack 0
  7923   002AFC                     _EUSART_IsTxReady:
  7924                           	callstack 21
  7925   002AFC                     
  7926                           ;mcc_generated_files/uart/src/eusart.c: 200:     return (_Bool)(PIR1bits.TX1IF && TXSTAb
      +                          its.TXEN);
  7927   002AFC  0E00               	movlw	0
  7928   002AFE  6E11               	movwf	_EUSART_IsTxReady$2105^0,c
  7929   002B00  A89E               	btfss	158,4,c	;volatile
  7930   002B02  EF85  F015         	goto	u2401
  7931   002B06  EF87  F015         	goto	u2400
  7932   002B0A                     u2401:
  7933   002B0A  EF90  F015         	goto	l868
  7934   002B0E                     u2400:
  7935   002B0E  AAAC               	btfss	172,5,c	;volatile
  7936   002B10  EF8C  F015         	goto	u2411
  7937   002B14  EF8E  F015         	goto	u2410
  7938   002B18                     u2411:
  7939   002B18  EF90  F015         	goto	l868
  7940   002B1C                     u2410:
  7941   002B1C  0E01               	movlw	1
  7942   002B1E  6E11               	movwf	_EUSART_IsTxReady$2105^0,c
  7943   002B20                     l868:
  7944   002B20  5011               	movf	_EUSART_IsTxReady$2105^0,w,c
  7945   002B22  0012               	return		;funcret
  7946   002B24                     __end_of_EUSART_IsTxReady:
  7947                           	callstack 0
  7948                           
  7949 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  7950 ;; Defined at:
  7951 ;;		line 77 in file "mcc_generated_files/system/src/interrupt.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;		None
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;		None
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  1    wreg      void 
  7958 ;; Registers used:
  7959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7967 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7968 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7969 ;;Total ram usage:       10 bytes
  7970 ;; Hardware stack levels used: 1
  7971 ;; Hardware stack levels required when called: 6
  7972 ;; This function calls:
  7973 ;;		NULL
  7974 ;;		_I2C_MasterIsr
  7975 ;; This function is called by:
  7976 ;;		Interrupt level 2
  7977 ;; This function uses a non-reentrant model
  7978 ;;
  7979                           
  7980                           	psect	intcode
  7981   000008                     __pintcode:
  7982                           	callstack 0
  7983   000008                     _INTERRUPT_InterruptManagerHigh:
  7984                           	callstack 17
  7985                           
  7986                           ;incstack = 0
  7987   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7988   00000A  CFFA F007          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  7989   00000E  CFFB F008          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  7990   000012  CFD9 F009          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+2
  7991   000016  CFDA F00A          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+3
  7992   00001A  CFF3 F00B          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+4
  7993   00001E  CFF4 F00C          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+5
  7994   000022  CFF6 F00D          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+6
  7995   000026  CFF7 F00E          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+7
  7996   00002A  CFF8 F00F          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+8
  7997   00002E  CFF5 F010          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+9
  7998   000032                     
  7999                           ;mcc_generated_files/system/src/interrupt.c: 80:     if(PIE2bits.BCLIE == 1 && PIR2bits.
      +                          BCLIF == 1)
  8000   000032  A6A0               	btfss	160,3,c	;volatile
  8001   000034  EF1E  F000         	goto	i2u299_41
  8002   000038  EF20  F000         	goto	i2u299_40
  8003   00003C                     i2u299_41:
  8004   00003C  EF35  F000         	goto	i2l699
  8005   000040                     i2u299_40:
  8006   000040  A6A1               	btfss	161,3,c	;volatile
  8007   000042  EF25  F000         	goto	i2u300_41
  8008   000046  EF27  F000         	goto	i2u300_40
  8009   00004A                     i2u300_41:
  8010   00004A  EF35  F000         	goto	i2l699
  8011   00004E                     i2u300_40:
  8012   00004E                     i2l5370:
  8013                           
  8014                           ;mcc_generated_files/system/src/interrupt.c: 81:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 82:         MSSP_InterruptHandler();
  8015   00004E  D802               	call	i2u301_48
  8016   000050  EF33  F000         	goto	i2u301_49
  8017   000054                     i2u301_48:
  8018   000054  0005               	push	
  8019   000056  6EFA               	movwf	pclath,c
  8020   000058  504D               	movf	_MSSP_InterruptHandler^0,w,c
  8021   00005A  6EFD               	movwf	tosl,c
  8022   00005C  504E               	movf	(_MSSP_InterruptHandler+1)^0,w,c
  8023   00005E  6EFE               	movwf	tosh,c
  8024   000060  6AFF               	clrf	tosu,c
  8025   000062  50FA               	movf	pclath,w,c
  8026   000064  0012               	return		;indir
  8027   000066                     i2u301_49:
  8028                           
  8029                           ;mcc_generated_files/system/src/interrupt.c: 83:     }
  8030   000066  EF45  F000         	goto	i2l703
  8031   00006A                     i2l699:
  8032   00006A  A69D               	btfss	157,3,c	;volatile
  8033   00006C  EF3A  F000         	goto	i2u302_41
  8034   000070  EF3C  F000         	goto	i2u302_40
  8035   000074                     i2u302_41:
  8036   000074  EF45  F000         	goto	i2l703
  8037   000078                     i2u302_40:
  8038   000078  A69E               	btfss	158,3,c	;volatile
  8039   00007A  EF41  F000         	goto	i2u303_41
  8040   00007E  EF43  F000         	goto	i2u303_40
  8041   000082                     i2u303_41:
  8042   000082  EF45  F000         	goto	i2l703
  8043   000086                     i2u303_40:
  8044   000086  EF27  F000         	goto	i2l5370
  8045   00008A                     i2l703:
  8046   00008A  C010  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+9,tablat
  8047   00008E  C00F  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+8,tblptru
  8048   000092  C00E  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+7,tblptrh
  8049   000096  C00D  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+6,tblptrl
  8050   00009A  C00C  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+5,prodh
  8051   00009E  C00B  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+4,prodl
  8052   0000A2  C00A  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr2h
  8053   0000A6  C009  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr2l
  8054   0000AA  C008  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  8055   0000AE  C007  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  8056   0000B2  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8057   0000B4  0011               	retfie		f
  8058   0000B6                     __end_of_INTERRUPT_InterruptManagerHigh:
  8059                           	callstack 0
  8060                           
  8061 ;; *************** function _I2C_MasterIsr *****************
  8062 ;; Defined at:
  8063 ;;		line 318 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;		None
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;		None
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  1    wreg      void 
  8070 ;; Registers used:
  8071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8081 ;;Total ram usage:        0 bytes
  8082 ;; Hardware stack levels used: 1
  8083 ;; Hardware stack levels required when called: 5
  8084 ;; This function calls:
  8085 ;;		_I2C_MasterFsm
  8086 ;; This function is called by:
  8087 ;;		_I2C_Open
  8088 ;;		_INTERRUPT_InterruptManagerHigh
  8089 ;; This function uses a non-reentrant model
  8090 ;;
  8091                           
  8092                           	psect	text76
  8093   002E06                     __ptext76:
  8094                           	callstack 0
  8095   002E06                     _I2C_MasterIsr:
  8096                           	callstack 17
  8097   002E06                     
  8098                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 320:     I2C_MasterFsm();
  8099   002E06  EC16  F011         	call	_I2C_MasterFsm	;wreg free
  8100   002E0A  0012               	return		;funcret
  8101   002E0C                     __end_of_I2C_MasterIsr:
  8102                           	callstack 0
  8103                           
  8104 ;; *************** function _I2C_MasterFsm *****************
  8105 ;; Defined at:
  8106 ;;		line 323 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;		None
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;		None
  8111 ;; Return value:  Size  Location     Type
  8112 ;;                  1    wreg      void 
  8113 ;; Registers used:
  8114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8115 ;; Tracked objects:
  8116 ;;		On entry : 0/0
  8117 ;;		On exit  : 0/0
  8118 ;;		Unchanged: 0/0
  8119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8122 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8123 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8124 ;;Total ram usage:        3 bytes
  8125 ;; Hardware stack levels used: 1
  8126 ;; Hardware stack levels required when called: 4
  8127 ;; This function calls:
  8128 ;;		_I2C_DO_ADDRESS_NACK
  8129 ;;		_I2C_DO_IDLE
  8130 ;;		_I2C_DO_RCEN
  8131 ;;		_I2C_DO_RESET
  8132 ;;		_I2C_DO_RX
  8133 ;;		_I2C_DO_RX_ACK
  8134 ;;		_I2C_DO_RX_NACK_RESTART
  8135 ;;		_I2C_DO_RX_NACK_STOP
  8136 ;;		_I2C_DO_SEND_ADR_READ
  8137 ;;		_I2C_DO_SEND_ADR_WRITE
  8138 ;;		_I2C_DO_SEND_RESTART
  8139 ;;		_I2C_DO_SEND_RESTART_READ
  8140 ;;		_I2C_DO_SEND_RESTART_WRITE
  8141 ;;		_I2C_DO_SEND_STOP
  8142 ;;		_I2C_DO_TX
  8143 ;;		_I2C_DO_TX_EMPTY
  8144 ;;		_I2C_MasterIsNack
  8145 ;;		i2_I2C_MasterClearIrq
  8146 ;; This function is called by:
  8147 ;;		_I2C_MasterIsr
  8148 ;; This function uses a non-reentrant model
  8149 ;;
  8150                           
  8151                           	psect	text77
  8152   00222C                     __ptext77:
  8153                           	callstack 0
  8154   00222C                     _I2C_MasterFsm:
  8155                           	callstack 17
  8156   00222C                     
  8157                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 325:     I2C_MasterClearIrq();
  8158   00222C  EC1A  F017         	call	i2_I2C_MasterClearIrq	;wreg free
  8159   002230                     
  8160                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 327:     if(I2C_Status.addressNackChec
      +                          k && I2C_MasterIsNack())
  8161   002230  0100               	movlb	0	; () banked
  8162   002232  A183               	btfss	(_I2C_Status+35)& (0+255),0,b
  8163   002234  EF1E  F011         	goto	i2u253_41
  8164   002238  EF20  F011         	goto	i2u253_40
  8165   00223C                     i2u253_41:
  8166   00223C  EF2D  F011         	goto	i2l4848
  8167   002240                     i2u253_40:
  8168   002240                     
  8169                           ; BSR set to: 0
  8170   002240  EC48  F016         	call	_I2C_MasterIsNack	;wreg free
  8171   002244  0900               	iorlw	0
  8172   002246  B4D8               	btfsc	status,2,c
  8173   002248  EF28  F011         	goto	i2u254_41
  8174   00224C  EF2A  F011         	goto	i2u254_40
  8175   002250                     i2u254_41:
  8176   002250  EF2D  F011         	goto	i2l4848
  8177   002254                     i2u254_40:
  8178   002254                     
  8179                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 328:     {;mcc_generated_files/i2c_cli
      +                          ent/src/i2c_master.c: 329:         I2C_Status.state = I2C_ADDRESS_NACK;
  8180   002254  0E0F               	movlw	15
  8181   002256  0100               	movlb	0	; () banked
  8182   002258  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  8183   00225A                     i2l4848:
  8184                           
  8185                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 331:     I2C_Status.state = i2c_fsmSta
      +                          teTable[I2C_Status.state]();
  8186   00225A  0100               	movlb	0	; () banked
  8187   00225C  5181               	movf	(_I2C_Status+33)& (0+255),w,b
  8188   00225E  0D02               	mullw	2
  8189   002260  50F3               	movf	243,w,c
  8190   002262  0F31               	addlw	low _i2c_fsmStateTable
  8191   002264  6E04               	movwf	??_I2C_MasterFsm^0,c
  8192   002266  C004  FFF6         	movff	??_I2C_MasterFsm,tblptrl
  8193   00226A                     	if	1	;There is more than 1 active tblptr byte
  8194   00226A  0E10               	movlw	high __smallconst
  8195   00226C  6EF7               	movwf	tblptrh,c
  8196   00226E                     	endif
  8197   00226E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8198   00226E  6AF8               	clrf	tblptru,c
  8199   002270                     	endif
  8200   002270                     	if	0	;tblptru may be non-zero
  8201   002270                     	endif
  8202   002270  0009               	tblrd		*+
  8203   002272  CFF5 F005          	movff	tablat,??_I2C_MasterFsm+1
  8204   002276  0009               	tblrd		*+
  8205   002278  CFF5 F006          	movff	tablat,??_I2C_MasterFsm+2
  8206   00227C  D802               	call	i2u255_48
  8207   00227E  EF4A  F011         	goto	i2u255_49
  8208   002282                     i2u255_48:
  8209   002282  0005               	push	
  8210   002284  6EFA               	movwf	pclath,c
  8211   002286  5005               	movf	(??_I2C_MasterFsm+1)^0,w,c
  8212   002288  6EFD               	movwf	tosl,c
  8213   00228A  5006               	movf	(??_I2C_MasterFsm+2)^0,w,c
  8214   00228C  6EFE               	movwf	tosh,c
  8215   00228E  6AFF               	clrf	tosu,c
  8216   002290  50FA               	movf	pclath,w,c
  8217   002292  0012               	return		;indir
  8218   002294                     i2u255_49:
  8219   002294  0100               	movlb	0	; () banked
  8220   002296  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  8221   002298                     
  8222                           ; BSR set to: 0
  8223   002298  0012               	return		;funcret
  8224   00229A                     __end_of_I2C_MasterFsm:
  8225                           	callstack 0
  8226                           
  8227 ;; *************** function i2_I2C_MasterClearIrq *****************
  8228 ;; Defined at:
  8229 ;;		line 642 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  8230 ;; Parameters:    Size  Location     Type
  8231 ;;		None
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;		None
  8234 ;; Return value:  Size  Location     Type
  8235 ;;                  1    wreg      void 
  8236 ;; Registers used:
  8237 ;;		None
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8247 ;;Total ram usage:        0 bytes
  8248 ;; Hardware stack levels used: 1
  8249 ;; This function calls:
  8250 ;;		Nothing
  8251 ;; This function is called by:
  8252 ;;		_I2C_MasterFsm
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           	psect	text78
  8257   002E34                     __ptext78:
  8258                           	callstack 0
  8259   002E34                     i2_I2C_MasterClearIrq:
  8260                           	callstack 20
  8261   002E34                     
  8262                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  8263   002E34  969E               	bcf	158,3,c	;volatile
  8264   002E36  0012               	return		;funcret
  8265   002E38                     __end_ofi2_I2C_MasterClearIrq:
  8266                           	callstack 0
  8267                           
  8268 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  8269 ;; Defined at:
  8270 ;;		line 501 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;		None
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;		None
  8275 ;; Return value:  Size  Location     Type
  8276 ;;                  1    wreg      enum E3134
  8277 ;; Registers used:
  8278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  8279 ;; Tracked objects:
  8280 ;;		On entry : 0/0
  8281 ;;		On exit  : 0/0
  8282 ;;		Unchanged: 0/0
  8283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8286 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8287 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8288 ;;Total ram usage:        2 bytes
  8289 ;; Hardware stack levels used: 1
  8290 ;; Hardware stack levels required when called: 3
  8291 ;; This function calls:
  8292 ;;		NULL
  8293 ;;		_I2C_CallbackReturnReset
  8294 ;;		_I2C_CallbackReturnStop
  8295 ;;		_I2C_DO_SEND_RESTART
  8296 ;;		_I2C_DO_SEND_STOP
  8297 ;;		_rd1RegCompleteHandler
  8298 ;;		_rd2RegCompleteHandler
  8299 ;;		_rdBlkRegCompleteHandler
  8300 ;;		_wr1RegCompleteHandler
  8301 ;;		_wr2RegCompleteHandler
  8302 ;; This function is called by:
  8303 ;;		_I2C_MasterFsm
  8304 ;; This function uses a non-reentrant model
  8305 ;;
  8306                           
  8307                           	psect	text79
  8308   0024A8                     __ptext79:
  8309                           	callstack 0
  8310   0024A8                     _I2C_DO_ADDRESS_NACK:
  8311                           	callstack 17
  8312   0024A8                     
  8313                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 503:     I2C_Status.addressNackCheck =
      +                           0;
  8314   0024A8  0100               	movlb	0	; () banked
  8315   0024AA  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  8316   0024AC                     
  8317                           ; BSR set to: 0
  8318                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
  8319   0024AC  0E02               	movlw	2
  8320   0024AE  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  8321                           
  8322                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 505:     switch(I2C_Status.callbackTab
      +                          le[I2C_ADDR_NACK](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  8323   0024B0  EF62  F012         	goto	i2l4670
  8324   0024B4                     i2l4660:
  8325                           
  8326                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 509:             return I2C_DO_SEND_RE
      +                          START();
  8327   0024B4  ECEC  F016         	call	_I2C_DO_SEND_RESTART	;wreg free
  8328   0024B8  EF86  F012         	goto	i2l308
  8329   0024BC                     i2l4664:
  8330                           
  8331                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 511:             return I2C_DO_SEND_ST
      +                          OP();
  8332   0024BC  ECE8  F016         	call	_I2C_DO_SEND_STOP	;wreg free
  8333   0024C0  EF86  F012         	goto	i2l308
  8334   0024C4                     i2l4670:
  8335                           
  8336                           ; BSR set to: 0
  8337   0024C4  C070  F00A         	movff	_I2C_Status+16,rdBlkRegCompleteHandler@ptr
  8338   0024C8  C071  F00B         	movff	_I2C_Status+17,rdBlkRegCompleteHandler@ptr+1
  8339   0024CC  D802               	call	i2u237_48
  8340   0024CE  EF72  F012         	goto	i2u237_49
  8341   0024D2                     i2u237_48:
  8342   0024D2  0005               	push	
  8343   0024D4  6EFA               	movwf	pclath,c
  8344   0024D6  5164               	movf	(_I2C_Status+4)& (0+255),w,b
  8345   0024D8  6EFD               	movwf	tosl,c
  8346   0024DA  5165               	movf	(_I2C_Status+5)& (0+255),w,b
  8347   0024DC  6EFE               	movwf	tosh,c
  8348   0024DE  6AFF               	clrf	tosu,c
  8349   0024E0  50FA               	movf	pclath,w,c
  8350   0024E2  0012               	return		;indir
  8351   0024E4                     i2u237_49:
  8352   0024E4  6E01               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
  8353   0024E6  6A02               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
  8354                           
  8355                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8356                           ; Switch size 1, requested type "simple"
  8357                           ; Number of cases is 1, Range of values is 0 to 0
  8358                           ; switch strategies available:
  8359                           ; Name         Instructions Cycles
  8360                           ; simple_byte            4     3 (average)
  8361                           ;	Chosen strategy is simple_byte
  8362   0024E8  5002               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
  8363   0024EA  0A00               	xorlw	0	; case 0
  8364   0024EC  B4D8               	btfsc	status,2,c
  8365   0024EE  EF7B  F012         	goto	i2l5844
  8366   0024F2  EF5E  F012         	goto	i2l4664
  8367   0024F6                     i2l5844:
  8368                           
  8369                           ; Switch size 1, requested type "simple"
  8370                           ; Number of cases is 2, Range of values is 2 to 3
  8371                           ; switch strategies available:
  8372                           ; Name         Instructions Cycles
  8373                           ; simple_byte            7     4 (average)
  8374                           ;	Chosen strategy is simple_byte
  8375   0024F6  5001               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
  8376   0024F8  0A02               	xorlw	2	; case 2
  8377   0024FA  B4D8               	btfsc	status,2,c
  8378   0024FC  EF5A  F012         	goto	i2l4660
  8379   002500  0A01               	xorlw	1	; case 3
  8380   002502  B4D8               	btfsc	status,2,c
  8381   002504  EF5A  F012         	goto	i2l4660
  8382   002508  EF5E  F012         	goto	i2l4664
  8383   00250C                     i2l308:
  8384   00250C  0012               	return		;funcret
  8385   00250E                     __end_of_I2C_DO_ADDRESS_NACK:
  8386                           	callstack 0
  8387                           
  8388 ;; *************** function _I2C_DO_RESET *****************
  8389 ;; Defined at:
  8390 ;;		line 495 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;		None
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;		None
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  1    wreg      enum E3134
  8397 ;; Registers used:
  8398 ;;		wreg, status,2
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8408 ;;Total ram usage:        0 bytes
  8409 ;; Hardware stack levels used: 1
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_I2C_MasterFsm
  8414 ;; This function uses a non-reentrant model
  8415 ;;
  8416                           
  8417                           	psect	text80
  8418   002D52                     __ptext80:
  8419                           	callstack 0
  8420   002D52                     _I2C_DO_RESET:
  8421                           	callstack 20
  8422   002D52                     
  8423                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 497:     I2C_Status.busy = 0;
  8424   002D52  0100               	movlb	0	; () banked
  8425   002D54  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  8426   002D56                     
  8427                           ; BSR set to: 0
  8428                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
  8429   002D56  0E00               	movlw	0
  8430   002D58  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  8431   002D5A                     
  8432                           ; BSR set to: 0
  8433                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 499:     return I2C_RESET;
  8434   002D5A  0E0E               	movlw	14
  8435   002D5C                     
  8436                           ; BSR set to: 0
  8437   002D5C  0012               	return		;funcret
  8438   002D5E                     __end_of_I2C_DO_RESET:
  8439                           	callstack 0
  8440                           
  8441 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  8442 ;; Defined at:
  8443 ;;		line 489 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  8444 ;; Parameters:    Size  Location     Type
  8445 ;;		None
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;		None
  8448 ;; Return value:  Size  Location     Type
  8449 ;;                  1    wreg      enum E3134
  8450 ;; Registers used:
  8451 ;;		wreg, cstack
  8452 ;; Tracked objects:
  8453 ;;		On entry : 0/0
  8454 ;;		On exit  : 0/0
  8455 ;;		Unchanged: 0/0
  8456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8461 ;;Total ram usage:        0 bytes
  8462 ;; Hardware stack levels used: 1
  8463 ;; Hardware stack levels required when called: 1
  8464 ;; This function calls:
  8465 ;;		_I2C_MasterSendNack
  8466 ;; This function is called by:
  8467 ;;		_I2C_DO_RX
  8468 ;;		_I2C_MasterFsm
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472                           	psect	text81
  8473   002DB8                     __ptext81:
  8474                           	callstack 0
  8475   002DB8                     _I2C_DO_RX_NACK_RESTART:
  8476                           	callstack 19
  8477   002DB8                     
  8478                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 491:     I2C_MasterSendNack();
  8479   002DB8  EC09  F017         	call	_I2C_MasterSendNack	;wreg free
  8480   002DBC                     
  8481                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 492:     return I2C_SEND_RESTART;
  8482   002DBC  0E09               	movlw	9
  8483   002DBE  0012               	return		;funcret
  8484   002DC0                     __end_of_I2C_DO_RX_NACK_RESTART:
  8485                           	callstack 0
  8486                           
  8487 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  8488 ;; Defined at:
  8489 ;;		line 483 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;		None
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;		None
  8494 ;; Return value:  Size  Location     Type
  8495 ;;                  1    wreg      enum E3134
  8496 ;; Registers used:
  8497 ;;		wreg, cstack
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8507 ;;Total ram usage:        0 bytes
  8508 ;; Hardware stack levels used: 1
  8509 ;; Hardware stack levels required when called: 1
  8510 ;; This function calls:
  8511 ;;		_I2C_MasterSendNack
  8512 ;; This function is called by:
  8513 ;;		_I2C_DO_RX
  8514 ;;		_I2C_MasterFsm
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           
  8518                           	psect	text82
  8519   002DC0                     __ptext82:
  8520                           	callstack 0
  8521   002DC0                     _I2C_DO_RX_NACK_STOP:
  8522                           	callstack 19
  8523   002DC0                     
  8524                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 485:     I2C_MasterSendNack();
  8525   002DC0  EC09  F017         	call	_I2C_MasterSendNack	;wreg free
  8526   002DC4                     
  8527                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 486:     return I2C_SEND_STOP;
  8528   002DC4  0E0A               	movlw	10
  8529   002DC6  0012               	return		;funcret
  8530   002DC8                     __end_of_I2C_DO_RX_NACK_STOP:
  8531                           	callstack 0
  8532                           
  8533 ;; *************** function _I2C_DO_RX_ACK *****************
  8534 ;; Defined at:
  8535 ;;		line 476 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;		None
  8538 ;; Auto vars:     Size  Location     Type
  8539 ;;		None
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  1    wreg      enum E3134
  8542 ;; Registers used:
  8543 ;;		wreg, cstack
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8553 ;;Total ram usage:        0 bytes
  8554 ;; Hardware stack levels used: 1
  8555 ;; Hardware stack levels required when called: 1
  8556 ;; This function calls:
  8557 ;;		_I2C_MasterSendAck
  8558 ;; This function is called by:
  8559 ;;		_I2C_MasterFsm
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           	psect	text83
  8564   002DC8                     __ptext83:
  8565                           	callstack 0
  8566   002DC8                     _I2C_DO_RX_ACK:
  8567                           	callstack 19
  8568   002DC8                     
  8569                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 478:     I2C_MasterSendAck();
  8570   002DC8  EC06  F017         	call	_I2C_MasterSendAck	;wreg free
  8571   002DCC                     
  8572                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 479:     return I2C_RCEN;
  8573   002DCC  0E05               	movlw	5
  8574   002DCE  0012               	return		;funcret
  8575   002DD0                     __end_of_I2C_DO_RX_ACK:
  8576                           	callstack 0
  8577                           
  8578 ;; *************** function _I2C_DO_SEND_STOP *****************
  8579 ;; Defined at:
  8580 ;;		line 470 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;		None
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;		None
  8585 ;; Return value:  Size  Location     Type
  8586 ;;                  1    wreg      enum E3134
  8587 ;; Registers used:
  8588 ;;		wreg, cstack
  8589 ;; Tracked objects:
  8590 ;;		On entry : 0/0
  8591 ;;		On exit  : 0/0
  8592 ;;		Unchanged: 0/0
  8593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8598 ;;Total ram usage:        0 bytes
  8599 ;; Hardware stack levels used: 1
  8600 ;; Hardware stack levels required when called: 1
  8601 ;; This function calls:
  8602 ;;		_I2C_MasterStop
  8603 ;; This function is called by:
  8604 ;;		_I2C_DO_TX
  8605 ;;		_I2C_DO_TX_EMPTY
  8606 ;;		_I2C_DO_ADDRESS_NACK
  8607 ;;		_I2C_MasterFsm
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           	psect	text84
  8612   002DD0                     __ptext84:
  8613                           	callstack 0
  8614   002DD0                     _I2C_DO_SEND_STOP:
  8615                           	callstack 18
  8616   002DD0                     
  8617                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 472:     I2C_MasterStop();
  8618   002DD0  EC26  F017         	call	_I2C_MasterStop	;wreg free
  8619   002DD4                     
  8620                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 473:     return I2C_IDLE;
  8621   002DD4  0E00               	movlw	0
  8622   002DD6  0012               	return		;funcret
  8623   002DD8                     __end_of_I2C_DO_SEND_STOP:
  8624                           	callstack 0
  8625                           
  8626 ;; *************** function _I2C_DO_SEND_RESTART *****************
  8627 ;; Defined at:
  8628 ;;		line 464 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;		None
  8631 ;; Auto vars:     Size  Location     Type
  8632 ;;		None
  8633 ;; Return value:  Size  Location     Type
  8634 ;;                  1    wreg      enum E3134
  8635 ;; Registers used:
  8636 ;;		wreg, cstack
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/0
  8639 ;;		On exit  : 0/0
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8646 ;;Total ram usage:        0 bytes
  8647 ;; Hardware stack levels used: 1
  8648 ;; Hardware stack levels required when called: 1
  8649 ;; This function calls:
  8650 ;;		_I2C_MasterEnableRestart
  8651 ;; This function is called by:
  8652 ;;		_I2C_DO_TX_EMPTY
  8653 ;;		_I2C_DO_ADDRESS_NACK
  8654 ;;		_I2C_MasterFsm
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           	psect	text85
  8659   002DD8                     __ptext85:
  8660                           	callstack 0
  8661   002DD8                     _I2C_DO_SEND_RESTART:
  8662                           	callstack 18
  8663   002DD8                     
  8664                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 466:     I2C_MasterEnableRestart();
  8665   002DD8  EC28  F017         	call	_I2C_MasterEnableRestart	;wreg free
  8666   002DDC                     
  8667                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
  8668   002DDC  0E01               	movlw	1
  8669   002DDE  0012               	return		;funcret
  8670   002DE0                     __end_of_I2C_DO_SEND_RESTART:
  8671                           	callstack 0
  8672                           
  8673 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  8674 ;; Defined at:
  8675 ;;		line 457 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;		None
  8678 ;; Auto vars:     Size  Location     Type
  8679 ;;		None
  8680 ;; Return value:  Size  Location     Type
  8681 ;;                  1    wreg      enum E3134
  8682 ;; Registers used:
  8683 ;;		wreg, cstack
  8684 ;; Tracked objects:
  8685 ;;		On entry : 0/0
  8686 ;;		On exit  : 0/0
  8687 ;;		Unchanged: 0/0
  8688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8693 ;;Total ram usage:        0 bytes
  8694 ;; Hardware stack levels used: 1
  8695 ;; Hardware stack levels required when called: 1
  8696 ;; This function calls:
  8697 ;;		_I2C_MasterEnableRestart
  8698 ;; This function is called by:
  8699 ;;		_I2C_DO_TX
  8700 ;;		_I2C_MasterFsm
  8701 ;; This function uses a non-reentrant model
  8702 ;;
  8703                           
  8704                           	psect	text86
  8705   002DE0                     __ptext86:
  8706                           	callstack 0
  8707   002DE0                     _I2C_DO_SEND_RESTART_WRITE:
  8708                           	callstack 18
  8709   002DE0                     
  8710                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 459:     I2C_MasterEnableRestart();
  8711   002DE0  EC28  F017         	call	_I2C_MasterEnableRestart	;wreg free
  8712   002DE4                     
  8713                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
  8714   002DE4  0E02               	movlw	2
  8715   002DE6  0012               	return		;funcret
  8716   002DE8                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  8717                           	callstack 0
  8718                           
  8719 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  8720 ;; Defined at:
  8721 ;;		line 451 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  8722 ;; Parameters:    Size  Location     Type
  8723 ;;		None
  8724 ;; Auto vars:     Size  Location     Type
  8725 ;;		None
  8726 ;; Return value:  Size  Location     Type
  8727 ;;                  1    wreg      enum E3134
  8728 ;; Registers used:
  8729 ;;		wreg, cstack
  8730 ;; Tracked objects:
  8731 ;;		On entry : 0/0
  8732 ;;		On exit  : 0/0
  8733 ;;		Unchanged: 0/0
  8734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8739 ;;Total ram usage:        0 bytes
  8740 ;; Hardware stack levels used: 1
  8741 ;; Hardware stack levels required when called: 1
  8742 ;; This function calls:
  8743 ;;		_I2C_MasterEnableRestart
  8744 ;; This function is called by:
  8745 ;;		_I2C_DO_TX
  8746 ;;		_I2C_MasterFsm
  8747 ;; This function uses a non-reentrant model
  8748 ;;
  8749                           
  8750                           	psect	text87
  8751   002DE8                     __ptext87:
  8752                           	callstack 0
  8753   002DE8                     _I2C_DO_SEND_RESTART_READ:
  8754                           	callstack 18
  8755   002DE8                     
  8756                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 453:     I2C_MasterEnableRestart();
  8757   002DE8  EC28  F017         	call	_I2C_MasterEnableRestart	;wreg free
  8758   002DEC                     
  8759                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
  8760   002DEC  0E01               	movlw	1
  8761   002DEE  0012               	return		;funcret
  8762   002DF0                     __end_of_I2C_DO_SEND_RESTART_READ:
  8763                           	callstack 0
  8764                           
  8765 ;; *************** function _I2C_DO_RCEN *****************
  8766 ;; Defined at:
  8767 ;;		line 404 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  8768 ;; Parameters:    Size  Location     Type
  8769 ;;		None
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;		None
  8772 ;; Return value:  Size  Location     Type
  8773 ;;                  1    wreg      enum E3134
  8774 ;; Registers used:
  8775 ;;		wreg, cstack
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8785 ;;Total ram usage:        0 bytes
  8786 ;; Hardware stack levels used: 1
  8787 ;; Hardware stack levels required when called: 1
  8788 ;; This function calls:
  8789 ;;		_I2C_MasterStartRx
  8790 ;; This function is called by:
  8791 ;;		_I2C_MasterFsm
  8792 ;; This function uses a non-reentrant model
  8793 ;;
  8794                           
  8795                           	psect	text88
  8796   002D5E                     __ptext88:
  8797                           	callstack 0
  8798   002D5E                     _I2C_DO_RCEN:
  8799                           	callstack 19
  8800   002D5E                     
  8801                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 406:     I2C_Status.addressNackCheck =
      +                           0;
  8802   002D5E  0100               	movlb	0	; () banked
  8803   002D60  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  8804   002D62                     
  8805                           ; BSR set to: 0
  8806                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 407:     I2C_MasterStartRx();
  8807   002D62  EC20  F017         	call	_I2C_MasterStartRx	;wreg free
  8808   002D66                     
  8809                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 408:     return I2C_RX;
  8810   002D66  0E04               	movlw	4
  8811   002D68  0012               	return		;funcret
  8812   002D6A                     __end_of_I2C_DO_RCEN:
  8813                           	callstack 0
  8814                           
  8815 ;; *************** function _I2C_DO_RX *****************
  8816 ;; Defined at:
  8817 ;;		line 380 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  8818 ;; Parameters:    Size  Location     Type
  8819 ;;		None
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;		None
  8822 ;; Return value:  Size  Location     Type
  8823 ;;                  1    wreg      enum E3134
  8824 ;; Registers used:
  8825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  8826 ;; Tracked objects:
  8827 ;;		On entry : 0/0
  8828 ;;		On exit  : 0/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8835 ;;Total ram usage:        2 bytes
  8836 ;; Hardware stack levels used: 1
  8837 ;; Hardware stack levels required when called: 3
  8838 ;; This function calls:
  8839 ;;		NULL
  8840 ;;		_I2C_CallbackReturnReset
  8841 ;;		_I2C_CallbackReturnStop
  8842 ;;		_I2C_DO_RX_NACK_RESTART
  8843 ;;		_I2C_DO_RX_NACK_STOP
  8844 ;;		_I2C_MasterGetRxData
  8845 ;;		_I2C_MasterSendAck
  8846 ;;		_rd1RegCompleteHandler
  8847 ;;		_rd2RegCompleteHandler
  8848 ;;		_rdBlkRegCompleteHandler
  8849 ;;		_wr1RegCompleteHandler
  8850 ;;		_wr2RegCompleteHandler
  8851 ;; This function is called by:
  8852 ;;		_I2C_MasterFsm
  8853 ;; This function uses a non-reentrant model
  8854 ;;
  8855                           
  8856                           	psect	text89
  8857   001EE8                     __ptext89:
  8858                           	callstack 0
  8859   001EE8                     _I2C_DO_RX:
  8860                           	callstack 17
  8861   001EE8                     
  8862                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_
      +                          MasterGetRxData();
  8863   001EE8  EC1E  F017         	call	_I2C_MasterGetRxData	;wreg free
  8864   001EEC  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  8865   001EF0  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  8866   001EF4  6EDF               	movwf	indf2,c
  8867   001EF6  0100               	movlb	0	; () banked
  8868   001EF8  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  8869   001EFA  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  8870   001EFC                     
  8871                           ; BSR set to: 0
  8872                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 383:     if(--I2C_Status.data_length)
  8873   001EFC  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  8874   001EFE  A0D8               	btfss	status,0,c
  8875   001F00  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  8876   001F02  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  8877   001F04  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  8878   001F06  B4D8               	btfsc	status,2,c
  8879   001F08  EF88  F00F         	goto	i2u234_41
  8880   001F0C  EF8A  F00F         	goto	i2u234_40
  8881   001F10                     i2u234_41:
  8882   001F10  EF8F  F00F         	goto	i2l245
  8883   001F14                     i2u234_40:
  8884   001F14                     
  8885                           ; BSR set to: 0
  8886                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 384:     {;mcc_generated_files/i2c_cli
      +                          ent/src/i2c_master.c: 385:         I2C_MasterSendAck();
  8887   001F14  EC06  F017         	call	_I2C_MasterSendAck	;wreg free
  8888   001F18                     
  8889                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 386:         return I2C_RCEN;
  8890   001F18  0E05               	movlw	5
  8891   001F1A  EFC6  F00F         	goto	i2l246
  8892   001F1E                     i2l245:
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 389:     {;mcc_generated_files/i2c_cli
      +                          ent/src/i2c_master.c: 390:         I2C_Status.bufferFree = 1;
  8896   001F1E  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  8897                           
  8898                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 391:         switch(I2C_Status.callbac
      +                          kTable[I2C_DATA_COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  8899   001F20  EF9A  F00F         	goto	i2l4604
  8900   001F24                     i2l4594:
  8901                           
  8902                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 395:                 return I2C_DO_RX_
      +                          NACK_RESTART();
  8903   001F24  ECDC  F016         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
  8904   001F28  EFC6  F00F         	goto	i2l246
  8905   001F2C                     i2l4598:
  8906                           
  8907                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 399:                 return I2C_DO_RX_
      +                          NACK_STOP();
  8908   001F2C  ECE0  F016         	call	_I2C_DO_RX_NACK_STOP	;wreg free
  8909   001F30  EFC6  F00F         	goto	i2l246
  8910   001F34                     i2l4604:
  8911                           
  8912                           ; BSR set to: 0
  8913   001F34  C06C  F00A         	movff	_I2C_Status+12,rdBlkRegCompleteHandler@ptr
  8914   001F38  C06D  F00B         	movff	_I2C_Status+13,rdBlkRegCompleteHandler@ptr+1
  8915   001F3C  D802               	call	i2u235_48
  8916   001F3E  EFAA  F00F         	goto	i2u235_49
  8917   001F42                     i2u235_48:
  8918   001F42  0005               	push	
  8919   001F44  6EFA               	movwf	pclath,c
  8920   001F46  5160               	movf	_I2C_Status& (0+255),w,b
  8921   001F48  6EFD               	movwf	tosl,c
  8922   001F4A  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  8923   001F4C  6EFE               	movwf	tosh,c
  8924   001F4E  6AFF               	clrf	tosu,c
  8925   001F50  50FA               	movf	pclath,w,c
  8926   001F52  0012               	return		;indir
  8927   001F54                     i2u235_49:
  8928   001F54  6E01               	movwf	??_I2C_DO_RX^0,c
  8929   001F56  6A02               	clrf	(??_I2C_DO_RX+1)^0,c
  8930                           
  8931                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8932                           ; Switch size 1, requested type "simple"
  8933                           ; Number of cases is 1, Range of values is 0 to 0
  8934                           ; switch strategies available:
  8935                           ; Name         Instructions Cycles
  8936                           ; simple_byte            4     3 (average)
  8937                           ;	Chosen strategy is simple_byte
  8938   001F58  5002               	movf	(??_I2C_DO_RX+1)^0,w,c
  8939   001F5A  0A00               	xorlw	0	; case 0
  8940   001F5C  B4D8               	btfsc	status,2,c
  8941   001F5E  EFB3  F00F         	goto	i2l5846
  8942   001F62  EF96  F00F         	goto	i2l4598
  8943   001F66                     i2l5846:
  8944                           
  8945                           ; Switch size 1, requested type "simple"
  8946                           ; Number of cases is 4, Range of values is 1 to 4
  8947                           ; switch strategies available:
  8948                           ; Name         Instructions Cycles
  8949                           ; simple_byte           13     7 (average)
  8950                           ;	Chosen strategy is simple_byte
  8951   001F66  5001               	movf	??_I2C_DO_RX^0,w,c
  8952   001F68  0A01               	xorlw	1	; case 1
  8953   001F6A  B4D8               	btfsc	status,2,c
  8954   001F6C  EF96  F00F         	goto	i2l4598
  8955   001F70  0A03               	xorlw	3	; case 2
  8956   001F72  B4D8               	btfsc	status,2,c
  8957   001F74  EF92  F00F         	goto	i2l4594
  8958   001F78  0A01               	xorlw	1	; case 3
  8959   001F7A  B4D8               	btfsc	status,2,c
  8960   001F7C  EF92  F00F         	goto	i2l4594
  8961   001F80  0A07               	xorlw	7	; case 4
  8962   001F82  B4D8               	btfsc	status,2,c
  8963   001F84  EF96  F00F         	goto	i2l4598
  8964   001F88  EF96  F00F         	goto	i2l4598
  8965   001F8C                     i2l246:
  8966   001F8C  0012               	return		;funcret
  8967   001F8E                     __end_of_I2C_DO_RX:
  8968                           	callstack 0
  8969                           
  8970 ;; *************** function _I2C_DO_TX *****************
  8971 ;; Defined at:
  8972 ;;		line 356 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;		None
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;		None
  8977 ;; Return value:  Size  Location     Type
  8978 ;;                  1    wreg      enum E3134
  8979 ;; Registers used:
  8980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  8981 ;; Tracked objects:
  8982 ;;		On entry : 0/0
  8983 ;;		On exit  : 0/0
  8984 ;;		Unchanged: 0/0
  8985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8988 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8989 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8990 ;;Total ram usage:        2 bytes
  8991 ;; Hardware stack levels used: 1
  8992 ;; Hardware stack levels required when called: 3
  8993 ;; This function calls:
  8994 ;;		NULL
  8995 ;;		_I2C_CallbackReturnReset
  8996 ;;		_I2C_CallbackReturnStop
  8997 ;;		_I2C_DO_SEND_RESTART_READ
  8998 ;;		_I2C_DO_SEND_RESTART_WRITE
  8999 ;;		_I2C_DO_SEND_STOP
  9000 ;;		_I2C_MasterIsNack
  9001 ;;		_I2C_MasterSendTxData
  9002 ;;		_rd1RegCompleteHandler
  9003 ;;		_rd2RegCompleteHandler
  9004 ;;		_rdBlkRegCompleteHandler
  9005 ;;		_wr1RegCompleteHandler
  9006 ;;		_wr2RegCompleteHandler
  9007 ;; This function is called by:
  9008 ;;		_I2C_MasterFsm
  9009 ;; This function uses a non-reentrant model
  9010 ;;
  9011                           
  9012                           	psect	text90
  9013   00193E                     __ptext90:
  9014                           	callstack 0
  9015   00193E                     _I2C_DO_TX:
  9016                           	callstack 17
  9017   00193E                     
  9018                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 358:     if(I2C_MasterIsNack())
  9019   00193E  EC48  F016         	call	_I2C_MasterIsNack	;wreg free
  9020   001942  0900               	iorlw	0
  9021   001944  B4D8               	btfsc	status,2,c
  9022   001946  EFA7  F00C         	goto	i2u231_41
  9023   00194A  EFA9  F00C         	goto	i2u231_40
  9024   00194E                     i2u231_41:
  9025   00194E  EFE4  F00C         	goto	i2l229
  9026   001952                     i2u231_40:
  9027   001952  EFB7  F00C         	goto	i2l4564
  9028   001956                     i2l4550:
  9029                           
  9030                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 363:                 return I2C_DO_SEN
      +                          D_RESTART_READ();
  9031   001956  ECF4  F016         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
  9032   00195A  EF00  F00D         	goto	i2l232
  9033   00195E                     i2l4554:
  9034                           
  9035                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 365:                   return I2C_DO_S
      +                          END_RESTART_WRITE();
  9036   00195E  ECF0  F016         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
  9037   001962  EF00  F00D         	goto	i2l232
  9038   001966                     i2l4558:
  9039                           
  9040                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 369:                 return I2C_DO_SEN
      +                          D_STOP();
  9041   001966  ECE8  F016         	call	_I2C_DO_SEND_STOP	;wreg free
  9042   00196A  EF00  F00D         	goto	i2l232
  9043   00196E                     i2l4564:
  9044   00196E  C072  F00A         	movff	_I2C_Status+18,rdBlkRegCompleteHandler@ptr
  9045   001972  C073  F00B         	movff	_I2C_Status+19,rdBlkRegCompleteHandler@ptr+1
  9046   001976  D802               	call	i2u232_48
  9047   001978  EFC8  F00C         	goto	i2u232_49
  9048   00197C                     i2u232_48:
  9049   00197C  0005               	push	
  9050   00197E  6EFA               	movwf	pclath,c
  9051   001980  0100               	movlb	0	; () banked
  9052   001982  5166               	movf	(_I2C_Status+6)& (0+255),w,b
  9053   001984  6EFD               	movwf	tosl,c
  9054   001986  5167               	movf	(_I2C_Status+7)& (0+255),w,b
  9055   001988  6EFE               	movwf	tosh,c
  9056   00198A  6AFF               	clrf	tosu,c
  9057   00198C  50FA               	movf	pclath,w,c
  9058   00198E  0012               	return		;indir
  9059   001990                     i2u232_49:
  9060   001990  6E02               	movwf	??_I2C_DO_TX^0,c
  9061   001992  6A03               	clrf	(??_I2C_DO_TX+1)^0,c
  9062                           
  9063                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9064                           ; Switch size 1, requested type "simple"
  9065                           ; Number of cases is 1, Range of values is 0 to 0
  9066                           ; switch strategies available:
  9067                           ; Name         Instructions Cycles
  9068                           ; simple_byte            4     3 (average)
  9069                           ;	Chosen strategy is simple_byte
  9070   001994  5003               	movf	(??_I2C_DO_TX+1)^0,w,c
  9071   001996  0A00               	xorlw	0	; case 0
  9072   001998  B4D8               	btfsc	status,2,c
  9073   00199A  EFD1  F00C         	goto	i2l5848
  9074   00199E  EFB3  F00C         	goto	i2l4558
  9075   0019A2                     i2l5848:
  9076                           
  9077                           ; Switch size 1, requested type "simple"
  9078                           ; Number of cases is 4, Range of values is 1 to 4
  9079                           ; switch strategies available:
  9080                           ; Name         Instructions Cycles
  9081                           ; simple_byte           13     7 (average)
  9082                           ;	Chosen strategy is simple_byte
  9083   0019A2  5002               	movf	??_I2C_DO_TX^0,w,c
  9084   0019A4  0A01               	xorlw	1	; case 1
  9085   0019A6  B4D8               	btfsc	status,2,c
  9086   0019A8  EFB3  F00C         	goto	i2l4558
  9087   0019AC  0A03               	xorlw	3	; case 2
  9088   0019AE  B4D8               	btfsc	status,2,c
  9089   0019B0  EFAB  F00C         	goto	i2l4550
  9090   0019B4  0A01               	xorlw	1	; case 3
  9091   0019B6  B4D8               	btfsc	status,2,c
  9092   0019B8  EFAF  F00C         	goto	i2l4554
  9093   0019BC  0A07               	xorlw	7	; case 4
  9094   0019BE  B4D8               	btfsc	status,2,c
  9095   0019C0  EFB3  F00C         	goto	i2l4558
  9096   0019C4  EFB3  F00C         	goto	i2l4558
  9097   0019C8                     i2l229:
  9098                           
  9099                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 373:     {;mcc_generated_files/i2c_cli
      +                          ent/src/i2c_master.c: 374:         I2C_Status.addressNackCheck = 0;
  9100   0019C8  0100               	movlb	0	; () banked
  9101   0019CA  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  9102   0019CC                     
  9103                           ; BSR set to: 0
  9104                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C
      +                          _Status.data_ptr++);
  9105   0019CC  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  9106   0019D0  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  9107   0019D4  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  9108   0019D6  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  9109   0019D8  50DF               	movf	indf2,w,c
  9110   0019DA  ECF8  F016         	call	_I2C_MasterSendTxData
  9111   0019DE                     
  9112                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 376:         return (--I2C_Status.data
      +                          _length)?I2C_TX:I2C_TX_EMPTY;
  9113   0019DE  0100               	movlb	0	; () banked
  9114   0019E0  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  9115   0019E2  A0D8               	btfss	status,0,c
  9116   0019E4  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  9117   0019E6  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  9118   0019E8  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  9119   0019EA  A4D8               	btfss	status,2,c
  9120   0019EC  EFFA  F00C         	goto	i2u233_41
  9121   0019F0  EFFC  F00C         	goto	i2u233_40
  9122   0019F4                     i2u233_41:
  9123   0019F4  EFFF  F00C         	goto	i2l4572
  9124   0019F8                     i2u233_40:
  9125   0019F8                     
  9126                           ; BSR set to: 0
  9127   0019F8  0E06               	movlw	6
  9128   0019FA  EF00  F00D         	goto	i2l232
  9129   0019FE                     i2l4572:
  9130                           
  9131                           ; BSR set to: 0
  9132   0019FE  0E03               	movlw	3
  9133   001A00                     i2l232:
  9134   001A00  0012               	return		;funcret
  9135   001A02                     __end_of_I2C_DO_TX:
  9136                           	callstack 0
  9137                           
  9138 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  9139 ;; Defined at:
  9140 ;;		line 349 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  9141 ;; Parameters:    Size  Location     Type
  9142 ;;		None
  9143 ;; Auto vars:     Size  Location     Type
  9144 ;;		None
  9145 ;; Return value:  Size  Location     Type
  9146 ;;                  1    wreg      enum E3134
  9147 ;; Registers used:
  9148 ;;		wreg, status,2, cstack
  9149 ;; Tracked objects:
  9150 ;;		On entry : 0/0
  9151 ;;		On exit  : 0/0
  9152 ;;		Unchanged: 0/0
  9153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9158 ;;Total ram usage:        0 bytes
  9159 ;; Hardware stack levels used: 1
  9160 ;; Hardware stack levels required when called: 1
  9161 ;; This function calls:
  9162 ;;		_I2C_MasterSendTxData
  9163 ;; This function is called by:
  9164 ;;		_I2C_MasterFsm
  9165 ;; This function uses a non-reentrant model
  9166 ;;
  9167                           
  9168                           	psect	text91
  9169   002D44                     __ptext91:
  9170                           	callstack 0
  9171   002D44                     _I2C_DO_SEND_ADR_WRITE:
  9172                           	callstack 19
  9173   002D44                     
  9174                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 351:     I2C_Status.addressNackCheck =
      +                           1;
  9175   002D44  0100               	movlb	0	; () banked
  9176   002D46  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  9177   002D48                     
  9178                           ; BSR set to: 0
  9179                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t
      +                          ) (I2C_Status.address));
  9180   002D48  517C               	movf	(_I2C_Status+28)& (0+255),w,b
  9181   002D4A  ECF8  F016         	call	_I2C_MasterSendTxData
  9182   002D4E                     
  9183                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 353:     return I2C_TX;
  9184   002D4E  0E03               	movlw	3
  9185   002D50  0012               	return		;funcret
  9186   002D52                     __end_of_I2C_DO_SEND_ADR_WRITE:
  9187                           	callstack 0
  9188                           
  9189 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  9190 ;; Defined at:
  9191 ;;		line 342 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  9192 ;; Parameters:    Size  Location     Type
  9193 ;;		None
  9194 ;; Auto vars:     Size  Location     Type
  9195 ;;		None
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  1    wreg      enum E3134
  9198 ;; Registers used:
  9199 ;;		wreg, status,2, status,0, cstack
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9209 ;;Total ram usage:        0 bytes
  9210 ;; Hardware stack levels used: 1
  9211 ;; Hardware stack levels required when called: 1
  9212 ;; This function calls:
  9213 ;;		_I2C_MasterSendTxData
  9214 ;; This function is called by:
  9215 ;;		_I2C_MasterFsm
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           	psect	text92
  9220   002D34                     __ptext92:
  9221                           	callstack 0
  9222   002D34                     _I2C_DO_SEND_ADR_READ:
  9223                           	callstack 19
  9224   002D34                     
  9225                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 344:     I2C_Status.addressNackCheck =
      +                           1;
  9226   002D34  0100               	movlb	0	; () banked
  9227   002D36  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  9228   002D38                     
  9229                           ; BSR set to: 0
  9230                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t
      +                          ) (I2C_Status.address | 1));
  9231   002D38  517C               	movf	(_I2C_Status+28)& (0+255),w,b
  9232   002D3A  0901               	iorlw	1
  9233   002D3C  ECF8  F016         	call	_I2C_MasterSendTxData
  9234   002D40                     
  9235                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 346:     return I2C_RCEN;
  9236   002D40  0E05               	movlw	5
  9237   002D42  0012               	return		;funcret
  9238   002D44                     __end_of_I2C_DO_SEND_ADR_READ:
  9239                           	callstack 0
  9240                           
  9241 ;; *************** function _I2C_DO_IDLE *****************
  9242 ;; Defined at:
  9243 ;;		line 335 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  9244 ;; Parameters:    Size  Location     Type
  9245 ;;		None
  9246 ;; Auto vars:     Size  Location     Type
  9247 ;;		None
  9248 ;; Return value:  Size  Location     Type
  9249 ;;                  1    wreg      enum E3134
  9250 ;; Registers used:
  9251 ;;		wreg, status,2
  9252 ;; Tracked objects:
  9253 ;;		On entry : 0/0
  9254 ;;		On exit  : 0/0
  9255 ;;		Unchanged: 0/0
  9256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9261 ;;Total ram usage:        0 bytes
  9262 ;; Hardware stack levels used: 1
  9263 ;; This function calls:
  9264 ;;		Nothing
  9265 ;; This function is called by:
  9266 ;;		_I2C_MasterFsm
  9267 ;; This function uses a non-reentrant model
  9268 ;;
  9269                           
  9270                           	psect	text93
  9271   002D6A                     __ptext93:
  9272                           	callstack 0
  9273   002D6A                     _I2C_DO_IDLE:
  9274                           	callstack 20
  9275   002D6A                     
  9276                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 337:     I2C_Status.busy = 0;
  9277   002D6A  0100               	movlb	0	; () banked
  9278   002D6C  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  9279   002D6E                     
  9280                           ; BSR set to: 0
  9281                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
  9282   002D6E  0E00               	movlw	0
  9283   002D70  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  9284   002D72                     
  9285                           ; BSR set to: 0
  9286                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 339:     return I2C_RESET;
  9287   002D72  0E0E               	movlw	14
  9288   002D74                     
  9289                           ; BSR set to: 0
  9290   002D74  0012               	return		;funcret
  9291   002D76                     __end_of_I2C_DO_IDLE:
  9292                           	callstack 0
  9293                           
  9294 ;; *************** function _I2C_DO_TX_EMPTY *****************
  9295 ;; Defined at:
  9296 ;;		line 411 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;		None
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;		None
  9301 ;; Return value:  Size  Location     Type
  9302 ;;                  1    wreg      enum E3134
  9303 ;; Registers used:
  9304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : 0/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9312 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9314 ;;Total ram usage:        2 bytes
  9315 ;; Hardware stack levels used: 1
  9316 ;; Hardware stack levels required when called: 3
  9317 ;; This function calls:
  9318 ;;		NULL
  9319 ;;		_I2C_CallbackReturnReset
  9320 ;;		_I2C_CallbackReturnStop
  9321 ;;		_I2C_DO_SEND_RESTART
  9322 ;;		_I2C_DO_SEND_STOP
  9323 ;;		_I2C_MasterSetIrq
  9324 ;;		_rd1RegCompleteHandler
  9325 ;;		_rd2RegCompleteHandler
  9326 ;;		_rdBlkRegCompleteHandler
  9327 ;;		_wr1RegCompleteHandler
  9328 ;;		_wr2RegCompleteHandler
  9329 ;; This function is called by:
  9330 ;;		_I2C_MasterFsm
  9331 ;; This function uses a non-reentrant model
  9332 ;;
  9333                           
  9334                           	psect	text94
  9335   002140                     __ptext94:
  9336                           	callstack 0
  9337   002140                     _I2C_DO_TX_EMPTY:
  9338                           	callstack 17
  9339   002140                     
  9340                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
  9341   002140  0100               	movlb	0	; () banked
  9342   002142  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  9343                           
  9344                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 414:     switch(I2C_Status.callbackTab
      +                          le[I2C_DATA_COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  9345   002144  EFB1  F010         	goto	i2l4636
  9346   002148                     i2l4620:
  9347                           
  9348                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 418:             return I2C_DO_SEND_RE
      +                          START();
  9349   002148  ECEC  F016         	call	_I2C_DO_SEND_RESTART	;wreg free
  9350   00214C  EFDD  F010         	goto	i2l263
  9351   002150                     i2l4624:
  9352                           
  9353                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 420:             I2C_MasterSetIrq();
  9354   002150  EC1C  F017         	call	_I2C_MasterSetIrq	;wreg free
  9355   002154                     
  9356                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 421:             return I2C_TX;
  9357   002154  0E03               	movlw	3
  9358   002156  EFDD  F010         	goto	i2l263
  9359   00215A                     i2l4630:
  9360                           
  9361                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 424:             return I2C_DO_SEND_ST
      +                          OP();
  9362   00215A  ECE8  F016         	call	_I2C_DO_SEND_STOP	;wreg free
  9363   00215E  EFDD  F010         	goto	i2l263
  9364   002162                     i2l4636:
  9365                           
  9366                           ; BSR set to: 0
  9367   002162  C06C  F00A         	movff	_I2C_Status+12,rdBlkRegCompleteHandler@ptr
  9368   002166  C06D  F00B         	movff	_I2C_Status+13,rdBlkRegCompleteHandler@ptr+1
  9369   00216A  D802               	call	i2u236_48
  9370   00216C  EFC1  F010         	goto	i2u236_49
  9371   002170                     i2u236_48:
  9372   002170  0005               	push	
  9373   002172  6EFA               	movwf	pclath,c
  9374   002174  5160               	movf	_I2C_Status& (0+255),w,b
  9375   002176  6EFD               	movwf	tosl,c
  9376   002178  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  9377   00217A  6EFE               	movwf	tosh,c
  9378   00217C  6AFF               	clrf	tosu,c
  9379   00217E  50FA               	movf	pclath,w,c
  9380   002180  0012               	return		;indir
  9381   002182                     i2u236_49:
  9382   002182  6E01               	movwf	??_I2C_DO_TX_EMPTY^0,c
  9383   002184  6A02               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
  9384                           
  9385                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9386                           ; Switch size 1, requested type "simple"
  9387                           ; Number of cases is 1, Range of values is 0 to 0
  9388                           ; switch strategies available:
  9389                           ; Name         Instructions Cycles
  9390                           ; simple_byte            4     3 (average)
  9391                           ;	Chosen strategy is simple_byte
  9392   002186  5002               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
  9393   002188  0A00               	xorlw	0	; case 0
  9394   00218A  B4D8               	btfsc	status,2,c
  9395   00218C  EFCA  F010         	goto	i2l5850
  9396   002190  EFAD  F010         	goto	i2l4630
  9397   002194                     i2l5850:
  9398                           
  9399                           ; Switch size 1, requested type "simple"
  9400                           ; Number of cases is 4, Range of values is 1 to 4
  9401                           ; switch strategies available:
  9402                           ; Name         Instructions Cycles
  9403                           ; simple_byte           13     7 (average)
  9404                           ;	Chosen strategy is simple_byte
  9405   002194  5001               	movf	??_I2C_DO_TX_EMPTY^0,w,c
  9406   002196  0A01               	xorlw	1	; case 1
  9407   002198  B4D8               	btfsc	status,2,c
  9408   00219A  EFAD  F010         	goto	i2l4630
  9409   00219E  0A03               	xorlw	3	; case 2
  9410   0021A0  B4D8               	btfsc	status,2,c
  9411   0021A2  EFA4  F010         	goto	i2l4620
  9412   0021A6  0A01               	xorlw	1	; case 3
  9413   0021A8  B4D8               	btfsc	status,2,c
  9414   0021AA  EFA4  F010         	goto	i2l4620
  9415   0021AE  0A07               	xorlw	7	; case 4
  9416   0021B0  B4D8               	btfsc	status,2,c
  9417   0021B2  EFA8  F010         	goto	i2l4624
  9418   0021B6  EFAD  F010         	goto	i2l4630
  9419   0021BA                     i2l263:
  9420   0021BA  0012               	return		;funcret
  9421   0021BC                     __end_of_I2C_DO_TX_EMPTY:
  9422                           	callstack 0
  9423                           
  9424 ;; *************** function _I2C_MasterSetIrq *****************
  9425 ;; Defined at:
  9426 ;;		line 647 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  9427 ;; Parameters:    Size  Location     Type
  9428 ;;		None
  9429 ;; Auto vars:     Size  Location     Type
  9430 ;;		None
  9431 ;; Return value:  Size  Location     Type
  9432 ;;                  1    wreg      void 
  9433 ;; Registers used:
  9434 ;;		None
  9435 ;; Tracked objects:
  9436 ;;		On entry : 0/0
  9437 ;;		On exit  : 0/0
  9438 ;;		Unchanged: 0/0
  9439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9444 ;;Total ram usage:        0 bytes
  9445 ;; Hardware stack levels used: 1
  9446 ;; This function calls:
  9447 ;;		Nothing
  9448 ;; This function is called by:
  9449 ;;		_I2C_DO_TX_EMPTY
  9450 ;; This function uses a non-reentrant model
  9451 ;;
  9452                           
  9453                           	psect	text95
  9454   002E38                     __ptext95:
  9455                           	callstack 0
  9456   002E38                     _I2C_MasterSetIrq:
  9457                           	callstack 19
  9458   002E38                     
  9459                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
  9460   002E38  869E               	bsf	158,3,c	;volatile
  9461   002E3A  0012               	return		;funcret
  9462   002E3C                     __end_of_I2C_MasterSetIrq:
  9463                           	callstack 0
  9464                           
  9465 ;; *************** function _I2C_MasterIsNack *****************
  9466 ;; Defined at:
  9467 ;;		line 599 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  9468 ;; Parameters:    Size  Location     Type
  9469 ;;		None
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;		None
  9472 ;; Return value:  Size  Location     Type
  9473 ;;                  1    wreg      _Bool 
  9474 ;; Registers used:
  9475 ;;		wreg
  9476 ;; Tracked objects:
  9477 ;;		On entry : 0/0
  9478 ;;		On exit  : 0/0
  9479 ;;		Unchanged: 0/0
  9480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9485 ;;Total ram usage:        0 bytes
  9486 ;; Hardware stack levels used: 1
  9487 ;; This function calls:
  9488 ;;		Nothing
  9489 ;; This function is called by:
  9490 ;;		_I2C_MasterFsm
  9491 ;;		_I2C_DO_TX
  9492 ;; This function uses a non-reentrant model
  9493 ;;
  9494                           
  9495                           	psect	text96
  9496   002C90                     __ptext96:
  9497                           	callstack 0
  9498   002C90                     _I2C_MasterIsNack:
  9499                           	callstack 20
  9500   002C90                     
  9501                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
  9502   002C90  BCC5               	btfsc	197,6,c	;volatile
  9503   002C92  EF4D  F016         	goto	i2u226_41
  9504   002C96  EF50  F016         	goto	i2u226_40
  9505   002C9A                     i2u226_41:
  9506   002C9A  0E01               	movlw	1
  9507   002C9C  EF51  F016         	goto	i2u226_46
  9508   002CA0                     i2u226_40:
  9509   002CA0  0E00               	movlw	0
  9510   002CA2                     i2u226_46:
  9511   002CA2  0012               	return		;funcret
  9512   002CA4                     __end_of_I2C_MasterIsNack:
  9513                           	callstack 0
  9514                           
  9515 ;; *************** function _I2C_MasterSendTxData *****************
  9516 ;; Defined at:
  9517 ;;		line 569 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  9518 ;; Parameters:    Size  Location     Type
  9519 ;;  data            1    wreg     unsigned char 
  9520 ;; Auto vars:     Size  Location     Type
  9521 ;;  data            1    0[COMRAM] unsigned char 
  9522 ;; Return value:  Size  Location     Type
  9523 ;;                  1    wreg      void 
  9524 ;; Registers used:
  9525 ;;		wreg
  9526 ;; Tracked objects:
  9527 ;;		On entry : 0/0
  9528 ;;		On exit  : 0/0
  9529 ;;		Unchanged: 0/0
  9530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9532 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9534 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9535 ;;Total ram usage:        1 bytes
  9536 ;; Hardware stack levels used: 1
  9537 ;; This function calls:
  9538 ;;		Nothing
  9539 ;; This function is called by:
  9540 ;;		_I2C_DO_SEND_ADR_READ
  9541 ;;		_I2C_DO_SEND_ADR_WRITE
  9542 ;;		_I2C_DO_TX
  9543 ;; This function uses a non-reentrant model
  9544 ;;
  9545                           
  9546                           	psect	text97
  9547   002DF0                     __ptext97:
  9548                           	callstack 0
  9549   002DF0                     _I2C_MasterSendTxData:
  9550                           	callstack 19
  9551                           
  9552                           ;incstack = 0
  9553                           ;I2C_MasterSendTxData@data stored from wreg
  9554   002DF0  6E01               	movwf	I2C_MasterSendTxData@data^0,c
  9555   002DF2                     
  9556                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 569: static __attribute__((inline)) vo
      +                          id I2C_MasterSendTxData(uint8_t data);mcc_generated_files/i2c_client/src/i2c_master.c: 5
      +                          70: {;mcc_generated_files/i2c_client/src/i2c_master.c: 571:     SSPBUF = data;
  9557   002DF2  C001  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
  9558   002DF6  0012               	return		;funcret
  9559   002DF8                     __end_of_I2C_MasterSendTxData:
  9560                           	callstack 0
  9561                           
  9562 ;; *************** function _I2C_MasterSendAck *****************
  9563 ;; Defined at:
  9564 ;;		line 604 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  9565 ;; Parameters:    Size  Location     Type
  9566 ;;		None
  9567 ;; Auto vars:     Size  Location     Type
  9568 ;;		None
  9569 ;; Return value:  Size  Location     Type
  9570 ;;                  1    wreg      void 
  9571 ;; Registers used:
  9572 ;;		None
  9573 ;; Tracked objects:
  9574 ;;		On entry : 0/0
  9575 ;;		On exit  : 0/0
  9576 ;;		Unchanged: 0/0
  9577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9582 ;;Total ram usage:        0 bytes
  9583 ;; Hardware stack levels used: 1
  9584 ;; This function calls:
  9585 ;;		Nothing
  9586 ;; This function is called by:
  9587 ;;		_I2C_DO_RX
  9588 ;;		_I2C_DO_RX_ACK
  9589 ;; This function uses a non-reentrant model
  9590 ;;
  9591                           
  9592                           	psect	text98
  9593   002E0C                     __ptext98:
  9594                           	callstack 0
  9595   002E0C                     _I2C_MasterSendAck:
  9596                           	callstack 19
  9597   002E0C                     
  9598                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
  9599   002E0C  9AC5               	bcf	197,5,c	;volatile
  9600                           
  9601                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
  9602   002E0E  88C5               	bsf	197,4,c	;volatile
  9603   002E10  0012               	return		;funcret
  9604   002E12                     __end_of_I2C_MasterSendAck:
  9605                           	callstack 0
  9606                           
  9607 ;; *************** function _I2C_MasterGetRxData *****************
  9608 ;; Defined at:
  9609 ;;		line 564 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  9610 ;; Parameters:    Size  Location     Type
  9611 ;;		None
  9612 ;; Auto vars:     Size  Location     Type
  9613 ;;		None
  9614 ;; Return value:  Size  Location     Type
  9615 ;;                  1    wreg      unsigned char 
  9616 ;; Registers used:
  9617 ;;		wreg, status,2
  9618 ;; Tracked objects:
  9619 ;;		On entry : 0/0
  9620 ;;		On exit  : 0/0
  9621 ;;		Unchanged: 0/0
  9622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9627 ;;Total ram usage:        0 bytes
  9628 ;; Hardware stack levels used: 1
  9629 ;; This function calls:
  9630 ;;		Nothing
  9631 ;; This function is called by:
  9632 ;;		_I2C_DO_RX
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           	psect	text99
  9637   002E3C                     __ptext99:
  9638                           	callstack 0
  9639   002E3C                     _I2C_MasterGetRxData:
  9640                           	callstack 19
  9641   002E3C                     
  9642                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 566:     return SSPBUF;
  9643   002E3C  50C9               	movf	201,w,c	;volatile
  9644   002E3E  0012               	return		;funcret
  9645   002E40                     __end_of_I2C_MasterGetRxData:
  9646                           	callstack 0
  9647                           
  9648 ;; *************** function _I2C_MasterSendNack *****************
  9649 ;; Defined at:
  9650 ;;		line 610 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  9651 ;; Parameters:    Size  Location     Type
  9652 ;;		None
  9653 ;; Auto vars:     Size  Location     Type
  9654 ;;		None
  9655 ;; Return value:  Size  Location     Type
  9656 ;;                  1    wreg      void 
  9657 ;; Registers used:
  9658 ;;		None
  9659 ;; Tracked objects:
  9660 ;;		On entry : 0/0
  9661 ;;		On exit  : 0/0
  9662 ;;		Unchanged: 0/0
  9663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9668 ;;Total ram usage:        0 bytes
  9669 ;; Hardware stack levels used: 1
  9670 ;; This function calls:
  9671 ;;		Nothing
  9672 ;; This function is called by:
  9673 ;;		_I2C_DO_RX_NACK_STOP
  9674 ;;		_I2C_DO_RX_NACK_RESTART
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           
  9678                           	psect	text100
  9679   002E12                     __ptext100:
  9680                           	callstack 0
  9681   002E12                     _I2C_MasterSendNack:
  9682                           	callstack 19
  9683   002E12                     
  9684                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
  9685   002E12  8AC5               	bsf	197,5,c	;volatile
  9686                           
  9687                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
  9688   002E14  88C5               	bsf	197,4,c	;volatile
  9689   002E16  0012               	return		;funcret
  9690   002E18                     __end_of_I2C_MasterSendNack:
  9691                           	callstack 0
  9692                           
  9693 ;; *************** function _I2C_MasterStartRx *****************
  9694 ;; Defined at:
  9695 ;;		line 584 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
  9696 ;; Parameters:    Size  Location     Type
  9697 ;;		None
  9698 ;; Auto vars:     Size  Location     Type
  9699 ;;		None
  9700 ;; Return value:  Size  Location     Type
  9701 ;;                  1    wreg      void 
  9702 ;; Registers used:
  9703 ;;		None
  9704 ;; Tracked objects:
  9705 ;;		On entry : 0/0
  9706 ;;		On exit  : 0/0
  9707 ;;		Unchanged: 0/0
  9708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9713 ;;Total ram usage:        0 bytes
  9714 ;; Hardware stack levels used: 1
  9715 ;; This function calls:
  9716 ;;		Nothing
  9717 ;; This function is called by:
  9718 ;;		_I2C_DO_RCEN
  9719 ;; This function uses a non-reentrant model
  9720 ;;
  9721                           
  9722                           	psect	text101
  9723   002E40                     __ptext101:
  9724                           	callstack 0
  9725   002E40                     _I2C_MasterStartRx:
  9726                           	callstack 19
  9727   002E40                     
  9728                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
  9729   002E40  86C5               	bsf	197,3,c	;volatile
  9730   002E42  0012               	return		;funcret
  9731   002E44                     __end_of_I2C_MasterStartRx:
  9732                           	callstack 0
  9733                           
  9734 ;; *************** function _rdBlkRegCompleteHandler *****************
  9735 ;; Defined at:
  9736 ;;		line 178 in file "mcc_generated_files/i2c_client/src/i2c_master_example.c"
  9737 ;; Parameters:    Size  Location     Type
  9738 ;;  ptr             2    9[COMRAM] PTR void 
  9739 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9740 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  9741 ;; Auto vars:     Size  Location     Type
  9742 ;;		None
  9743 ;; Return value:  Size  Location     Type
  9744 ;;                  1    wreg      enum E363
  9745 ;; Registers used:
  9746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9747 ;; Tracked objects:
  9748 ;;		On entry : 0/0
  9749 ;;		On exit  : 0/0
  9750 ;;		Unchanged: 0/0
  9751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9754 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9755 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9756 ;;Total ram usage:        3 bytes
  9757 ;; Hardware stack levels used: 1
  9758 ;; Hardware stack levels required when called: 2
  9759 ;; This function calls:
  9760 ;;		i2_I2C_SetBuffer
  9761 ;;		i2_I2C_SetDataCompleteCallback
  9762 ;; This function is called by:
  9763 ;;		_I2C_ReadDataBlock
  9764 ;;		_I2C_DO_TX
  9765 ;;		_I2C_DO_RX
  9766 ;;		_I2C_DO_TX_EMPTY
  9767 ;;		_I2C_DO_ADDRESS_NACK
  9768 ;;		_I2C_DO_RX_EMPTY
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           	psect	text102
  9773   0027C2                     __ptext102:
  9774                           	callstack 0
  9775   0027C2                     _rdBlkRegCompleteHandler:
  9776                           	callstack 17
  9777   0027C2                     
  9778                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 178: static i2c_operations_t r
      +                          dBlkRegCompleteHandler(void *ptr);mcc_generated_files/i2c_client/src/i2c_master_example.
      +                          c: 179: {;mcc_generated_files/i2c_client/src/i2c_master_example.c: 180:     I2C_SetBuffe
      +                          r(((i2c_buffer_t *)ptr)->data,((i2c_buffer_t*)ptr)->len);
  9779   0027C2  EE20 F002          	lfsr	2,2
  9780   0027C6  500A               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
  9781   0027C8  26D9               	addwf	fsr2l,f,c
  9782   0027CA  500B               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
  9783   0027CC  22DA               	addwfc	fsr2h,f,c
  9784   0027CE  50DF               	movf	indf2,w,c
  9785   0027D0  6E0C               	movwf	??_rdBlkRegCompleteHandler^0,c
  9786   0027D2  C00C  F001         	movff	??_rdBlkRegCompleteHandler,i2I2C_SetBuffer@buffer
  9787   0027D6  6A02               	clrf	(i2I2C_SetBuffer@buffer+1)^0,c
  9788   0027D8  C00A  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
  9789   0027DC  C00B  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
  9790   0027E0  CFDE F003          	movff	postinc2,i2I2C_SetBuffer@bufferSize
  9791   0027E4  CFDD F004          	movff	postdec2,i2I2C_SetBuffer@bufferSize+1
  9792   0027E8  ECA4  F015         	call	i2_I2C_SetBuffer	;wreg free
  9793   0027EC                     
  9794                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 181:     I2C_SetDataCompleteCa
      +                          llback(((void*)0),((void*)0));
  9795   0027EC  0E00               	movlw	0
  9796   0027EE  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
  9797   0027F0  0E00               	movlw	0
  9798   0027F2  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
  9799   0027F4  0E00               	movlw	0
  9800   0027F6  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
  9801   0027F8  0E00               	movlw	0
  9802   0027FA  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
  9803   0027FC  EC32  F016         	call	i2_I2C_SetDataCompleteCallback	;wreg free
  9804   002800                     
  9805                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 182:     return I2C_RESTART_RE
      +                          AD;
  9806   002800  0E02               	movlw	2
  9807   002802  0012               	return		;funcret
  9808   002804                     __end_of_rdBlkRegCompleteHandler:
  9809                           	callstack 0
  9810                           
  9811 ;; *************** function _wr1RegCompleteHandler *****************
  9812 ;; Defined at:
  9813 ;;		line 164 in file "mcc_generated_files/i2c_client/src/i2c_master_example.c"
  9814 ;; Parameters:    Size  Location     Type
  9815 ;;  ptr             2    9[COMRAM] PTR void 
  9816 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9817 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;		None
  9820 ;; Return value:  Size  Location     Type
  9821 ;;                  1    wreg      enum E363
  9822 ;; Registers used:
  9823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9824 ;; Tracked objects:
  9825 ;;		On entry : 0/0
  9826 ;;		On exit  : 0/0
  9827 ;;		Unchanged: 0/0
  9828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9832 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9833 ;;Total ram usage:        2 bytes
  9834 ;; Hardware stack levels used: 1
  9835 ;; Hardware stack levels required when called: 2
  9836 ;; This function calls:
  9837 ;;		i2_I2C_SetBuffer
  9838 ;;		i2_I2C_SetDataCompleteCallback
  9839 ;; This function is called by:
  9840 ;;		_I2C_Write1ByteRegister
  9841 ;;		_I2C_DO_TX
  9842 ;;		_I2C_DO_RX
  9843 ;;		_I2C_DO_TX_EMPTY
  9844 ;;		_I2C_DO_ADDRESS_NACK
  9845 ;;		_I2C_DO_RX_EMPTY
  9846 ;; This function uses a non-reentrant model
  9847 ;;
  9848                           
  9849                           	psect	text103
  9850   002A4C                     __ptext103:
  9851                           	callstack 0
  9852   002A4C                     _wr1RegCompleteHandler:
  9853                           	callstack 17
  9854   002A4C                     
  9855                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 164: static i2c_operations_t w
      +                          r1RegCompleteHandler(void *ptr);mcc_generated_files/i2c_client/src/i2c_master_example.c:
      +                           165: {;mcc_generated_files/i2c_client/src/i2c_master_example.c: 166:     I2C_SetBuffer(
      +                          ptr,1);
  9856   002A4C  C00A  F001         	movff	wr1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
  9857   002A50  C00B  F002         	movff	wr1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
  9858   002A54  0E00               	movlw	0
  9859   002A56  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
  9860   002A58  0E01               	movlw	1
  9861   002A5A  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
  9862   002A5C  ECA4  F015         	call	i2_I2C_SetBuffer	;wreg free
  9863   002A60                     
  9864                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 167:     I2C_SetDataCompleteCa
      +                          llback(((void*)0),((void*)0));
  9865   002A60  0E00               	movlw	0
  9866   002A62  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
  9867   002A64  0E00               	movlw	0
  9868   002A66  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
  9869   002A68  0E00               	movlw	0
  9870   002A6A  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
  9871   002A6C  0E00               	movlw	0
  9872   002A6E  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
  9873   002A70  EC32  F016         	call	i2_I2C_SetDataCompleteCallback	;wreg free
  9874   002A74                     
  9875                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 168:     return I2C_CONTINUE;
  9876   002A74  0E04               	movlw	4
  9877   002A76  0012               	return		;funcret
  9878   002A78                     __end_of_wr1RegCompleteHandler:
  9879                           	callstack 0
  9880                           
  9881 ;; *************** function _rd2RegCompleteHandler *****************
  9882 ;; Defined at:
  9883 ;;		line 157 in file "mcc_generated_files/i2c_client/src/i2c_master_example.c"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;  ptr             2    9[COMRAM] PTR void 
  9886 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9887 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  9888 ;; Auto vars:     Size  Location     Type
  9889 ;;		None
  9890 ;; Return value:  Size  Location     Type
  9891 ;;                  1    wreg      enum E363
  9892 ;; Registers used:
  9893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9894 ;; Tracked objects:
  9895 ;;		On entry : 0/0
  9896 ;;		On exit  : 0/0
  9897 ;;		Unchanged: 0/0
  9898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9902 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9903 ;;Total ram usage:        2 bytes
  9904 ;; Hardware stack levels used: 1
  9905 ;; Hardware stack levels required when called: 2
  9906 ;; This function calls:
  9907 ;;		i2_I2C_SetBuffer
  9908 ;;		i2_I2C_SetDataCompleteCallback
  9909 ;; This function is called by:
  9910 ;;		_I2C_Read2ByteRegister
  9911 ;;		_I2C_DO_TX
  9912 ;;		_I2C_DO_RX
  9913 ;;		_I2C_DO_TX_EMPTY
  9914 ;;		_I2C_DO_ADDRESS_NACK
  9915 ;;		_I2C_DO_RX_EMPTY
  9916 ;; This function uses a non-reentrant model
  9917 ;;
  9918                           
  9919                           	psect	text104
  9920   002A78                     __ptext104:
  9921                           	callstack 0
  9922   002A78                     _rd2RegCompleteHandler:
  9923                           	callstack 17
  9924   002A78                     
  9925                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 157: static i2c_operations_t r
      +                          d2RegCompleteHandler(void *ptr);mcc_generated_files/i2c_client/src/i2c_master_example.c:
      +                           158: {;mcc_generated_files/i2c_client/src/i2c_master_example.c: 159:     I2C_SetBuffer(
      +                          ptr,2);
  9926   002A78  C00A  F001         	movff	rd2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
  9927   002A7C  C00B  F002         	movff	rd2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
  9928   002A80  0E00               	movlw	0
  9929   002A82  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
  9930   002A84  0E02               	movlw	2
  9931   002A86  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
  9932   002A88  ECA4  F015         	call	i2_I2C_SetBuffer	;wreg free
  9933   002A8C                     
  9934                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 160:     I2C_SetDataCompleteCa
      +                          llback(((void*)0),((void*)0));
  9935   002A8C  0E00               	movlw	0
  9936   002A8E  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
  9937   002A90  0E00               	movlw	0
  9938   002A92  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
  9939   002A94  0E00               	movlw	0
  9940   002A96  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
  9941   002A98  0E00               	movlw	0
  9942   002A9A  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
  9943   002A9C  EC32  F016         	call	i2_I2C_SetDataCompleteCallback	;wreg free
  9944   002AA0                     
  9945                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 161:     return I2C_RESTART_RE
      +                          AD;
  9946   002AA0  0E02               	movlw	2
  9947   002AA2  0012               	return		;funcret
  9948   002AA4                     __end_of_rd2RegCompleteHandler:
  9949                           	callstack 0
  9950                           
  9951 ;; *************** function _rd1RegCompleteHandler *****************
  9952 ;; Defined at:
  9953 ;;		line 150 in file "mcc_generated_files/i2c_client/src/i2c_master_example.c"
  9954 ;; Parameters:    Size  Location     Type
  9955 ;;  ptr             2    9[COMRAM] PTR void 
  9956 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9957 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;		None
  9960 ;; Return value:  Size  Location     Type
  9961 ;;                  1    wreg      enum E363
  9962 ;; Registers used:
  9963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9964 ;; Tracked objects:
  9965 ;;		On entry : 0/0
  9966 ;;		On exit  : 0/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9973 ;;Total ram usage:        2 bytes
  9974 ;; Hardware stack levels used: 1
  9975 ;; Hardware stack levels required when called: 2
  9976 ;; This function calls:
  9977 ;;		i2_I2C_SetBuffer
  9978 ;;		i2_I2C_SetDataCompleteCallback
  9979 ;; This function is called by:
  9980 ;;		_I2C_Read1ByteRegister
  9981 ;;		_I2C_DO_TX
  9982 ;;		_I2C_DO_RX
  9983 ;;		_I2C_DO_TX_EMPTY
  9984 ;;		_I2C_DO_ADDRESS_NACK
  9985 ;;		_I2C_DO_RX_EMPTY
  9986 ;; This function uses a non-reentrant model
  9987 ;;
  9988                           
  9989                           	psect	text105
  9990   002AA4                     __ptext105:
  9991                           	callstack 0
  9992   002AA4                     _rd1RegCompleteHandler:
  9993                           	callstack 17
  9994   002AA4                     
  9995                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 150: static i2c_operations_t r
      +                          d1RegCompleteHandler(void *ptr);mcc_generated_files/i2c_client/src/i2c_master_example.c:
      +                           151: {;mcc_generated_files/i2c_client/src/i2c_master_example.c: 152:     I2C_SetBuffer(
      +                          ptr,1);
  9996   002AA4  C00A  F001         	movff	rd1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
  9997   002AA8  C00B  F002         	movff	rd1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
  9998   002AAC  0E00               	movlw	0
  9999   002AAE  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 10000   002AB0  0E01               	movlw	1
 10001   002AB2  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 10002   002AB4  ECA4  F015         	call	i2_I2C_SetBuffer	;wreg free
 10003   002AB8                     
 10004                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 153:     I2C_SetDataCompleteCa
      +                          llback(((void*)0),((void*)0));
 10005   002AB8  0E00               	movlw	0
 10006   002ABA  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 10007   002ABC  0E00               	movlw	0
 10008   002ABE  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 10009   002AC0  0E00               	movlw	0
 10010   002AC2  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 10011   002AC4  0E00               	movlw	0
 10012   002AC6  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 10013   002AC8  EC32  F016         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 10014   002ACC                     
 10015                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 154:     return I2C_RESTART_RE
      +                          AD;
 10016   002ACC  0E02               	movlw	2
 10017   002ACE  0012               	return		;funcret
 10018   002AD0                     __end_of_rd1RegCompleteHandler:
 10019                           	callstack 0
 10020                           
 10021 ;; *************** function _I2C_CallbackReturnReset *****************
 10022 ;; Defined at:
 10023 ;;		line 526 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;  funPtr          2    9[COMRAM] PTR void 
 10026 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10027 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 10028 ;; Auto vars:     Size  Location     Type
 10029 ;;		None
 10030 ;; Return value:  Size  Location     Type
 10031 ;;                  1    wreg      enum E363
 10032 ;; Registers used:
 10033 ;;		wreg
 10034 ;; Tracked objects:
 10035 ;;		On entry : 0/0
 10036 ;;		On exit  : 0/0
 10037 ;;		Unchanged: 0/0
 10038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10039 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10042 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10043 ;;Total ram usage:        2 bytes
 10044 ;; Hardware stack levels used: 1
 10045 ;; This function calls:
 10046 ;;		Nothing
 10047 ;; This function is called by:
 10048 ;;		_I2C_Open
 10049 ;;		_I2C_DO_TX
 10050 ;;		_I2C_DO_RX
 10051 ;;		_I2C_DO_TX_EMPTY
 10052 ;;		_I2C_DO_ADDRESS_NACK
 10053 ;;		_I2C_DO_RX_EMPTY
 10054 ;; This function uses a non-reentrant model
 10055 ;;
 10056                           
 10057                           	psect	text106
 10058   002E44                     __ptext106:
 10059                           	callstack 0
 10060   002E44                     _I2C_CallbackReturnReset:
 10061                           	callstack 19
 10062   002E44                     
 10063                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 526: i2c_operations_t I2C_CallbackRetu
      +                          rnReset(void *funPtr);mcc_generated_files/i2c_client/src/i2c_master.c: 527: {;mcc_genera
      +                          ted_files/i2c_client/src/i2c_master.c: 528:     return I2C_RESET_LINK;
 10064   002E44  0E05               	movlw	5
 10065   002E46  0012               	return		;funcret
 10066   002E48                     __end_of_I2C_CallbackReturnReset:
 10067                           	callstack 0
 10068                           
 10069 ;; *************** function _I2C_CallbackReturnStop *****************
 10070 ;; Defined at:
 10071 ;;		line 521 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;  funPtr          2    9[COMRAM] PTR void 
 10074 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10075 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 10076 ;; Auto vars:     Size  Location     Type
 10077 ;;		None
 10078 ;; Return value:  Size  Location     Type
 10079 ;;                  1    wreg      enum E363
 10080 ;; Registers used:
 10081 ;;		wreg
 10082 ;; Tracked objects:
 10083 ;;		On entry : 0/0
 10084 ;;		On exit  : 0/0
 10085 ;;		Unchanged: 0/0
 10086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10090 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10091 ;;Total ram usage:        2 bytes
 10092 ;; Hardware stack levels used: 1
 10093 ;; This function calls:
 10094 ;;		Nothing
 10095 ;; This function is called by:
 10096 ;;		_I2C_Open
 10097 ;;		_I2C_SetCallback
 10098 ;;		i2_I2C_SetCallback
 10099 ;;		_I2C_DO_TX
 10100 ;;		_I2C_DO_RX
 10101 ;;		_I2C_DO_TX_EMPTY
 10102 ;;		_I2C_DO_ADDRESS_NACK
 10103 ;;		_I2C_DO_RX_EMPTY
 10104 ;; This function uses a non-reentrant model
 10105 ;;
 10106                           
 10107                           	psect	text107
 10108   002E48                     __ptext107:
 10109                           	callstack 0
 10110   002E48                     _I2C_CallbackReturnStop:
 10111                           	callstack 19
 10112   002E48                     
 10113                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 521: i2c_operations_t I2C_CallbackRetu
      +                          rnStop(void *funPtr);mcc_generated_files/i2c_client/src/i2c_master.c: 522: {;mcc_generat
      +                          ed_files/i2c_client/src/i2c_master.c: 523:     return I2C_STOP;
 10114   002E48  0E01               	movlw	1
 10115   002E4A  0012               	return		;funcret
 10116   002E4C                     __end_of_I2C_CallbackReturnStop:
 10117                           	callstack 0
 10118                           
 10119 ;; *************** function _wr2RegCompleteHandler *****************
 10120 ;; Defined at:
 10121 ;;		line 171 in file "mcc_generated_files/i2c_client/src/i2c_master_example.c"
 10122 ;; Parameters:    Size  Location     Type
 10123 ;;  ptr             2    9[COMRAM] PTR void 
 10124 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10125 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 10126 ;; Auto vars:     Size  Location     Type
 10127 ;;		None
 10128 ;; Return value:  Size  Location     Type
 10129 ;;                  1    wreg      enum E363
 10130 ;; Registers used:
 10131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10132 ;; Tracked objects:
 10133 ;;		On entry : 0/0
 10134 ;;		On exit  : 0/0
 10135 ;;		Unchanged: 0/0
 10136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10141 ;;Total ram usage:        2 bytes
 10142 ;; Hardware stack levels used: 1
 10143 ;; Hardware stack levels required when called: 2
 10144 ;; This function calls:
 10145 ;;		i2_I2C_SetBuffer
 10146 ;;		i2_I2C_SetDataCompleteCallback
 10147 ;; This function is called by:
 10148 ;;		_I2C_Write2ByteRegister
 10149 ;;		_I2C_DO_TX
 10150 ;;		_I2C_DO_RX
 10151 ;;		_I2C_DO_TX_EMPTY
 10152 ;;		_I2C_DO_ADDRESS_NACK
 10153 ;;		_I2C_DO_RX_EMPTY
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           	psect	text108
 10158   002AD0                     __ptext108:
 10159                           	callstack 0
 10160   002AD0                     _wr2RegCompleteHandler:
 10161                           	callstack 17
 10162   002AD0                     
 10163                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 171: static i2c_operations_t w
      +                          r2RegCompleteHandler(void *ptr);mcc_generated_files/i2c_client/src/i2c_master_example.c:
      +                           172: {;mcc_generated_files/i2c_client/src/i2c_master_example.c: 173:     I2C_SetBuffer(
      +                          ptr,2);
 10164   002AD0  C00A  F001         	movff	wr2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 10165   002AD4  C00B  F002         	movff	wr2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 10166   002AD8  0E00               	movlw	0
 10167   002ADA  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 10168   002ADC  0E02               	movlw	2
 10169   002ADE  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 10170   002AE0  ECA4  F015         	call	i2_I2C_SetBuffer	;wreg free
 10171   002AE4                     
 10172                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 174:     I2C_SetDataCompleteCa
      +                          llback(((void*)0),((void*)0));
 10173   002AE4  0E00               	movlw	0
 10174   002AE6  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 10175   002AE8  0E00               	movlw	0
 10176   002AEA  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 10177   002AEC  0E00               	movlw	0
 10178   002AEE  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 10179   002AF0  0E00               	movlw	0
 10180   002AF2  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 10181   002AF4  EC32  F016         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 10182   002AF8                     
 10183                           ;mcc_generated_files/i2c_client/src/i2c_master_example.c: 175:     return I2C_CONTINUE;
 10184   002AF8  0E04               	movlw	4
 10185   002AFA  0012               	return		;funcret
 10186   002AFC                     __end_of_wr2RegCompleteHandler:
 10187                           	callstack 0
 10188                           
 10189 ;; *************** function i2_I2C_SetDataCompleteCallback *****************
 10190 ;; Defined at:
 10191 ;;		line 274 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
 10192 ;; Parameters:    Size  Location     Type
 10193 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 10194 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
 10195 ;;		 -> rd1RegCompleteHandler(1), NULL(1), 
 10196 ;;  ptr             2    7[COMRAM] PTR void 
 10197 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10198 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 10199 ;; Auto vars:     Size  Location     Type
 10200 ;;		None
 10201 ;; Return value:  Size  Location     Type
 10202 ;;                  1    wreg      void 
 10203 ;; Registers used:
 10204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10205 ;; Tracked objects:
 10206 ;;		On entry : 0/0
 10207 ;;		On exit  : 0/0
 10208 ;;		Unchanged: 0/0
 10209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10210 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10213 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10214 ;;Total ram usage:        4 bytes
 10215 ;; Hardware stack levels used: 1
 10216 ;; Hardware stack levels required when called: 1
 10217 ;; This function calls:
 10218 ;;		i2_I2C_SetCallback
 10219 ;; This function is called by:
 10220 ;;		_rd1RegCompleteHandler
 10221 ;;		_rd2RegCompleteHandler
 10222 ;;		_wr1RegCompleteHandler
 10223 ;;		_wr2RegCompleteHandler
 10224 ;;		_rdBlkRegCompleteHandler
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           	psect	text109
 10229   002C64                     __ptext109:
 10230                           	callstack 0
 10231   002C64                     i2_I2C_SetDataCompleteCallback:
 10232                           	callstack 17
 10233   002C64                     
 10234                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 274: void I2C_SetDataCompleteCallback(
      +                          i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_client/src/i2c_master.c: 275: {;mc
      +                          c_generated_files/i2c_client/src/i2c_master.c: 276:     I2C_SetCallback(I2C_DATA_COMPLET
      +                          E, cb, ptr);
 10235   002C64  C006  F001         	movff	i2I2C_SetDataCompleteCallback@cb,i2I2C_SetCallback@cb
 10236   002C68  C007  F002         	movff	i2I2C_SetDataCompleteCallback@cb+1,i2I2C_SetCallback@cb+1
 10237   002C6C  C008  F003         	movff	i2I2C_SetDataCompleteCallback@ptr,i2I2C_SetCallback@ptr
 10238   002C70  C009  F004         	movff	i2I2C_SetDataCompleteCallback@ptr+1,i2I2C_SetCallback@ptr+1
 10239   002C74  0E00               	movlw	0
 10240   002C76  EC87  F012         	call	i2_I2C_SetCallback
 10241   002C7A  0012               	return		;funcret
 10242   002C7C                     __end_ofi2_I2C_SetDataCompleteCallback:
 10243                           	callstack 0
 10244                           
 10245 ;; *************** function i2_I2C_SetCallback *****************
 10246 ;; Defined at:
 10247 ;;		line 304 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
 10248 ;; Parameters:    Size  Location     Type
 10249 ;;  idx             1    wreg     enum E3152
 10250 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 10251 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
 10252 ;;		 -> rd1RegCompleteHandler(1), NULL(1), 
 10253 ;;  ptr             2    2[COMRAM] PTR void 
 10254 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10255 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 10256 ;; Auto vars:     Size  Location     Type
 10257 ;;  idx             1    4[COMRAM] enum E3152
 10258 ;; Return value:  Size  Location     Type
 10259 ;;                  1    wreg      void 
 10260 ;; Registers used:
 10261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10262 ;; Tracked objects:
 10263 ;;		On entry : 0/0
 10264 ;;		On exit  : 0/0
 10265 ;;		Unchanged: 0/0
 10266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10267 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10270 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10271 ;;Total ram usage:        5 bytes
 10272 ;; Hardware stack levels used: 1
 10273 ;; This function calls:
 10274 ;;		Nothing
 10275 ;; This function is called by:
 10276 ;;		i2_I2C_SetDataCompleteCallback
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           	psect	text110
 10281   00250E                     __ptext110:
 10282                           	callstack 0
 10283   00250E                     i2_I2C_SetCallback:
 10284                           	callstack 17
 10285                           
 10286                           ;incstack = 0
 10287                           ;i2I2C_SetCallback@idx stored from wreg
 10288   00250E  6E05               	movwf	i2I2C_SetCallback@idx^0,c
 10289   002510                     
 10290                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 304: static void I2C_SetCallback(i2c_c
      +                          allbackIndex_t idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_client/src/i2c
      +                          _master.c: 305: {;mcc_generated_files/i2c_client/src/i2c_master.c: 306:     if(cb)
 10291   002510  5001               	movf	i2I2C_SetCallback@cb^0,w,c
 10292   002512  1002               	iorwf	(i2I2C_SetCallback@cb+1)^0,w,c
 10293   002514  B4D8               	btfsc	status,2,c
 10294   002516  EF8F  F012         	goto	i2u200_41
 10295   00251A  EF91  F012         	goto	i2u200_40
 10296   00251E                     i2u200_41:
 10297   00251E  EFA7  F012         	goto	i2l4126
 10298   002522                     i2u200_40:
 10299   002522                     
 10300                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 307:     {;mcc_generated_files/i2c_cli
      +                          ent/src/i2c_master.c: 308:         I2C_Status.callbackTable[idx] = cb;
 10301   002522  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 10302   002524  0D02               	mullw	2
 10303   002526  50F3               	movf	243,w,c
 10304   002528  0F60               	addlw	low _I2C_Status
 10305   00252A  6ED9               	movwf	fsr2l,c
 10306   00252C  6ADA               	clrf	fsr2h,c
 10307   00252E  C001  FFDE         	movff	i2I2C_SetCallback@cb,postinc2
 10308   002532  C002  FFDD         	movff	i2I2C_SetCallback@cb+1,postdec2
 10309                           
 10310                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 309:         I2C_Status.callbackPayloa
      +                          d[idx] = ptr;
 10311   002536  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 10312   002538  0D02               	mullw	2
 10313   00253A  50F3               	movf	243,w,c
 10314   00253C  0F6C               	addlw	low (_I2C_Status+12)
 10315   00253E  6ED9               	movwf	fsr2l,c
 10316   002540  6ADA               	clrf	fsr2h,c
 10317   002542  C003  FFDE         	movff	i2I2C_SetCallback@ptr,postinc2
 10318   002546  C004  FFDD         	movff	i2I2C_SetCallback@ptr+1,postdec2
 10319                           
 10320                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 310:     }
 10321   00254A  EFB9  F012         	goto	i2l210
 10322   00254E                     i2l4126:
 10323                           
 10324                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 312:     {;mcc_generated_files/i2c_cli
      +                          ent/src/i2c_master.c: 313:         I2C_Status.callbackTable[idx] = I2C_CallbackReturnSto
      +                          p;
 10325   00254E  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 10326   002550  0D02               	mullw	2
 10327   002552  50F3               	movf	243,w,c
 10328   002554  0F60               	addlw	low _I2C_Status
 10329   002556  6ED9               	movwf	fsr2l,c
 10330   002558  6ADA               	clrf	fsr2h,c
 10331   00255A  0E48               	movlw	low _I2C_CallbackReturnStop
 10332   00255C  6EDE               	movwf	postinc2,c
 10333   00255E  0E2E               	movlw	high _I2C_CallbackReturnStop
 10334   002560  6EDD               	movwf	postdec2,c
 10335                           
 10336                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 314:         I2C_Status.callbackPayloa
      +                          d[idx] = ((void*)0);
 10337   002562  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 10338   002564  0D02               	mullw	2
 10339   002566  50F3               	movf	243,w,c
 10340   002568  0F6C               	addlw	low (_I2C_Status+12)
 10341   00256A  6ED9               	movwf	fsr2l,c
 10342   00256C  6ADA               	clrf	fsr2h,c
 10343   00256E  6ADE               	clrf	postinc2,c
 10344   002570  6ADD               	clrf	postdec2,c
 10345   002572                     i2l210:
 10346   002572  0012               	return		;funcret
 10347   002574                     __end_ofi2_I2C_SetCallback:
 10348                           	callstack 0
 10349                           
 10350 ;; *************** function i2_I2C_SetBuffer *****************
 10351 ;; Defined at:
 10352 ;;		line 264 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
 10353 ;; Parameters:    Size  Location     Type
 10354 ;;  buffer          2    0[COMRAM] PTR void 
 10355 ;;		 -> I2C_Read1ByteRegister@returnValue$data(3), I2C_Read2ByteRegister@returnValue$data(3), I2C_Write1ByteRegister@dat
      +a$data(3), I2C_Write2ByteRegister@data$data(3), 
 10356 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), bufferBlock$data(3), I2C_Write2ByteRegister@reg(1), 
 10357 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1Byte@reg(1), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@dat
      +a(1), 
 10358 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteR
      +egister@returnValue(1), 
 10359 ;;		 -> NULL(0), 
 10360 ;;  bufferSize      2    2[COMRAM] unsigned int 
 10361 ;; Auto vars:     Size  Location     Type
 10362 ;;		None
 10363 ;; Return value:  Size  Location     Type
 10364 ;;                  1    wreg      void 
 10365 ;; Registers used:
 10366 ;;		wreg, status,2, status,0
 10367 ;; Tracked objects:
 10368 ;;		On entry : 0/0
 10369 ;;		On exit  : 0/0
 10370 ;;		Unchanged: 0/0
 10371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10372 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10375 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10376 ;;Total ram usage:        4 bytes
 10377 ;; Hardware stack levels used: 1
 10378 ;; This function calls:
 10379 ;;		Nothing
 10380 ;; This function is called by:
 10381 ;;		_rd1RegCompleteHandler
 10382 ;;		_rd2RegCompleteHandler
 10383 ;;		_wr1RegCompleteHandler
 10384 ;;		_wr2RegCompleteHandler
 10385 ;;		_rdBlkRegCompleteHandler
 10386 ;; This function uses a non-reentrant model
 10387 ;;
 10388                           
 10389                           	psect	text111
 10390   002B48                     __ptext111:
 10391                           	callstack 0
 10392   002B48                     i2_I2C_SetBuffer:
 10393                           	callstack 18
 10394   002B48                     
 10395                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, 
      +                          size_t bufferSize);mcc_generated_files/i2c_client/src/i2c_master.c: 265: {;mcc_generated
      +                          _files/i2c_client/src/i2c_master.c: 266:     if(I2C_Status.bufferFree)
 10396   002B48  0100               	movlb	0	; () banked
 10397   002B4A  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
 10398   002B4C  EFAA  F015         	goto	i2u222_41
 10399   002B50  EFAC  F015         	goto	i2u222_40
 10400   002B54                     i2u222_41:
 10401   002B54  EFB5  F015         	goto	i2l187
 10402   002B58                     i2u222_40:
 10403   002B58                     
 10404                           ; BSR set to: 0
 10405                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 267:     {;mcc_generated_files/i2c_cli
      +                          ent/src/i2c_master.c: 268:         I2C_Status.data_ptr = buffer;
 10406   002B58  C001  F07D         	movff	i2I2C_SetBuffer@buffer,_I2C_Status+29
 10407   002B5C  C002  F07E         	movff	i2I2C_SetBuffer@buffer+1,_I2C_Status+30
 10408   002B60                     
 10409                           ; BSR set to: 0
 10410                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 269:         I2C_Status.data_length = 
      +                          bufferSize;
 10411   002B60  C003  F07F         	movff	i2I2C_SetBuffer@bufferSize,_I2C_Status+31
 10412   002B64  C004  F080         	movff	i2I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 10413   002B68                     
 10414                           ; BSR set to: 0
 10415                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 270:         I2C_Status.bufferFree = 0
      +                          ;
 10416   002B68  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
 10417   002B6A                     i2l187:
 10418                           
 10419                           ; BSR set to: 0
 10420   002B6A  0012               	return		;funcret
 10421   002B6C                     __end_ofi2_I2C_SetBuffer:
 10422                           	callstack 0
 10423                           
 10424 ;; *************** function _I2C_MasterStop *****************
 10425 ;; Defined at:
 10426 ;;		line 594 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;		None
 10429 ;; Auto vars:     Size  Location     Type
 10430 ;;		None
 10431 ;; Return value:  Size  Location     Type
 10432 ;;                  1    wreg      void 
 10433 ;; Registers used:
 10434 ;;		None
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/0
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10444 ;;Total ram usage:        0 bytes
 10445 ;; Hardware stack levels used: 1
 10446 ;; This function calls:
 10447 ;;		Nothing
 10448 ;; This function is called by:
 10449 ;;		_I2C_DO_SEND_STOP
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           	psect	text112
 10454   002E4C                     __ptext112:
 10455                           	callstack 0
 10456   002E4C                     _I2C_MasterStop:
 10457                           	callstack 18
 10458   002E4C                     
 10459                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
 10460   002E4C  84C5               	bsf	197,2,c	;volatile
 10461   002E4E  0012               	return		;funcret
 10462   002E50                     __end_of_I2C_MasterStop:
 10463                           	callstack 0
 10464                           
 10465 ;; *************** function _I2C_MasterEnableRestart *****************
 10466 ;; Defined at:
 10467 ;;		line 574 in file "mcc_generated_files/i2c_client/src/i2c_master.c"
 10468 ;; Parameters:    Size  Location     Type
 10469 ;;		None
 10470 ;; Auto vars:     Size  Location     Type
 10471 ;;		None
 10472 ;; Return value:  Size  Location     Type
 10473 ;;                  1    wreg      void 
 10474 ;; Registers used:
 10475 ;;		None
 10476 ;; Tracked objects:
 10477 ;;		On entry : 0/0
 10478 ;;		On exit  : 0/0
 10479 ;;		Unchanged: 0/0
 10480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10485 ;;Total ram usage:        0 bytes
 10486 ;; Hardware stack levels used: 1
 10487 ;; This function calls:
 10488 ;;		Nothing
 10489 ;; This function is called by:
 10490 ;;		_I2C_DO_SEND_RESTART_READ
 10491 ;;		_I2C_DO_SEND_RESTART_WRITE
 10492 ;;		_I2C_DO_SEND_RESTART
 10493 ;;		_I2C_DO_RX_EMPTY
 10494 ;; This function uses a non-reentrant model
 10495 ;;
 10496                           
 10497                           	psect	text113
 10498   002E50                     __ptext113:
 10499                           	callstack 0
 10500   002E50                     _I2C_MasterEnableRestart:
 10501                           	callstack 18
 10502   002E50                     
 10503                           ;mcc_generated_files/i2c_client/src/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
 10504   002E50  82C5               	bsf	197,1,c	;volatile
 10505   002E52  0012               	return		;funcret
 10506   002E54                     __end_of_I2C_MasterEnableRestart:
 10507                           	callstack 0
 10508                           
 10509                           	psect	text114
 10510   000000                     __ptext114:
 10511                           	callstack 0
 10512   000000                     
 10513                           	psect	rparam
 10514   000000                     
 10515                           	psect	temp
 10516   00005E                     btemp:
 10517                           	callstack 0
 10518   00005E                     	ds	1
 10519   000000                     int$flags	set	btemp
 10520   000000                     wtemp8	set	btemp+1
 10521   000000                     ttemp5	set	btemp+1
 10522   000000                     ttemp6	set	btemp+4
 10523   000000                     ttemp7	set	btemp+8
 10524                           
 10525                           	psect	config
 10526                           
 10527                           ; Padding undefined space
 10528   300000                     	org	3145728
 10529   300000  FF                 	db	255
 10530                           
 10531                           ;Config register CONFIG1H @ 0x300001
 10532                           ;	Oscillator Selection bits
 10533                           ;	FOSC = HS, HS oscillator
 10534                           ;	Fail-Safe Clock Monitor Enable bit
 10535                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10536                           ;	Internal/External Oscillator Switchover bit
 10537                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10538   300001                     	org	3145729
 10539   300001  02                 	db	2
 10540                           
 10541                           ;Config register CONFIG2L @ 0x300002
 10542                           ;	Power-up Timer Enable bit
 10543                           ;	PWRTEN = OFF, PWRT disabled
 10544                           ;	Brown-out Reset Enable bits
 10545                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 10546                           ;	Brown Out Reset Voltage bits
 10547                           ;	BORV = 18, VBOR set to 1.8 V nominal
 10548   300002                     	org	3145730
 10549   300002  1F                 	db	31
 10550                           
 10551                           ;Config register CONFIG2H @ 0x300003
 10552                           ;	Watchdog Timer Enable bit
 10553                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 10554                           ;	Watchdog Timer Postscale Select bits
 10555                           ;	WDTPS = 32768, 1:32768
 10556   300003                     	org	3145731
 10557   300003  1E                 	db	30
 10558                           
 10559                           ; Padding undefined space
 10560   300004                     	org	3145732
 10561   300004  FF                 	db	255
 10562                           
 10563                           ;Config register CONFIG3H @ 0x300005
 10564                           ;	CCP2 MUX bit
 10565                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 10566                           ;	PORTB A/D Enable bit
 10567                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 10568                           ;	Low-Power Timer1 Oscillator Enable bit
 10569                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10570                           ;	HFINTOSC Fast Start-up
 10571                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 10572                           ;	MCLR Pin Enable bit
 10573                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10574   300005                     	org	3145733
 10575   300005  8B                 	db	139
 10576                           
 10577                           ;Config register CONFIG4L @ 0x300006
 10578                           ;	Stack Full/Underflow Reset Enable bit
 10579                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10580                           ;	Single-Supply ICSP Enable bit
 10581                           ;	LVP = ON, Single-Supply ICSP enabled
 10582                           ;	Extended Instruction Set Enable bit
 10583                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10584                           ;	Background Debugger Enable bit
 10585                           ;	DEBUG = 0x1, unprogrammed default
 10586   300006                     	org	3145734
 10587   300006  85                 	db	133
 10588                           
 10589                           ; Padding undefined space
 10590   300007                     	org	3145735
 10591   300007  FF                 	db	255
 10592                           
 10593                           ;Config register CONFIG5L @ 0x300008
 10594                           ;	Code Protection Block 0
 10595                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 10596                           ;	Code Protection Block 1
 10597                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 10598                           ;	Code Protection Block 2
 10599                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 10600                           ;	Code Protection Block 3
 10601                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 10602   300008                     	org	3145736
 10603   300008  0F                 	db	15
 10604                           
 10605                           ;Config register CONFIG5H @ 0x300009
 10606                           ;	Boot Block Code Protection bit
 10607                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10608                           ;	Data EEPROM Code Protection bit
 10609                           ;	CPD = OFF, Data EEPROM not code-protected
 10610   300009                     	org	3145737
 10611   300009  C0                 	db	192
 10612                           
 10613                           ;Config register CONFIG6L @ 0x30000A
 10614                           ;	Write Protection Block 0
 10615                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 10616                           ;	Write Protection Block 1
 10617                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 10618                           ;	Write Protection Block 2
 10619                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 10620                           ;	Write Protection Block 3
 10621                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 10622   30000A                     	org	3145738
 10623   30000A  0F                 	db	15
 10624                           
 10625                           ;Config register CONFIG6H @ 0x30000B
 10626                           ;	Configuration Register Write Protection bit
 10627                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10628                           ;	Boot Block Write Protection bit
 10629                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 10630                           ;	Data EEPROM Write Protection bit
 10631                           ;	WRTD = OFF, Data EEPROM not write-protected
 10632   30000B                     	org	3145739
 10633   30000B  E0                 	db	224
 10634                           
 10635                           ;Config register CONFIG7L @ 0x30000C
 10636                           ;	Table Read Protection Block 0
 10637                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 10638                           ;	Table Read Protection Block 1
 10639                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10640                           ;	Table Read Protection Block 2
 10641                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 10642                           ;	Table Read Protection Block 3
 10643                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 10644   30000C                     	org	3145740
 10645   30000C  0F                 	db	15
 10646                           
 10647                           ;Config register CONFIG7H @ 0x30000D
 10648                           ;	Boot Block Table Read Protection bit
 10649                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10650   30000D                     	org	3145741
 10651   30000D  40                 	db	64
 10652                           tosu	equ	0xFFF
 10653                           tosh	equ	0xFFE
 10654                           tosl	equ	0xFFD
 10655                           stkptr	equ	0xFFC
 10656                           pclatu	equ	0xFFB
 10657                           pclath	equ	0xFFA
 10658                           pcl	equ	0xFF9
 10659                           tblptru	equ	0xFF8
 10660                           tblptrh	equ	0xFF7
 10661                           tblptrl	equ	0xFF6
 10662                           tablat	equ	0xFF5
 10663                           prodh	equ	0xFF4
 10664                           prodl	equ	0xFF3
 10665                           indf0	equ	0xFEF
 10666                           postinc0	equ	0xFEE
 10667                           postdec0	equ	0xFED
 10668                           preinc0	equ	0xFEC
 10669                           plusw0	equ	0xFEB
 10670                           fsr0h	equ	0xFEA
 10671                           fsr0l	equ	0xFE9
 10672                           wreg	equ	0xFE8
 10673                           indf1	equ	0xFE7
 10674                           postinc1	equ	0xFE6
 10675                           postdec1	equ	0xFE5
 10676                           preinc1	equ	0xFE4
 10677                           plusw1	equ	0xFE3
 10678                           fsr1h	equ	0xFE2
 10679                           fsr1l	equ	0xFE1
 10680                           bsr	equ	0xFE0
 10681                           indf2	equ	0xFDF
 10682                           postinc2	equ	0xFDE
 10683                           postdec2	equ	0xFDD
 10684                           preinc2	equ	0xFDC
 10685                           plusw2	equ	0xFDB
 10686                           fsr2h	equ	0xFDA
 10687                           fsr2l	equ	0xFD9
 10688                           status	equ	0xFD8

Data Sizes:
    Strings     123
    Constant    80
    Data        37
    BSS         108
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     68      93
    BANK0           160      0     120
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    convert_byte_to_str@str	PTR unsigned char  size(1) Largest target is 2
		 -> dummy_str(COMRAM[2]), hex_str(BANK0[2]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    EUSART_Send_String@str	PTR unsigned char  size(2) Largest target is 19
		 -> dummy_str(COMRAM[2]), hex_str(BANK0[2]), STR_4(CODE[19]), STR_5(CODE[8]), 
		 -> STR_6(CODE[8]), STR_7(CODE[15]), STR_8(CODE[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> my_lcd_4bit(COMRAM[6]), my_lcd_4bit$lcd_data(COMRAM[4]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> my_lcd_4bit(COMRAM[6]), my_lcd_4bit$lcd_data(COMRAM[4]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> my_lcd_4bit(COMRAM[6]), my_lcd_4bit$lcd_data(COMRAM[4]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_RX$3729	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_RX$3729$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_RX$3734	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_RX_EMPTY$3741$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX$3723	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_TX$3723$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX$3728	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$3735	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_TX_EMPTY$3735$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$3740	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    i2c_fsmStateTable	const PTR FTN()enum E3134[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_IDLE(), I2C_DO_RCEN(), I2C_DO_RESET(), 
		 -> I2C_DO_RX(), I2C_DO_RX_ACK(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_SEND_ADR_READ(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_READ(), 
		 -> I2C_DO_SEND_RESTART_WRITE(), I2C_DO_SEND_STOP(), I2C_DO_TX(), I2C_DO_TX_EMPTY(), 

    I2C_MasterFsm$3722	const PTR FTN()enum E3134 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_IDLE(), I2C_DO_RCEN(), I2C_DO_RESET(), 
		 -> I2C_DO_RX(), I2C_DO_RX_ACK(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_SEND_ADR_READ(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_READ(), 
		 -> I2C_DO_SEND_RESTART_WRITE(), I2C_DO_SEND_STOP(), I2C_DO_TX(), I2C_DO_TX_EMPTY(), 

    I2C_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1Byte@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), 

    I2C_Status$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_Status$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> bufferBlock$data(COMRAM[3]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read1ByteRegister@returnValue$data(COMRAM[3]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read2ByteRegister@returnValue$data(COMRAM[3]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1Byte@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Write1ByteRegister@data$data(COMRAM[3]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@data$data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    I2C_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllllll[1]), LATB(BITBIGSFRllllhl[1]), LATC(BITBIGSFRllllhl[1]), LATD(BITBIGSFRllllhl[1]), 
		 -> LATE(BITBIGSFRllllhl[1]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> my_lcd_4bit(COMRAM[6]), 

    lcd_4bit_send@lcd	PTR const struct . size(1) Largest target is 6
		 -> my_lcd_4bit(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> my_lcd_4bit(COMRAM[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> my_lcd_4bit(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> my_lcd_4bit(COMRAM[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> my_lcd_4bit(COMRAM[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> my_lcd_4bit(COMRAM[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 19
		 -> dummy_str(COMRAM[2]), hex_str(BANK0[2]), STR_1(CODE[16]), STR_11(CODE[19]), 
		 -> STR_12(CODE[16]), STR_13(CODE[14]), STR_14(CODE[3]), STR_2(CODE[9]), 
		 -> STR_3(CODE[9]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> my_lcd_4bit(COMRAM[6]), 

    LCD_Print_Date@DS1307_obj	PTR const struct . size(1) Largest target is 6
		 -> DS1307_obj(BANK0[6]), 

    LCD_Print_Time@DS1307_obj	PTR const struct . size(1) Largest target is 6
		 -> DS1307_obj(BANK0[6]), 

    memset@dest	PTR void  size(1) Largest target is 2
		 -> dummy_str(COMRAM[2]), hex_str(BANK0[2]), 

    memset@p	PTR unsigned char  size(1) Largest target is 2
		 -> dummy_str(COMRAM[2]), hex_str(BANK0[2]), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    NULL$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllllh[1]), PORTB(BITBIGSFRlllllh[1]), PORTC(BITBIGSFRlllllh[1]), PORTD(BITBIGSFRlllllh[1]), 
		 -> PORTE(BITBIGSFRlllllh[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr$data	PTR unsigned char  size(2) Largest target is 0

    S1664$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S1664$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S1664$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S1664$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S1664$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S1664$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S1664$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1664$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S1664$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1664$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S1664$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S1664$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1664$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S1664$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S1664$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S1664$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S1664$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S1664$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S1664$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1664$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S1664$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1664$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S1664$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S1664$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1664$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1664$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    S217$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S217$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S217$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    S217$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1Byte@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    S3191$buffer	PTR unsigned char  size(2) Largest target is 0

    S3191$source	PTR const unsigned char  size(2) Largest target is 0

    S909$data	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 2
		 -> dummy_str(COMRAM[2]), hex_str(BANK0[2]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_10(CODE[3]), STR_15(CODE[3]), STR_16(CODE[3]), STR_17(CODE[3]), 
		 -> STR_9(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 2
		 -> dummy_str(COMRAM[2]), hex_str(BANK0[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 19
		 -> dummy_str(COMRAM[2]), hex_str(BANK0[2]), STR_4(CODE[19]), STR_5(CODE[8]), 
		 -> STR_6(CODE[8]), STR_7(CODE[15]), STR_8(CODE[12]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 19
		 -> dummy_str(COMRAM[2]), hex_str(BANK0[2]), STR_4(CODE[19]), STR_5(CODE[8]), 
		 -> STR_6(CODE[8]), STR_7(CODE[15]), STR_8(CODE[12]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRllllhl[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(SFR[1]), 
		 -> TRISE(BITBIGSFRlllhl[1]), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_10(CODE[3]), STR_15(CODE[3]), STR_16(CODE[3]), STR_17(CODE[3]), 
		 -> STR_9(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_10(CODE[3]), STR_15(CODE[3]), STR_16(CODE[3]), STR_17(CODE[3]), 
		 -> STR_9(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_10(CODE[3]), STR_15(CODE[3]), STR_16(CODE[3]), STR_17(CODE[3]), 
		 -> STR_9(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_EUSART_Send_Date
    _main->_EUSART_Send_Time
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _gpio_pin_intialize->_gpio_pin_write_logic
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _Read_Temperature->_I2C_Read1ByteRegister
    _LCD_Print_Time->_convert_byte_to_str
    _LCD_Print_Temperature->_convert_byte_to_str
    _LCD_Print_Date->_convert_byte_to_str
    _LCD_Beginning_Msg->_lcd_4bit_send_string_pos
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_4bit_send
    _lcd_4bit_send_char_data->_lcd_4bit_send
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_send->_gpio_pin_write_logic
    _I2C_Write1Byte->_I2C_SetAddressNackCallback
    _Get_time_And_Date->_Get_days
    _Get_time_And_Date->_Get_hours
    _Get_time_And_Date->_Get_minutes
    _Get_time_And_Date->_Get_months
    _Get_time_And_Date->_Get_seconds
    _Get_time_And_Date->_Get_years
    _Get_years->_I2C_Read1ByteRegister
    _Get_seconds->_I2C_Read1ByteRegister
    _Get_months->_I2C_Read1ByteRegister
    _Get_minutes->_I2C_Read1ByteRegister
    _Get_hours->_I2C_Read1ByteRegister
    _Get_days->_I2C_Read1ByteRegister
    _EX_EEPROM_Write_Byte->_I2C_Write1ByteRegister
    _I2C_Write1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Write1ByteRegister->_I2C_SetDataCompleteCallback
    _EX_EEPROM_Read_Byte->_I2C_Read1ByteRegister
    _I2C_Read1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Read1ByteRegister->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_Open->_I2C_SetInterruptHandler
    _I2C_MasterWrite->_I2C_MasterOperation
    _EUSART_Send_Time->_convert_byte_to_str
    _EUSART_Send_Temp->_convert_byte_to_str
    _EUSART_Send_Date->_convert_byte_to_str
    _convert_byte_to_str->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _EUSART_Send_String->_strlen

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_DO_TX->_I2C_MasterSendTxData
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _wr2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_I2C_SetDataCompleteCallback->i2_I2C_SetCallback

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  341742
                                             66 COMRAM     2     2      0
                   _EUSART_Send_Date
                 _EUSART_Send_String
                   _EUSART_Send_Temp
                   _EUSART_Send_Time
                _EX_EEPROM_Read_Byte
               _EX_EEPROM_Write_Byte
                  _Get_time_And_Date
                     _I2C_Write1Byte
                  _LCD_Beginning_Msg
                     _LCD_Print_Date
              _LCD_Print_Temperature
                     _LCD_Print_Time
                   _Read_Temperature
                  _SYSTEM_Initialize
                 _lcd_4bit_intialize
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_intialize                                   5     4      1   14512
                                             30 COMRAM     5     4      1
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_intialize                                   2     1      1    3175
                                             24 COMRAM     1     0      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_intialize                         7     6      1     216
                                             16 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     534
                   _CLOCK_Initialize
                  _EUSART_Initialize
               _EUSART_ReceiveEnable
                     _I2C_Initialize
               _INTERRUPT_Initialize
                     _NVM_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NVM_Initialize                                       0     0      0       0
                    _NVM_StatusClear
 ---------------------------------------------------------------------------------
 (3) _NVM_StatusClear                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_ReceiveEnable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     240
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2     120
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2     120
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_Temperature                                     3     3      0    6967
                                             28 COMRAM     3     3      0
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _LCD_Print_Time                                       1     0      1   56515
                                             64 COMRAM     1     0      1
                _convert_byte_to_str
        _lcd_4bit_send_char_data_pos
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _LCD_Print_Temperature                                1     1      0   33030
                                             64 COMRAM     1     1      0
                _convert_byte_to_str
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _LCD_Print_Date                                       1     0      1   56515
                                             64 COMRAM     1     0      1
                _convert_byte_to_str
        _lcd_4bit_send_char_data_pos
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _LCD_Beginning_Msg                                    2     2      0   59448
                                             42 COMRAM     2     2      0
        _lcd_4bit_send_char_data_pos
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             6     1      5   25212
                                             36 COMRAM     6     1      5
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data_pos                          5     1      4   23365
                                             36 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  6     3      3   11576
                                             30 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   10871
                                             27 COMRAM     3     1      2
               _gpio_pin_write_logic
                      _lcd_4bit_send
        _lcd_4bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              3     1      2    9199
                                             27 COMRAM     3     1      2
               _gpio_pin_write_logic
                      _lcd_4bit_send
        _lcd_4bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          2     1      1    2832
                                             24 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send                                        3     1      2    3270
                                             24 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    2436
                                             16 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Write1Byte                                       2     1      1    4119
                                             25 COMRAM     2     1      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (1) _Get_time_And_Date                                    6     0      6   42372
                                             31 COMRAM     6     0      6
                           _Get_days
                          _Get_hours
                        _Get_minutes
                         _Get_months
                        _Get_seconds
                          _Get_years
 ---------------------------------------------------------------------------------
 (2) _Get_years                                            3     2      1    7062
                                             28 COMRAM     3     2      1
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _Get_seconds                                          3     2      1    7062
                                             28 COMRAM     3     2      1
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _Get_months                                           3     2      1    7062
                                             28 COMRAM     3     2      1
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _Get_minutes                                          3     2      1    7062
                                             28 COMRAM     3     2      1
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _Get_hours                                            3     2      1    7062
                                             28 COMRAM     3     2      1
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _Get_days                                             3     2      1    7062
                                             28 COMRAM     3     2      1
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _EX_EEPROM_Write_Byte                                 2     1      1    6560
                                             28 COMRAM     2     1      1
             _I2C_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Write1ByteRegister                               3     1      2    6440
                                             25 COMRAM     3     1      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _EX_EEPROM_Read_Byte                                  2     2      0    6964
                                             28 COMRAM     2     2      0
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Read1ByteRegister                                3     2      1    6919
                                             25 COMRAM     3     2      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          4     0      4    2218
                                             21 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     0      4    1760
                                             16 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4    2022
                                             21 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      5     1      4     914
                                             16 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             2     2      0     144
                                             18 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                _I2C_MasterEnableIrq
                     _I2C_MasterOpen
            _I2C_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _I2C_SetInterruptHandler                              2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0      46
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  2     2      0      46
                                             16 COMRAM     2     2      0
                    _I2C_MasterStart
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            1     1      0      24
                                             16 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Send_Time                                     2     2      0    9209
                                             64 COMRAM     2     2      0
                   _EUSART_IsTxReady
                 _EUSART_Send_String
                       _EUSART_Write
                _convert_byte_to_str
 ---------------------------------------------------------------------------------
 (1) _EUSART_Send_Temp                                     0     0      0    9209
                   _EUSART_IsTxReady
                 _EUSART_Send_String
                       _EUSART_Write
                _convert_byte_to_str
 ---------------------------------------------------------------------------------
 (1) _EUSART_Send_Date                                     2     2      0    9209
                                             64 COMRAM     2     2      0
                   _EUSART_IsTxReady
                 _EUSART_Send_String
                       _EUSART_Write
                _convert_byte_to_str
 ---------------------------------------------------------------------------------
 (2) _convert_byte_to_str                                  2     0      2    7796
                                             62 COMRAM     2     0      2
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    15      6    4366
                                             43 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             4     1      3    3405
                                             39 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           13    10      3    3053
                                             26 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     934
                                             16 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             22 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                             16 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _memset                                               6     1      5    1236
                                             16 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (2) _EUSART_Send_String                                   5     3      2    1367
                                             20 COMRAM     5     3      2
                   _EUSART_IsTxReady
                       _EUSART_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     318
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_IsTxReady                                     1     1      0      24
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManagerHigh                      10    10      0   17934
                                              6 COMRAM    10    10      0
                                NULL *
                      _I2C_MasterIsr *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterIsr                                        0     0      0   17934
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterFsm                                       3     3      0   17934
                                              3 COMRAM     3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                   _I2C_MasterIsNack
               i2_I2C_MasterClearIrq
 ---------------------------------------------------------------------------------
 (11) i2_I2C_MasterClearIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_TX_EMPTY                                     2     2      0    4467
                                              0 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_TX                                           2     2      0    4489
                                              1 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_ADR_WRITE                               0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_ADR_READ                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_ACK                                       0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX                                           2     2      0    4467
                                              0 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_NACK_STOP                                 0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_NACK_RESTART                              0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RCEN                                         0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_ADDRESS_NACK                                 2     2      0    4467
                                              0 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _wr2RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _wr1RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _rdBlkRegCompleteHandler                             3     1      2    1123
                                              9 COMRAM     3     1      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _rd2RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _rd1RegCompleteHandler                               2     0      2     836
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) i2_I2C_SetDataCompleteCallback                       4     0      4     510
                                              5 COMRAM     4     0      4
                  i2_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (14) i2_I2C_SetCallback                                   5     1      4     206
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (13) i2_I2C_SetBuffer                                     4     0      4     304
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_CallbackReturnStop                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _I2C_CallbackReturnReset                             2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Send_Date
     _EUSART_IsTxReady
     _EUSART_Send_String
       _EUSART_IsTxReady
       _EUSART_Write
       _strlen
     _EUSART_Write
     _convert_byte_to_str
       _memset
       _sprintf
         _vfprintf
           _vfpfcnvrt
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _fputc
               _putch
   _EUSART_Send_String
   _EUSART_Send_Temp
     _EUSART_IsTxReady
     _EUSART_Send_String
     _EUSART_Write
     _convert_byte_to_str
   _EUSART_Send_Time
     _EUSART_IsTxReady
     _EUSART_Send_String
     _EUSART_Write
     _convert_byte_to_str
   _EX_EEPROM_Read_Byte
     _I2C_Read1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterEnableIrq
         _I2C_MasterOpen
         _I2C_SetInterruptHandler
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
         _I2C_SetCallback
   _EX_EEPROM_Write_Byte
     _I2C_Write1ByteRegister
       _I2C_Close
       _I2C_MasterWrite
       _I2C_Open
       _I2C_SetAddressNackCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
   _Get_time_And_Date
     _Get_days
       _I2C_Read1ByteRegister
     _Get_hours
       _I2C_Read1ByteRegister
     _Get_minutes
       _I2C_Read1ByteRegister
     _Get_months
       _I2C_Read1ByteRegister
     _Get_seconds
       _I2C_Read1ByteRegister
     _Get_years
       _I2C_Read1ByteRegister
   _I2C_Write1Byte
     _I2C_Close
     _I2C_MasterWrite
     _I2C_Open
     _I2C_SetAddressNackCallback
     _I2C_SetBuffer
   _LCD_Beginning_Msg
     _lcd_4bit_send_char_data_pos
       _lcd_4bit_send_char_data
         _gpio_pin_write_logic
         _lcd_4bit_send
           _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
           _gpio_pin_write_logic
       _lcd_4bit_set_cursor
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send
           _lcd_4bit_send_enable_signal
     _lcd_4bit_send_command
     _lcd_4bit_send_string_pos
       _lcd_4bit_send_char_data
       _lcd_4bit_set_cursor
   _LCD_Print_Date
     _convert_byte_to_str
     _lcd_4bit_send_char_data_pos
     _lcd_4bit_send_string_pos
   _LCD_Print_Temperature
     _convert_byte_to_str
     _lcd_4bit_send_string_pos
   _LCD_Print_Time
     _convert_byte_to_str
     _lcd_4bit_send_char_data_pos
     _lcd_4bit_send_string_pos
   _Read_Temperature
     _I2C_Read1ByteRegister
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _EUSART_ReceiveEnable
     _I2C_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _NVM_Initialize
       _NVM_StatusClear
     _PIN_MANAGER_Initialize
   _lcd_4bit_intialize
     _gpio_pin_intialize
       _gpio_pin_direction_intialize
       _gpio_pin_write_logic
     _lcd_4bit_send_command
   _lcd_4bit_send_string_pos

 _INTERRUPT_InterruptManagerHigh (ROOT)
   NULL(Fake) *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
             i2_I2C_SetCallback
         _rd2RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterIsNack *
       i2_I2C_MasterClearIrq *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      53        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      78       5       75.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     44      5D       1       98.9%
BITBIGSFRhllh       1C      0       0      38        0.0%
BITBIGSFRllllll     1C      0       0      51        0.0%
BITBIGSFRlhhhh       C      0       0      41        0.0%
BITBIGSFRlhhhlh      7      0       0      42        0.0%
BITBIGSFRhh          7      0       0      36        0.0%
BITBIGSFRhllll       6      0       0      40        0.0%
BITBIGSFRlllllh      4      0       0      49        0.0%
BITBIGSFRllllhl      4      0       0      48        0.0%
BITBIGSFRlllhl       4      0       0      47        0.0%
BITBIGSFRlhl         4      0       0      44        0.0%
BITBIGSFRhlllh       2      0       0      39        0.0%
BITBIGSFRhlh         2      0       0      37        0.0%
BITBIGSFRlllhh       1      0       0      46        0.0%
BITBIGSFRllllll      1      0       0      50        0.0%
BITBIGSFRlhhhll      1      0       0      43        0.0%
BITBIGSFRllh         1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D5      52        0.0%
DATA                 0      0      D5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Apr 27 16:31:58 2024

                            ??_I2C_DO_SEND_ADR_READ 0001                                                   l9 2D20  
                           ??_I2C_DO_SEND_ADR_WRITE 0002                                         _SSPSTATbits 0FC7  
                                                l12 2D32                                                  l33 2440  
                                                l42 2CFC                                                  l51 2D0E  
                                                l36 2CC6                                                  l45 2CB4  
                                                l39 2CEA                                                  l48 2CD8  
                                      ___awdiv@sign 0016              fp__EUSART_OverrunErrorCallbackRegister 0000  
       __end_of_EUSART_OverrunErrorCallbackRegister 2BE8               ??_EUSART_OverrunErrorCallbackRegister 0013  
              ?_EUSART_OverrunErrorCallbackRegister 0011                 _EUSART_OverrunErrorCallbackRegister 2BCC  
                                  _Read_Temperature 2C1C                               ??_I2C_DO_SEND_RESTART 0001  
                                               l210 24A6                                                 l205 2DA6  
                                               l160 2C8E                                                 l332 2E2E  
                                               l180 2DAE                                                 l164 202A  
                                               l350 2E26                                                 l174 2842  
                                               l190 2C4A                                                 l168 2A1E  
                                               l329 2B8C                                                 l425 222A  
                                               l371 2E22                                                 l187 2B46  
                                               l443 23D8                                                 l380 2E32  
                                               l196 2C62                                                 l452 26E8  
                                               l532 2E04                                                 l608 2BAC  
                                               l377 2E2A                                                 l713 2D92  
                                               l545 2E1A                                                 l820 28F6  
                                               l726 2D88                                                 l751 2C32  
                                               l911 2BE6                                                 l639 29C2  
                                               l649 2D9C                                                 l907 2C02  
                                               l739 2D7E                                                 l838 2E1E  
                                               l694 292A                                                 l868 2B20  
                                               l869 2B22                                                 l888 2DB6  
                                               l897 213E                                                 l999 1C28  
                             _LCD_Print_Temperature 273A                          ??_INT0_SetInterruptHandler 0013  
                                               _abs 2960                              fp__I2C_DO_RX_NACK_STOP 0000  
                                               _ret 0057                 __end_of_lcd_4bit_send_enable_signal 27C2  
                       _lcd_4bit_send_enable_signal 2780                                        ___awmod@sign 0016  
                                               tosl 0FFD                                                 wreg 0FE8  
                              ??_EUSART_Send_String 0017                        ??_I2C_SetAddressNackCallback 001A  
                                  lcd_4bit_send@lcd 0019                                    lcd_4bit_send@ret 001B  
                            _I2C_Write1ByteRegister 2370                            ??_I2C_CallbackReturnStop 000C  
                                      _I2C_DO_RESET 2D52                                                l1011 1B70  
                                              l1020 2304                                                l1023 2A4A  
                                              l1104 20C0                                                l1032 277E  
                                              l1035 1AB8                                                ?_abs 0017  
                           ??_rd2RegCompleteHandler 000C                                                l1029 14CE  
                                              l1038 1CDC                                                l2031 139E  
                                              l1207 1D8C                                                l1073 16D6  
                                              l1083 2690                                                l2052 2882  
                                              l1180 27C0                                                l1252 1878  
                                              l1078 2632                                                l2071 1EE6  
                                              l1175 236E                                                l2056 297A  
                                              l1264 17A6                                                l1088 28BE  
                                              l1280 2C1A                                                l2082 2E54  
                                              l4010 2E24                                                l2059 2992  
                                              l1267 17A8                                                l1540 193C  
                                              l4100 1E34                                                l4020 17A2  
                                              l4012 16D8                                                l4030 1894  
                                              l4110 1E68                                                l4014 16EC  
                                              l2088 2738                                                l4040 18BA  
                                              l4032 1898                                                l4024 187A  
                                              l4120 296E                                                l4112 1E84  
                                              l4104 1E3E                                                l5000 26AA  
                                              l4016 173C                                                l1553 1E3C  
                                              l4050 18F0                                                l4042 18CC  
                                              l4034 18A6                                                l4026 187E  
                                              l4114 1EB6                                                l4106 1E4E  
                                              l4210 110C                                                l4202 10CE  
                                              l4130 2E30                                                l5002 26BC  
                                              l4018 174C                                                l5010 2B96  
                                              l4052 1906                                                l4044 18D4  
                                              l4060 191C                                                l4036 18AE  
                                              l4028 188C                                                l4108 1E5E  
                                              l4220 1174                                                l4212 1116  
                                              l4204 10F2                                                l4140 2E20  
                                              l4132 2B6C                                                l5004 26D0  
                                              l5100 2766                                                l5020 2C1E  
                                              l5012 2B9A                                                l4062 192C  
                                              l4054 190E                                                l4046 18DC  
                                              l4038 18B2                                                l4070 1D92  
                                              l4118 2960                                                l4230 11FA  
                                              l4222 118C                                                l4214 1134  
                                              l4206 10FA                                                l4142 2E28  
                                              l4150 281A                                                l4134 2B7A  
                                              l4310 1FAA                                                l4302 1F90  
                                              l5006 26D4                                                l5110 1A5C  
                                              l5102 1A02                                                l5022 2C22  
                                              l5014 2B9E                                                l5030 15E2  
                                              l4064 1934                                                l4056 1910  
                                              l4048 18EA                                                l4080 1DC2  
                                              l4072 1DA0                                                l4232 120A  
                                              l4240 1248                                                l4224 11BC  
                                              l4216 1152                                                l4208 1108  
                                              l5200 22FE                                                l4144 2E2C  
                                              l4160 283C                                                l4152 281C  
                                              l4136 2B8A                                                l4128 2D9E  
                                              l4320 1FBC                                                l4312 1FAC  
                                              l4304 1F94                                                l5112 1A8A  
                                              l5104 1A18                                                l5120 1C54  
                                              l5024 2C2E                                                l5016 2BA2  
                                              l5008 2B8E                                                l5032 15F2  
                                              l4058 1916                                                l4090 1E08  
                                              l4082 1DD4                                                l4074 1DA8  
                                              l4250 12A6                                                l4234 121A  
                                              l4226 11D8                                                l4218 116A  
                                              l4242 125E                                                l5130 1B72  
                                              l4154 2820                                                l4162 2840  
                                              l4146 2806                                                l4330 1FE4  
                                              l4322 1FC4                                                l4314 1FAE  
                                              l4306 1FA4                                                l4170 2482  
                                              l5114 1AA0                                                l5106 1A30  
                                              l5122 1C6A                                                l5026 2C30  
                                              l5018 2BA4                                                l5050 1652  
                                              l5042 161A                                                l5034 15FA  
                                              l4092 1E10                                                l4084 1DDC  
                                              l4076 1DAC                                                l4068 1D8E  
                                              l4260 12D6                                                l4252 12AC  
                                              l4244 127C                                                l4236 122C  
                                              l4228 11EA                                                l4500 287A  
                                              l5140 1BB2                                                l5132 1B82  
                                              l4156 2830                                                l4148 280A  
                                              l4340 200C                                                l4332 1FEC  
                                              l4324 1FCC                                                l4316 1FB2  
                                              l4308 1FA8                                                l4180 2316  
                                              l5108 1A46                                                l5124 1C80  
                                              l5116 1C2A                                                l5060 1696  
                                              l5052 165E                                                l5044 1624  
                                              l5036 1612                                                l4094 1E16  
                                              l4086 1DE4                                                l4078 1DBA  
                                              l4270 132A                                                l4262 12E8  
                                              l4254 12BC                                                l4246 1294  
                                              l4238 1246                                                l5150 1BEE  
                                              l5142 1BBE                                                l5134 1B8E  
                                              l4158 2838                                                l4342 2018  
                                              l4334 1FF4                                                l4326 1FD4  
                                              l4318 1FBA                                                l4350 2028  
                                              l4166 2444                                                l4510 21EA  
                                              l4182 231E                                                l4190 2790  
                                              l5126 1CAE                                                l5118 1C3C  
                                              l5062 16A2                                                l5054 1678  
                                              l5046 1628                                                l5070 16D4  
                                              l4088 1DF2                                                l4096 1E1C  
                                              l4264 12FA                                                l4256 12C4  
                                              l4248 12A2                                                l4280 137A  
                                              l5152 1BF8                                                l5144 1BC8  
                                              l5136 1B98                                                l5160 1ACA  
                                              l4360 2A0C                                                l4344 201C  
                                              l4336 1FFC                                                l4328 1FDC  
                                              l4168 2456                                                l4512 21FC  
                                              l4504 21BE                                                l4184 236C  
                                              l4192 2798                                                l5080 1426  
                                              l5128 1CC4                                                l5064 16AE  
                                              l5056 167E                                                l5048 1644  
                                              l4098 1E2C                                                l4266 130E  
                                              l4258 12C8                                                l4274 1340  
                                              l5154 1C0C                                                l5146 1BDC  
                                              l5138 1BAC                                                l5170 1B06  
                                              l5162 1AD6                                                l4362 2A18  
                                              l4354 29F4                                                l4346 2020  
                                              l4338 2004                                                l4514 2210  
                                              l4506 21C2                                                l4178 2306  
                                              l4194 27A6                                                l5090 1494  
                                              l5082 143C                                                l5074 13A0  
                                              l5066 16BA                                                l5058 168A  
                                              l5410 14D4                                                l4268 1328  
                                              l4276 136E                                                l5156 1C12  
                                              l5148 1BE2                                                l5180 1B40  
                                              l5172 1B10                                                l5164 1AE0  
                                              l4364 2A1C                                                l4356 29F8  
                                              l4348 2024                                                l4372 2B24  
                                              l4380 2C34                                                l4516 2214  
                                              l4508 21D8                                                l4196 27AE  
                                              l4188 2780                                                l5092 14AA  
                                              l5084 1452                                                l5076 13FA  
                                              l5068 16C6                                                l5420 14E8  
                                              l5412 14DE                                                l4702 2DB2  
                                              l4710 272C                                                l5190 22B6  
                                              l5182 1B54                                                l5174 1B24  
                                              l5166 1AF4                                                l5158 1ABA  
                                              l4358 2A08                                                l4382 2C4C  
                                              l4374 2B34                                                l4518 2228  
                                              l4198 27BE                                                l5094 14C0  
                                              l5086 1468                                                l5078 1410  
                                              l5430 1568                                                l5422 1506  
                                              l5414 14E2                                                l4704 26EA  
                                              l4720 29D8                                                l5192 22C0  
                                              l5184 1B5A                                                l5176 1B2A  
                                              l5168 1AFA                                                l4368 2DA8  
                                              l4376 2B3C                                                l4800 2CB8  
                                              l5088 147E                                                l5096 273C  
                                              l5440 15AE                                                l5432 1572  
                                              l5424 1524                                                l5416 14E4  
                                              l5408 14D0                                                l1993 295E  
                                              l4706 26F6                                                l1986 29F2  
                                              l4714 29C4                                                l4730 2954  
                                              l4722 292C                                                l5194 22D4  
                                              l5186 229A                                                l5178 1B36  
                                              l4378 2B44                                                l4802 2CC4  
                                              l4490 2630                                                l5098 2748  
                                              l5450 15D2                                                l5442 15B8  
                                              l5434 158C                                                l5426 1542  
                                              l5418 14E6                                                l4708 26FA  
                                              l4716 29CC                                                l4724 2934  
                                              l5196 22DA                                                l5188 22AA  
                                              l4812 2CEE                                                l4820 2CB2  
                                              l4740 268E                                                l4484 25D6  
                                              l4900 2044                                                l5452 15D6  
                                              l5444 15BE                                                l5436 1594  
                                              l5428 1552                                                l4718 29D6  
                                              l4494 2844                                                l4726 293C  
                                              l5198 22EA                                                l4830 2D00  
                                              l4814 2CFA                                                l4806 2CDC  
                                              l4734 2634                                                l4486 25E6  
                                              l4750 1D00                                                l4902 205A  
                                              l5446 15C6                                                l5438 15A6  
                                              l4496 284C                                                l4728 2944  
                                              l4912 2A20                                                l4832 2D0C  
                                              l4808 2CE8                                                l4824 2CCA  
                                              l4736 2644                                                l4488 25EE  
                                              l4752 1D14                                                l4760 1D50  
                                              l4744 1CDE                                                l4920 289C  
                                              l4904 2088                                                l4680 2D80  
                                              l5448 15CE                                                l4498 285C  
                                              l4914 2A38                                                l4826 2CD6  
                                              l4818 2CA6                                                l4738 264C  
                                              l4754 1D28                                                l4762 1D8A  
                                              l4746 1CF2                                                l4922 28BC  
                                              l4906 208C                                                l4690 2BDE  
                                              l4682 2D76                                                l4850 2E00  
                                              l4770 17AA                                                l4930 2C0C  
                                              l4692 2AFC                                                l4756 1D3C  
                                              l4748 1CFA                                                l4916 2884  
                                              l4908 20BE                                                l4852 2D94  
                                              l4684 2BE8                                                l4836 2C7C  
                                              l4676 2E18                                                l4860 29B0  
                                              l4780 1878                                                l4772 17AA  
                                              l4694 2B00                                                l4790 2388  
                                              l4918 2894                                                l4686 2BFA  
                                              l4870 28E0                                                l4838 2C8C  
                                              l4678 2D8A                                                l4862 29BA  
                                              l4854 2994                                                l4774 17BE  
                                              l4926 2C04                                                l4696 2B0E  
                                              l4792 239A                                                l5840 1D64  
                                              l4688 2BCC                                                l4872 2E1C  
                                              l4880 290C                                                l4864 29C0  
                                              l4856 29A8                                                l4776 180E  
                                              l4928 2C04                                                l4698 2B1C  
                                              l4890 20E2                                                l5842 1360  
                                              l4794 23AC                                                l4786 2372  
                                              l4866 28C0                                                l4882 291A  
                                              l4874 28F8                                                l4858 29AA  
                                              l4778 1822                                                l4892 2114  
                                              l4980 2D30                                                l4796 23C0  
                                              l4788 2372                                                l4868 28D4  
                                              l4884 291C                                                l4876 28FE  
                                              l4894 2116                                                l4886 20C2  
                                              l4798 23C4                                                l4878 290A  
                                              l4888 20CE                                                l4976 2D12  
                                              l4984 23DA                                                l4896 202C  
                                              l4978 2D24                                                l4986 242E  
                                              l4898 203C                                                l4996 2694  
                                              l4998 2694                                                STR_1 1077  
                                              STR_2 10BA                                                STR_3 10B1  
                                              STR_4 1051                                                STR_5 10BB  
                                              STR_6 10B2                                                STR_7 1078  
                                              STR_8 10A5                                                STR_9 10C6  
                                              u2010 2B7A                                                u2011 2B76  
                                              u2100 1188                                                u2020 281A  
                                              u2101 1182                                                u2021 2816  
                                              u2110 118A                                                u2030 2830  
                                              u2031 282C                                                u2200 130A  
                                              u2120 11EA                                                u2040 2456  
                                              u2201 1306                                                u2121 11E6  
                                              u2041 2452                                                u2210 133C  
                                              u2130 11FA                                                u2050 2316  
                                              u2211 1338                                                u2131 11F6  
                                              u2051 2312                                                u2140 120A  
                                              u2300 2228                                                u2060 2790  
                                              _IOCB 0F7D                                                u2141 1206  
                                              u2301 2224                                                u2061 278C  
                                              _LATA 0F89                                                u2150 121A  
                                              u2070 10F2                                                u2230 1FA4  
                                              _LATB 0F8A                                                u2151 1216  
                                              u2071 10EE                                                u2231 1FA0  
                                              u3111 159E                                                _LATC 0F8B  
                                              u2400 2B0E                                                u2160 125A  
                                              u2080 1134                                                u2240 2A08  
                                              _LATD 0F8C                                                u2401 2B0A  
                                              u2161 1256                                                u2081 1130  
                                              u2241 2A04                                                _LATE 0F8D  
                                              u2410 2B1C                                                u2170 127C  
                                              u2090 1152                                                u2250 2B34  
                                              u2411 2B18                                                u2171 1278  
                                              u2091 114E                                                u2251 2B30  
                                              u2420 271C                                                u2180 12BC  
                                              u2181 12B8                                                u2430 272C  
                                              u2190 12FA                                                u2510 2388  
                                              u2270 25E6                                                u2431 2728  
                                              u2191 12F6                                                u2511 2384  
                                              u2271 25E2                                                u2440 29F2  
                                              u2280 287A                                                u2520 23D8  
                                              u2600 2080                                                u2504 1840  
                                              u2441 29EE                                                u2281 2876  
                                              u2521 23D4                                                u2505 183C  
                                              u2290 21D8                                                u1810 174C  
                                              u2450 2644                                                u2610 20AE  
                                              u2427 2712                                                u2291 21D4  
                                              u1811 1748                                                u2451 2640  
                                              u1900 1DBA                                                u2700 26E8  
                                              u1804 170A                                                u2460 1CF2  
                                              u2620 20BE                                                u2380 2BFA  
                                              u1901 1DB6                                                u2701 26E4  
                                              u1805 1706                                                u2461 1CEE  
                                              u2621 20BA                                                u2381 2BF6  
                                              u1830 188C                                                u1910 1DD4  
                                              u2630 2894                                                u2390 2BDE  
                                              u2470 17BE                                                u2710 15F2  
                                              u1831 1888                                                u1911 1DD0  
                                              u2631 2890                                                u2607 2076  
                                              u2391 2BDA                                                u2471 17BA  
                                              u2711 15EE                                                u3407 155C  
                                              u2560 20E2                                                u1840 18A6  
                                              u1920 1DF2                                                u2800 22FE  
                                              u1824 176A                                                u2720 1644  
                                              u2561 20DE                                                u1841 18A2  
                                              u1921 1DEE                                                u2801 22FA  
                                              u1825 1766                                                u2617 20A4  
                                              u2721 1640                                                u3417 157C  
                                              u2570 2110                                                u1850 18CC  
                                              u1930 1E08                                                u2730 1BAC  
                                              u2490 1822                                                u1851 18C8  
                                              u1931 1E04                                                u2731 1BA8  
                                              u3507 27A8                                                u2491 181E  
                                              u3427 164A                                                u2580 213E  
                                              u1860 18EA                                                u1940 1E2C  
                                              u2740 1BDC                                                u2484 17DC  
                                              u2581 213A                                                u1861 18E6  
                                              u1941 1E28                                                u2741 1BD8  
                                              u3517 1B64                                                u2485 17D8  
                                              u3437 1664                                                u1870 1906  
                                              u1950 1E4E                                                u2750 1C0C  
                                              u1790 16EC                                                u2590 203C  
                                              u1871 1902                                                u1951 1E4A  
                                              u3527 1C1C                                                u2751 1C08  
                                              u1791 16E8                                                u2591 2038  
                                              u3447 167A                                                u1880 192C  
                                              u1960 1E5E                                                u2760 1AF4  
                                              u2577 2106                                                u1881 1928  
                                              u1961 1E5A                                                u2761 1AF0  
                                              u2681 2438                                                u3457 1404  
                                              u1890 1DA0                                                u1970 1E84  
                                              u2770 1B24                                                u2690 26AA  
                                              u1891 1D9C                                                u1971 1E80  
                                              u2771 1B20                                                u2691 26A6  
                                              u3467 1430                                                u1980 1EB6  
                                              u2780 1B54                                                u1981 1EB2  
                                              u2781 1B50                                                u3477 145C  
                                              u1990 296E                                                u2790 22D4  
                                              u1991 296A                                                u2791 22D0  
                                              u3487 1488                                                u3497 14B4  
                              _EX_EEPROM_Write_Byte 2D10                                                _WPUB 0F7C  
                     ??_lcd_4bit_send_enable_signal 001A                             ??_wr2RegCompleteHandler 000C  
                             ??_EX_EEPROM_Read_Byte 001D                             __end_of_NVM_StatusClear 2E1C  
                                              abs@a 0017                                                _dbuf 0084  
                                              _main 14D0                            ?_I2C_CallbackReturnReset 000A  
                                              _prec 00AC                                                fsr0h 0FEA  
                                              fsr1h 0FE2                                                indf0 0FEF  
                                              fsr2h 0FDA                                                fsr0l 0FE9  
                                              indf2 0FDF                                                fsr1l 0FE1  
                                              fsr2l 0FD9                                    __end_of_I2C_Open 202C  
                                              btemp 005E                               ?i2_I2C_MasterClearIrq 0001  
                                      _unlockKeyLow 0054                   lcd_4bit_send_char_data_pos@column 0028  
                         ?_INT2_SetInterruptHandler 0011                                                prodh 0FF4  
                                              prodl 0FF3                                                start 00B6  
                _EUSART_DefaultOverrunErrorCallback 0000                             _I2C_SetInterruptHandler 2D9E  
                      fp__I2C_DO_SEND_RESTART_WRITE 0000                                        ___param_bank 0000  
                             _lcd_4bit_send_command 25D6                                               ??_abs 0019  
                              _gpio_pin_write_logic 16D8                                      _LCD_Print_Date 1A02  
                    lcd_4bit_send_string_pos@column 0029                                 __end_of_Get_minutes 2CEC  
                               __end_of_Get_seconds 2CC8                                    ?_I2C_MasterClose 0001  
                                    _LCD_Print_Time 1C2A                               lcd_4bit_intialize@lcd 001F  
                             lcd_4bit_intialize@ret 0023                                       ?_EUSART_Write 0001  
                                  ?_I2C_MasterStart 0001                                       _I2C_DO_RX_ACK 2DC8  
                                  ?_I2C_MasterWrite 0001                                               ?_main 0001  
                                   __end_of___awdiv 193E                                               _EEADR 0FA9  
                                             STR_10 10C3                                               STR_11 1064  
                                             STR_12 1087                                               STR_13 1097  
                                             STR_14 10C9                                     __end_of___awmod 1E3E  
                             _I2C_Read1ByteRegister 21BC                                     ___awdiv@divisor 0013  
                                             i2l210 2572                                               i2l220 2D74  
                                             i2l213 2E0A                                               i2l302 2D5C  
                                             i2l223 2D42                                               i2l232 1A00  
                                             i2l217 2298                                               i2l226 2D50  
                                             i2l500 2AFA                                               i2l316 2E4A  
                                             i2l308 250C                                               i2l341 2E52  
                                             i2l229 19C8                                               i2l245 1F1E  
                                             i2l190 2C7A                                               i2l246 1F8C  
                                             i2l319 2E46                                               i2l503 2802  
                                             i2l335 2E3E                                               i2l263 21BA  
                                             i2l353 2E4E                                               i2l257 2D68  
                                             i2l281 2DEE                                               i2l362 2E16  
                                             i2l338 2DF6                                               i2l290 2DD6  
                                             i2l187 2B6A                                               i2l347 2E42  
                                             i2l356 2CA2                                               i2l284 2DE6  
                                             i2l380 2E36                                               i2l293 2DCE  
                                             i2l359 2E10                                               i2l383 2E3A  
                                             i2l287 2DDE                                               i2l703 008A  
                                             i2l296 2DC6                                               i2l491 2ACE  
                                             i2l299 2DBE                                               i2l494 2AA2  
                                             i2l497 2A76                                               i2l699 006A  
                                   ___awdiv@counter 0015                                               _RCREG 0FAE  
                                             _RCSTA 0FAB                                               _UART1 1001  
                                      vfpfcnvrt@fmt 001C                                               _SPBRG 0FAF  
                                             _PORTA 0F80                                               _PORTB 0F81  
                                             _PORTC 0F82                                               _PORTD 0F83  
                                             _PORTE 0F84                                   ??_I2C_DO_TX_EMPTY 0001  
                                             _TRISA 0F92                                               _TRISB 0F93  
                                             _TRISC 0F94                                               _TRISD 0F95  
                                             _TRISE 0F96                                               _TXREG 0FAD  
                                             _TXSTA 0FAC                           lcd_4bit_set_cursor@column 0021  
                                        _Get_months 2CC8                       lcd_4bit_intialize@pin_counter 0021  
                                 __end_of_I2C_DO_RX 1F8E                                   __end_of_I2C_DO_TX 1A02  
                                             _flags 004F                                               _fputc 1E3E  
                                 __end_of_I2C_Close 2A20                                    fp__I2C_MasterIsr 0000  
                    I2C_MasterOperation@returnValue 0012                                               _width 00AA  
                                             _putch 2E54                               ?_EX_EEPROM_Write_Byte 001D  
                           _I2C_MasterEnableRestart 2E50                            _INT1_SetInterruptHandler 2D80  
                                     _unlockKeyHigh 0053                                               pclath 0FFA  
                                             pclatu 0FFB                                               tablat 0FF5  
                                  ?_I2C_SetCallback 0011                        I2C_SetAddressNackCallback@cb 0016  
                                             plusw0 0FEB                                               plusw2 0FDB  
                                             ttemp5 005F                                               ttemp6 0062  
                                             ttemp7 0066                                               status 0FD8  
                                             wtemp8 005F                                     __end_of_sprintf 2960  
                                 ?_I2C_DO_SEND_STOP 0001                                  ??_I2C_DO_SEND_STOP 0001  
                             I2C_Write1Byte@address 001B                                    __end_of_Get_days 2D10  
                          fp__rd1RegCompleteHandler 0000                                     __initialization 2574  
                            __end_of_LCD_Print_Date 1ABA                               i2I2C_SetBuffer@buffer 0001  
                            __end_of_LCD_Print_Time 1CDE                                        __end_of_main 15E2  
                          fp__wr1RegCompleteHandler 0000                               ?_gpio_pin_write_logic 0011  
                         ?_I2C_DO_SEND_RESTART_READ 0001                                      ??_EUSART_Write 0011  
                                    ?_I2C_DO_RX_ACK 0001                                       _lat_registers 00C4  
                            ?_LCD_Print_Temperature 0001                                              ??_main 0043  
                                 ?_I2C_MasterIsNack 0001                                       __activetblptr 0003  
                                 ?_I2C_MasterSetIrq 0001                                  ??_I2C_MasterIsNack 0001  
EUSART_OverrunErrorCallbackRegister@callbackHandler 0011  EUSART_FramingErrorCallbackRegister@callbackHandler 0011  
                                ??_I2C_MasterSetIrq 0001                          _EUSART_OverrunErrorHandler 00AE  
                   __end_of_I2C_CallbackReturnReset 2E48                                              ?_fputc 0011  
                                            _EEDATA 0FA8                                              _EECON2 0FA7  
                                  ___awdiv@dividend 0011                       I2C_SetDataCompleteCallback@cb 0016  
                   i2I2C_SetDataCompleteCallback@cb 0006                                              ?_putch 0001  
                                            _ANSELH 0F7F                                              i2l4122 2510  
                                            i2l4124 2522                                              i2l4300 2C64  
                                            i2l4126 254E                                              i2l4402 2DD0  
                                            i2l4172 2E50                                              i2l4412 2E0C  
                                            i2l4404 2DD4                                              i2l4420 2DC0  
                                            i2l4174 2E4C                                              i2l4430 2DDC  
                                            i2l4422 2DC4                                              i2l4414 2DB8  
                                            i2l4440 2E44                                              i2l4176 2E12  
                                            i2l4408 2E3C                                              i2l4416 2DBC  
                                            i2l4426 2E40                                              i2l4434 2E38  
                                            i2l4522 2D6A                                              i2l4530 2D34  
                                            i2l4610 2D5E                                              i2l4292 2B48  
                                            i2l4436 2E48                                              i2l4444 2AA4  
                                            i2l4452 2A78                                              i2l4460 2A4C  
                                            i2l4620 2148                                              i2l4524 2D6E  
                                            i2l4532 2D38                                              i2l4540 2D48  
                                            i2l4604 1F34                                              i2l4612 2D62  
                                            i2l4428 2DD8                                              i2l4294 2B58  
                                            i2l4470 2AE4                                              i2l4446 2AB8  
                                            i2l4454 2A8C                                              i2l4462 2A60  
                                            i2l4630 215A                                              i2l4526 2D72  
                                            i2l4534 2D40                                              i2l4542 2D4E  
                                            i2l4550 1956                                              i2l4614 2D66  
                                            i2l4390 2DE8                                              i2l4296 2B60  
                                            i2l4472 2AF8                                              i2l4448 2ACC  
                                            i2l4456 2AA0                                              i2l4464 2A74  
                                            i2l4480 2800                                              i2l4384 2C90  
                                            i2l4624 2150                                              i2l4392 2DEC  
                                            i2l4298 2B68                                              i2l4626 2154  
                                            i2l4618 2140                                              i2l4538 2D44  
                                            i2l4570 19F8                                              i2l4554 195E  
                                            i2l4546 193E                                              i2l4642 2DC8  
                                            i2l4650 2D56                                              i2l5370 004E  
                                            i2l4468 2AD0                                              i2l4476 27C2  
                                            i2l4388 2DF2                                              i2l4636 2162  
                                            i2l4572 19FE                                              i2l4564 196E  
                                            i2l4580 1EE8                                              i2l4396 2DE0  
                                            i2l4644 2DCC                                              i2l4652 2D5A  
                                            i2l4660 24B4                                              i2l5372 0078  
                                            i2l4478 27EC                                              i2l4566 19CC  
                                            i2l4558 1966                                              i2l4582 1EF6  
                                            i2l4398 2DE4                                              i2l4670 24C4  
                                            i2l5366 0032                                              i2l4568 19DE  
                                            i2l4584 1EFC                                              i2l4648 2D52  
                                            i2l4664 24BC                                              i2l4656 24A8  
                                            i2l4840 222C                                              i2l5368 0040  
                                            i2l4594 1F24                                              i2l4586 1F14  
                                            i2l4658 24AC                                              i2l4842 2230  
                                            i2l4588 1F18                                              i2l4844 2240  
                                            i2l4598 1F2C                                              i2l4846 2254  
                                            i2l4784 2E34                                              i2l4848 225A  
                                            i2l5850 2194                                              i2l5844 24F6  
                                            i2l5846 1F66                                              _TABLAT 0FF5  
                                            i2l5848 19A2                                              i2l4994 2E06  
                                            _OSCCON 0FD3                              ??i2_I2C_MasterClearIrq 0001  
                                     vfpfcnvrt@done 0020                           ??_I2C_SetInterruptHandler 0013  
                                            _SPBRGH 0FB0                                              _SSPADD 0FC8  
                                  ?_NVM_StatusClear 0001                                              _SSPBUF 0FC9  
                                 _LCD_Beginning_Msg 13A0                    __end_of_lcd_4bit_send_string_pos 20C2  
                               _I2C_MasterEnableIrq 2E20                                         _Get_minutes 2CDA  
                                       _Get_seconds 2CB6                                 _I2C_MasterGetRxData 2E3C  
                                ?_LCD_Beginning_Msg 0001                              ?_lcd_4bit_send_command 001C  
                                      vfprintf@cfmt 002B                                     ?_LCD_Print_Date 0041  
                                   ?_LCD_Print_Time 0041                                       _I2C_MasterFsm 222C  
                                         ??___awdiv 0015                                       _I2C_MasterIsr 2E06  
                                         ??___awmod 0015                               __end_of_lcd_4bit_send 2370  
                                            _memset 29C4                                 ??_LCD_Beginning_Msg 002B  
                                            clear_0 25BA                                              clear_1 25C6  
                                 I2C_SetCallback@cb 0011                                    ___awdiv@quotient 0017  
                           fp__I2C_DO_SEND_ADR_READ 0000                                 EUSART_Send_String@i 0019  
                                   ___awmod@divisor 0013                              ?_I2C_Read1ByteRegister 001A  
                                            isa$std 0001                                   ?_EUSART_IsTxReady 0001  
                                   ___awmod@counter 0015                                       _I2C_SetBuffer 2B24  
                                 ?_CLOCK_Initialize 0001                                              _strlen 26EA  
                      __end_of_I2C_MasterDisableIrq 2E2C             gpio_pin_direction_intialize@_pin_config 0011  
                                            fputc@c 0011                                  ??_EUSART_IsTxReady 0011  
                              ?_I2C_MasterEnableIrq 0001                        _INT2_DefaultInterruptHandler 0000  
                               _I2C_DO_ADDRESS_NACK 24A8                                        __pdataCOMRAM 0057  
                              ?_I2C_MasterGetRxData 0001                                           ?_I2C_Open 0001  
                                ??_CLOCK_Initialize 0011                  __end_of_I2C_SetAddressNackCallback 2C64  
                        _I2C_SetAddressNackCallback 2C4C                                        __mediumconst 0000  
                                       ?_Get_months 001D                                              tblptrh 0FF7  
                                            tblptrl 0FF6                                              tblptru 0FF8  
                         ??_I2C_MasterEnableRestart 0001                                              putch@c 0001  
                                  __end_of_vfprintf 2884                              ??_EX_EEPROM_Write_Byte 001E  
          INT2_SetInterruptHandler@InterruptHandler 0011            INT1_SetInterruptHandler@InterruptHandler 0011  
          INT0_SetInterruptHandler@InterruptHandler 0011             I2C_SetInterruptHandler@InterruptHandler 0011  
                                         ??_sprintf 0032                                   ?_EUSART_Send_Date 0001  
                                  ??_NVM_Initialize 0011                            __end_of_Read_Temperature 2C34  
                            convert_byte_to_str@val 0040                    ??_INTERRUPT_InterruptManagerHigh 0007  
                   ?_INTERRUPT_InterruptManagerHigh 0001                           __end_of_LCD_Beginning_Msg 14D0  
                            convert_byte_to_str@str 003F                                   _SYSTEM_Initialize 2B8E  
                                 ?_EUSART_Send_Temp 0001                                   ?_EUSART_Send_Time 0001  
                                        __accesstop 0060                             __end_of__initialization 25CC  
                                ??_EUSART_Send_Date 0041                                 _I2C_MasterOperation 2804  
                                ?_SYSTEM_Initialize 0001                                  ??_EUSART_Send_Temp 0041  
                                ??_EUSART_Send_Time 0041                                       ___rparam_used 0001  
                              ?_I2C_DO_ADDRESS_NACK 0001                                       __end_of_UART1 1031  
                           _lcd_4bit_send_char_data 2634                             _rdBlkRegCompleteHandler 27C2  
                        fp__rdBlkRegCompleteHandler 0000                              ??_gpio_pin_write_logic 0013  
                                    __pcstackCOMRAM 0001                                   __end_of_Get_hours 2CFE  
                                    ?_I2C_MasterFsm 0001                                      ?_I2C_MasterIsr 0001  
                                 __end_of_Get_years 2CB6                                     ??_I2C_DO_RX_ACK 0001  
                                      __pidataBANK0 2BAE                              _I2C_CallbackReturnStop 2E48  
                               ??_SYSTEM_Initialize 0013                                       __end_of_fputc 1EE8  
                                     __end_of_putch 2E56                                      ?_I2C_SetBuffer 0011  
                          lcd_4bit_send_command@lcd 001C                            lcd_4bit_send_command@ret 001E  
                     __end_of_I2C_DO_SEND_ADR_WRITE 2D52                          ?_I2C_DO_SEND_RESTART_WRITE 0001  
                              ?_I2C_MasterOperation 0001                               ??_I2C_MasterEnableIrq 0011  
                             ??_I2C_MasterGetRxData 0001                             ?_I2C_Write1ByteRegister 001A  
                                        ??_I2C_Open 0013                    __end_of_INT2_SetInterruptHandler 2D80  
                        __end_of_I2C_MasterClearIrq 2E34                             EX_EEPROM_Write_Byte@reg 001E  
                      ?_lcd_4bit_send_char_data_pos 0025                                           ?_Get_days 001D  
                                           ??_fputc 0014                           __end_of_SYSTEM_Initialize 2BAE  
                                           ??_putch 0011                                   _I2C_MasterSendAck 2E0C  
                                        __pbssBANK0 0060                                __end_of_EUSART_Write 2DB8  
                                     ??_I2C_DO_IDLE 0001                                       ??_I2C_DO_RCEN 0001  
                     __end_of_rd2RegCompleteHandler 2AA4                        __end_of_I2C_MasterSendTxData 2DF8  
                                ?_I2C_MasterSendAck 0001                               _INT0_InterruptHandler 004B  
                                 _I2C_MasterStartRx 2E40                               ??_I2C_DO_ADDRESS_NACK 0001  
                     __end_of_wr2RegCompleteHandler 2AFC                                 _I2C_DO_RX_NACK_STOP 2DC0  
                             _rd1RegCompleteHandler 2AA4                                  ?_I2C_MasterStartRx 0001  
                        __end_of_I2C_MasterSendNack 2E18                               _DS1307_obj@DS1307$F91 00A4  
                             _wr1RegCompleteHandler 2A4C                                 ??_I2C_MasterSendAck 0001  
                          rd1RegCompleteHandler@ptr 000A                         __end_of_I2C_DO_SEND_RESTART 2DE0  
                                   _I2C_DO_TX_EMPTY 2140                                 I2C_SetBuffer@buffer 0011  
                               ??_I2C_MasterStartRx 0001                                _EUSART_AutoBaudQuery 0000  
                          LCD_Print_Time@DS1307_obj 0041                                             _BAUDCON 0FB8  
                                           ?_memset 0011                               ??_I2C_MasterOperation 0011  
                    I2C_SetDataCompleteCallback@ptr 0018                    i2I2C_SetDataCompleteCallback@ptr 0008  
                    __end_of_I2C_Write1ByteRegister 23DA                                             ?_strlen 0011  
                          ??_I2C_DO_RX_NACK_RESTART 0001                                     _EUSART_IsTxDone 0000  
                 __end_of_I2C_DO_SEND_RESTART_WRITE 2DE8                                ?_I2C_DO_RX_NACK_STOP 0001  
                        ??_INT1_SetInterruptHandler 0013                           ?_lcd_4bit_send_string_pos 0025  
                                   _EUSART_ErrorGet 0000                                             _TBLPTRH 0FF7  
                                           _TBLPTRL 0FF6                                             _TBLPTRU 0FF8  
                         __end_of_I2C_MasterSendAck 2E12                                             _OSCTUNE 0F9B  
                       __end_of_EX_EEPROM_Read_Byte 2D34                                          ??_Get_days 001E  
                                           _SSPCON1 0FC6                                             _SSPCON2 0FC5  
                                           _SSPSTAT 0FC7                           __end_of_I2C_MasterStartRx 2E44  
                              I2C_Close@returnValue 0011                        ?_I2C_SetDataCompleteCallback 0016  
                                         _I2C_DO_RX 1EE8                                           _I2C_DO_TX 193E  
                  __end_of_I2C_DO_SEND_RESTART_READ 2DF0                        I2C_Read1ByteRegister@address 001B  
                                    _tris_registers 00CE                                           _I2C_Close 29F4  
                         ??_lcd_4bit_send_char_data 001E                           ??_rdBlkRegCompleteHandler 000C  
                         ?_INT0_SetInterruptHandler 0011                                _I2C_MasterDisableIrq 2E28  
                                 ??i2_I2C_SetBuffer 0005                                     ??_I2C_MasterFsm 0004  
                                   ??_I2C_MasterIsr 0007                                             __Hparam 0000  
                                           __Lparam 0000                                 __end_of_I2C_DO_IDLE 2D76  
                               __end_of_I2C_DO_RCEN 2D6A                            LCD_Print_Date@DS1307_obj 0041  
                                           ___awdiv 187A                             ??_LCD_Print_Temperature 0041  
                                           ___awmod 1D8E                                     ??_I2C_SetBuffer 0015  
                                         ?_vfprintf 0028                             I2C_SetBuffer@bufferSize 0013  
                                      __psmallconst 1000                                      _I2C_MasterOpen 2B6C  
                                           _decimal 0050                          __end_of_gpio_pin_intialize 2C1C  
                                           __pcinit 2574                                      _I2C_MasterStop 2E4C  
                                    _I2C_Initialize 2C7C                                             __ramtop 1000  
                                           __ptext0 14D0                                             __ptext1 15E2  
                                           __ptext2 2C04                                             __ptext3 17AA  
                                           __ptext4 2B8E                                             __ptext5 2994  
                                           __ptext6 2E00                                             __ptext7 2E18  
                                           __ptext8 28F8                                             __ptext9 2D76  
                             ??_I2C_DO_RX_NACK_STOP 0001                                             _hex_str 00B8  
                                  ___awmod@dividend 0011                                  I2C_SetCallback@idx 0015  
                          ??_PIN_MANAGER_Initialize 0011                       I2C_CallbackReturnReset@funPtr 000A  
                                I2C_SetCallback@ptr 0013                            wr1RegCompleteHandler@ptr 000A  
                         I2C_Write1ByteRegister@reg 001A                            fp__I2C_DO_SEND_ADR_WRITE 0000  
                               _convert_byte_to_str 2A20                                           _TC74_Temp 0051  
                                     _received_data 0052                                             _sprintf 292C  
                              end_of_initialization 25CC                            _INT2_SetInterruptHandler 2D76  
                                        ?_I2C_DO_RX 0001                                          ?_I2C_DO_TX 0001  
                                Get_minutes@address 001E                                             fputc@fp 0013  
                                           memset@c 0012                                             memset@n 0014  
                                           memset@p 0016                                          ?_I2C_Close 0001  
                            ?_rd1RegCompleteHandler 000A                          __end_of_lcd_4bit_intialize 16D8  
                                  ??_LCD_Print_Date 0042                             __end_of_I2C_DO_TX_EMPTY 21BC  
                           ??_lcd_4bit_send_command 001E                                    ??_LCD_Print_Time 0042  
                             ?_I2C_MasterDisableIrq 0001                                   _EUSART_Initialize 28C0  
                            ?_wr1RegCompleteHandler 000A                                        ?_Get_minutes 001D  
                                      ?_Get_seconds 001D                                  Get_minutes@minutes 001F  
                          fp__rd2RegCompleteHandler 0000                                  ?_EUSART_Initialize 0001  
                              ?_convert_byte_to_str 003F                                   __end_of_vfpfcnvrt 13A0  
                                         _RCSTAbits 0FAB                                             postdec1 0FE5  
                                           postdec2 0FDD                             ??_I2C_Read1ByteRegister 001B  
                            __end_of_I2C_MasterOpen 2B8E                                  Get_seconds@address 001E  
                          fp__wr2RegCompleteHandler 0000                                             postinc0 0FEE  
                                           postinc1 0FE6                                             postinc2 0FDE  
                                  vfpfcnvrt@convarg 0023                              __end_of_I2C_MasterStop 2E50  
                            __end_of_I2C_Initialize 2C90                                          ??_vfprintf 002B  
                         fp__I2C_CallbackReturnStop 0000                                             strlen@a 0013  
                                           strlen@s 0011                                 ??_EUSART_Initialize 0013  
                   __end_of_lcd_4bit_send_char_data 2692                               _INT1_InterruptHandler 0049  
                   __end_of_rdBlkRegCompleteHandler 2804                                _I2C_MasterSendTxData 2DF0  
                                   fp__I2C_DO_RESET 0000                                    Get_hours@address 001E  
                     gpio_pin_intialize@_pin_config 0019                                  Get_seconds@seconds 001F  
                        lcd_4bit_send_char_data@lcd 001C                          lcd_4bit_send_char_data@ret 001E  
              __end_of_gpio_pin_direction_intialize 187A                        _gpio_pin_direction_intialize 17AA  
                                      ??_Get_months 001E                         ?_I2C_SetAddressNackCallback 0016  
                                         _TRISDbits 0F95                                   Get_months@address 001E  
                               _EUSART_Deinitialize 0000                     lcd_4bit_send_char_data_pos@data 0026  
                         __end_of_EUSART_Initialize 28F8                                   ?_Read_Temperature 0001  
                                       _I2C_DO_IDLE 2D6A                                         _I2C_DO_RCEN 2D5E  
                        rdBlkRegCompleteHandler@ptr 000A                       I2C_Write1ByteRegister@address 001C  
                                         _TXSTAbits 0FAC                                  ??_Read_Temperature 001D  
                           ?_I2C_CallbackReturnStop 000A                            _I2C_DO_SEND_RESTART_READ 2DE8  
                       fp__I2C_DO_SEND_RESTART_READ 0000                               ??_convert_byte_to_str 0041  
                                    _I2C_Write1Byte 2692                                 _lcd_4bit_set_cursor 1CDE  
                                 i2_I2C_SetCallback 250E                        I2C_CallbackReturnStop@funPtr 000A  
                       lcd_4bit_send_string_pos@lcd 0025                         lcd_4bit_send_string_pos@ret 002A  
                       lcd_4bit_send_string_pos@row 0028                         lcd_4bit_send_string_pos@str 0026  
                                __end_of_Get_months 2CDA                                     ?_I2C_MasterOpen 0001  
                      __end_of_INTERRUPT_Initialize 292C                                     ?_I2C_MasterStop 0001  
                                   ?_I2C_Initialize 0001                             _I2C_CallbackReturnReset 2E44  
                          I2C_Read1ByteRegister@reg 001A                          fp__I2C_CallbackReturnReset 0000  
                      _INT0_DefaultInterruptHandler 0000                                  ?i2_I2C_SetCallback 0001  
                                       vfpfcnvrt@ap 001D                                         vfpfcnvrt@cp 0022  
                                       vfpfcnvrt@fp 001B                     ??i2_I2C_SetDataCompleteCallback 000A  
                                       _BAUDCONbits 0FB8                                           _Get_hours 2CEC  
                                     __pidataCOMRAM 2DF8                                        _EUSART_Write 2DB0  
                                         _Get_years 2CA4                               ?_I2C_MasterSendTxData 0001  
                                    __end_of_memset 29F4                         ??_I2C_DO_SEND_RESTART_WRITE 0001  
                               ??i2_I2C_SetCallback 0005                                      __end_of_strlen 273A  
                               start_initialization 2574                              EX_EEPROM_Read_Byte@reg 001D  
                      ?_lcd_4bit_send_enable_signal 0019                                ?_lcd_4bit_set_cursor 001F  
                                       __end_of_abs 2994                       ?_gpio_pin_direction_intialize 0011  
                                     ?_I2C_DO_RESET 0001                            ?_I2C_SetInterruptHandler 0011  
                              lcd_4bit_send@command 001A                                         ??_I2C_DO_RX 0001  
                                       ??_I2C_DO_TX 0002                                   ??_I2C_MasterClose 0011  
                            ??_I2C_MasterDisableIrq 0011                                         ??_I2C_Close 0011  
                                 ??_I2C_MasterStart 0011                                   ??_I2C_MasterWrite 0013  
                    __end_of_I2C_CallbackReturnStop 2E4C                              _I2C_DO_RX_NACK_RESTART 2DB8  
                                  ?_I2C_DO_TX_EMPTY 0001                              __end_of_I2C_Write1Byte 26EA  
                      __end_of_EUSART_ReceiveEnable 2E20                                  _I2C_MasterClearIrq 2E30  
                         __end_ofi2_I2C_SetCallback 2574                                         vfprintf@fmt 0029  
                          EX_EEPROM_Write_Byte@data 001D                          _EUSART_FramingErrorHandler 0045  
                         LCD_Print_Temperature@temp 0041                         __end_of_I2C_MasterEnableIrq 2E24  
                               ?_I2C_MasterClearIrq 0001                         __end_of_I2C_MasterGetRxData 2E40  
                                       __pdataBANK0 00BA                               __end_of_I2C_DO_RX_ACK 2DD0  
                                          ??_memset 0016                                          ?_Get_hours 001D  
                                 _Get_time_And_Date 23DA                                    _I2C_DO_SEND_STOP 2DD0  
                                        ?_Get_years 001D                                          memset@dest 0011  
                                 ??_I2C_SetCallback 0015                        lcd_4bit_send_command@command 001D  
                               I2C_Open@returnValue 0014                                  _I2C_MasterSendNack 2E12  
                                          ??_strlen 0013                            ?_I2C_MasterEnableRestart 0001  
                                 _i2c_fsmStateTable 1031                                  ?_Get_time_And_Date 0020  
                            fp__I2C_DO_SEND_RESTART 0000                               _I2C_DO_SEND_ADR_WRITE 2D44  
                                    Get_hours@hours 001F                                         __pbssCOMRAM 0045  
                             ??_lcd_4bit_set_cursor 0022                    __end_of_INT0_SetInterruptHandler 2D94  
                                    ??_I2C_DO_RESET 0001                                 ?_I2C_MasterSendNack 0001  
                         Read_Temperature@temp_data 001D                                     i2_I2C_SetBuffer 2B48  
                               ??_Get_time_And_Date 0026                        __end_of_I2C_DO_SEND_ADR_READ 2D44  
                              ??_I2C_MasterClearIrq 0011                         __end_of_I2C_DO_ADDRESS_NACK 250E  
                                  _I2C_MasterIsNack 2C90                           _I2C_DO_SEND_RESTART_WRITE 2DE0  
                             _INT2_InterruptHandler 0047                                      Get_minutes@reg 001D  
                                    Get_seconds@reg 001D                                    _I2C_MasterSetIrq 2E38  
                                   ?_I2C_Write1Byte 001A                               _rd2RegCompleteHandler 2A78  
                            _PIN_MANAGER_Initialize 2994                               _wr2RegCompleteHandler 2AD0  
                         ??_I2C_CallbackReturnReset 000C                         __end_of_I2C_MasterOperation 2844  
                              ??_I2C_MasterSendNack 0001                            rd2RegCompleteHandler@ptr 000A  
                                         __pintcode 0008                     gpio_pin_write_logic@_pin_config 0011  
                                          ?___awdiv 0011                                           __ptext100 2E12  
                                         __ptext101 2E40                                           __ptext110 250E  
                                         __ptext102 27C2                                           __ptext111 2B48  
                                         __ptext103 2A4C                                           __ptext112 2E4C  
                                         __ptext104 2A78                                           __ptext113 2E50  
                                         __ptext105 2AA4                                           __ptext114 0000  
                                         __ptext106 2E44                                           __ptext107 2E48  
                                         __ptext108 2AD0                                           __ptext109 2C64  
                                          ?___awmod 0011                           __end_of_Get_time_And_Date 2442  
                                     _lcd_4bit_send 2306                              ??_I2C_MasterSendTxData 0001  
                         __end_of_i2c_fsmStateTable 1051                       __end_of_LCD_Print_Temperature 2780  
                         gpio_pin_write_logic@logic 0012                                        fp__I2C_DO_RX 0000  
                                      fp__I2C_DO_TX 0000                          __end_of_EUSART_Send_String 2140  
                                 ??_NVM_StatusClear 0011                                         __smallconst 1000  
                        ??_INT2_SetInterruptHandler 0013                     __end_of_I2C_SetInterruptHandler 2DA8  
                            _EUSART_TransmitDisable 0000               __end_ofi2_I2C_SetDataCompleteCallback 2C7C  
                     i2_I2C_SetDataCompleteCallback 2C64                             I2C_MasterOperation@read 0011  
                                          _I2C_Open 1F8E                                            ?_sprintf 002C  
                                         _dummy_str 0055                                  _gpio_pin_intialize 2C04  
                           ??_rd1RegCompleteHandler 000C                                    _EUSART_IsRxReady 0000  
                              _INTERRUPT_Initialize 28F8                                    _EUSART_IsTxReady 2AFC  
                           ??_wr1RegCompleteHandler 000C                                    _CLOCK_Initialize 2D94  
                    ??_gpio_pin_direction_intialize 0012                                 ?_gpio_pin_intialize 0019  
                         ?_INT1_SetInterruptHandler 0011                                            _PIE1bits 0F9D  
                                          _PIE2bits 0FA0                                   _eusartRxLastError 00B0  
                                          i2u200_40 2522                                            i2u200_41 251E  
                                          i2u300_40 004E                                            i2u300_41 004A  
                     __end_of_lcd_4bit_send_command 2634                                            i2u222_40 2B58  
                                          i2u302_40 0078                                            i2u301_48 0054  
                                          i2u222_41 2B54                                            i2u302_41 0074  
                                          i2u301_49 0066                                            i2u231_40 1952  
                                          i2u303_40 0086                                            i2u231_41 194E  
                                          i2u303_41 0082                                            i2u233_40 19F8  
                                          i2u232_48 197C                                            i2u233_41 19F4  
                                          i2u232_49 1990                                            i2u226_40 2CA0  
                                          i2u234_40 1F14                                            i2u226_41 2C9A  
                                          i2u234_41 1F10                                            i2u226_46 2CA2  
                                          i2u235_48 1F42                                            i2u235_49 1F54  
                                          i2u236_48 2170                                            i2u253_40 2240  
                                          i2u236_49 2182                                            i2u253_41 223C  
                                          i2u237_48 24D2                                            i2u254_40 2254  
                                          i2u237_49 24E4                                            i2u254_41 2250  
                                          i2u255_48 2282                                            i2u255_49 2294  
                                          _PIR1bits 0F9E                                            _PIR2bits 0FA1  
                  EX_EEPROM_Read_Byte@received_data 001E                                            i2u299_40 0040  
                                          i2u299_41 003C                               __end_of_I2C_MasterFsm 229A  
                             __end_of_I2C_MasterIsr 2E0C                                            _RCONbits 0FD0  
                       __end_of_I2C_DO_RX_NACK_STOP 2DC8                     __end_of_I2C_MasterEnableRestart 2E54  
                                  _EUSART_Send_Date 1B72                                      ?_lcd_4bit_send 0019  
                                    fp__I2C_DO_IDLE 0000                                      fp__I2C_DO_RCEN 0000  
                                  _EUSART_Send_Temp 229A                                    _EUSART_Send_Time 1ABA  
                                _lcd_4bit_intialize 15E2                       __end_of_I2C_Read1ByteRegister 222C  
                                    Get_years@years 001F                                           _vfpfcnvrt 10CE  
                                       ??_Get_hours 001E                               __end_of_I2C_SetBuffer 2B48  
                                       ??_Get_years 001E                            _lcd_4bit_send_string_pos 202C  
                            ?_I2C_DO_SEND_ADR_WRITE 0001                             __end_ofi2_I2C_SetBuffer 2B6C  
                              ??_gpio_pin_intialize 001A                            I2C_MasterSendTxData@data 0001  
                    lcd_4bit_send_char_data_pos@lcd 0025                      lcd_4bit_send_char_data_pos@ret 0029  
                    lcd_4bit_send_char_data_pos@row 0027                                          _DS1307_obj 00B2  
                                  Get_months@months 001F                                _EUSART_ReceiveEnable 2E1C  
                               ?_lcd_4bit_intialize 001F                            wr2RegCompleteHandler@ptr 000A  
               __end_of_lcd_4bit_send_char_data_pos 28C0                         _lcd_4bit_send_char_data_pos 2884  
                                          _Get_days 2CFE                                         _EUSART_Read 0000  
                                        vfpfcnvrt@c 0027                                          vfpfcnvrt@x 0021  
                           gpio_pin_write_logic@ret 0018                                         _INTCON2bits 0FF1  
                                       _INTCON3bits 0FF0                            ?_lcd_4bit_send_char_data 001C  
                        ??_I2C_DO_SEND_RESTART_READ 0001                                           copy_data0 2588  
                                         copy_data1 25A8                               ?_INTERRUPT_Initialize 0001  
                          ?_rdBlkRegCompleteHandler 000A                           i2I2C_SetBuffer@bufferSize 0003  
                          _INT0_SetInterruptHandler 2D8A                                          _I2C_Status 0060  
                                      ?_I2C_DO_IDLE 0001                                        ?_I2C_DO_RCEN 0001  
                            ?_rd2RegCompleteHandler 000A                       ??_lcd_4bit_send_char_data_pos 0029  
                                        _EECON1bits 0FA6                                    ??_I2C_MasterOpen 0011  
                            ?_wr2RegCompleteHandler 000A                                    ??_I2C_MasterStop 0001  
                                  ??_I2C_Initialize 0011                           fp__I2C_DO_RX_NACK_RESTART 0000  
                              ??_lcd_4bit_intialize 0020                                            __Hrparam 0000  
                                        vfprintf@ap 002A                                            __Lrparam 0000  
                                        vfprintf@fp 0028                               _EUSART_IsTxReady$2105 0011  
                              __end_of_I2C_DO_RESET 2D5E                            ??_I2C_Write1ByteRegister 001C  
                              _I2C_DO_SEND_ADR_READ 2D34                              lcd_4bit_set_cursor@lcd 001F  
                            lcd_4bit_set_cursor@ret 0024                                          ?_vfpfcnvrt 001B  
                            lcd_4bit_set_cursor@row 0020                    I2C_Read1ByteRegister@returnValue 001C  
                      __end_ofi2_I2C_MasterClearIrq 2E38                                   I2C_Write1Byte@reg 001A  
                                   _I2C_MasterClose 2E2C                       I2C_SetAddressNackCallback@ptr 0018  
                             ?_EUSART_ReceiveEnable 0001                                          sprintf@fmt 002D  
                                   I2C_Open@address 0013                                 fp__I2C_DO_SEND_STOP 0000  
                              i2I2C_SetCallback@idx 0005                                     _I2C_MasterStart 2E24  
                              i2I2C_SetCallback@ptr 0003                                     _I2C_MasterWrite 2DA8  
                                _EUSART_AutoBaudSet 0000                                            __ptext10 2D80  
                                          __ptext11 2D8A                                            __ptext20 273A  
                                          __ptext12 2C7C                                            __ptext21 1A02  
                                          __ptext13 2E1C                                            __ptext30 16D8  
                                          __ptext22 13A0                                            __ptext14 28C0  
                                          __ptext31 2692                                            __ptext23 202C  
                                          __ptext15 2BCC                                            __ptext40 2370  
                                          __ptext32 23DA                                            __ptext24 2884  
                                          __ptext16 2BE8                                            __ptext41 2D22  
                                          __ptext33 2CA4                                            __ptext25 1CDE  
                                          __ptext17 2D94                                            __ptext50 2E20  
                                          __ptext42 21BC                                            __ptext34 2CB6  
                                          __ptext26 25D6                                            __ptext18 2C1C  
                                          __ptext51 2DA8                                            __ptext43 2C34  
                                          __ptext35 2CC8                                            __ptext27 2634  
                                          __ptext19 1C2A                                            __ptext60 1B72  
                                          __ptext52 2804                                            __ptext44 2B24  
                                          __ptext36 2CDA                                            __ptext28 2780  
                                          __ptext61 2A20                                            __ptext53 2E24  
                                          __ptext45 2C4C                                            __ptext37 2CEC  
                                          __ptext29 2306                                            __ptext70 29C4  
                                          __ptext62 292C                                            __ptext54 29F4  
                                          __ptext46 2442                                            __ptext38 2CFE  
                                          __ptext71 20C2                                            __ptext63 2844  
                                          __ptext55 2E28                                            __ptext47 1F8E  
                                          __ptext39 2D10                                            __ptext80 2D52  
                                          __ptext72 26EA                                            __ptext64 10CE  
                                          __ptext56 2E2C                                            __ptext48 2D9E  
                                          __ptext81 2DB8                                            __ptext73 2DB0  
                                          __ptext65 1E3E                                            __ptext57 2E30  
                                          __ptext49 2B6C                                            __ptext90 193E  
                                          __ptext82 2DC0                                            __ptext74 2AFC  
                                          __ptext66 2E54                                            __ptext58 1ABA  
                                          __ptext91 2D44                                            __ptext83 2DC8  
                                          __ptext67 2960                                            __ptext59 229A  
                                          __ptext92 2D34                                            __ptext84 2DD0  
                                          __ptext76 2E06                                            __ptext68 1D8E  
                                          __ptext93 2D6A                                            __ptext85 2DD8  
                                          __ptext77 222C                                            __ptext69 187A  
                                          __ptext94 2140                                            __ptext86 2DE0  
                                          __ptext78 2E34                                            __ptext95 2E38  
                                          __ptext87 2DE8                                            __ptext79 24A8  
                                          __ptext96 2C90                                            __ptext88 2D5E  
                                          __ptext97 2DF0                                            __ptext89 1EE8  
                                          __ptext98 2E0C                                            __ptext99 2E3C  
                                   Get_days@address 001E                 __end_of_I2C_SetDataCompleteCallback 2C4C  
                    ?i2_I2C_SetDataCompleteCallback 0006                         _I2C_SetDataCompleteCallback 2C34  
                           ?_I2C_DO_RX_NACK_RESTART 0001                                       Get_months@reg 001D  
                             _EUSART_TransmitEnable 0000                         __end_of_convert_byte_to_str 2A4C  
                          __end_of_I2C_DO_SEND_STOP 2DD8                                        Get_days@days 001F  
                                   _I2C_SetCallback 2442                       ??_I2C_SetDataCompleteCallback 001A  
                             EUSART_Send_String@str 0015                          I2C_Write1ByteRegister@data 001B  
                                    _NVM_Initialize 2E00                                     ??_lcd_4bit_send 001B  
                                          isa$xinst 0000                                            int$flags 005E  
                      __end_of_EX_EEPROM_Write_Byte 2D22                               ?_I2C_DO_SEND_ADR_READ 0001  
                                          _vfprintf 2844              fp__EUSART_FramingErrorCallbackRegister 0000  
       __end_of_EUSART_FramingErrorCallbackRegister 2C04               ??_EUSART_FramingErrorCallbackRegister 0013  
              ?_EUSART_FramingErrorCallbackRegister 0011                 _EUSART_FramingErrorCallbackRegister 2BE8  
                          __end_of_I2C_MasterIsNack 2CA4                                fp__EUSART_Initialize 0000  
                      _INT1_DefaultInterruptHandler 0000                            __end_of_I2C_MasterSetIrq 2E3C  
                                  ?i2_I2C_SetBuffer 0001                                          _INTCONbits 0FF2  
                            ??_INTERRUPT_Initialize 0013                      __end_of_I2C_DO_RX_NACK_RESTART 2DC0  
                      __end_of_gpio_pin_write_logic 17AA                                        Get_hours@reg 001D  
                                  ??_I2C_Write1Byte 001B                                            intlevel2 0000  
                                         sprintf@ap 0032                                 i2I2C_SetCallback@cb 0001  
                    lcd_4bit_send_enable_signal@lcd 0019                      lcd_4bit_send_enable_signal@ret 001A  
                                       _my_lcd_4bit 0058                             ?_PIN_MANAGER_Initialize 0001  
                _EUSART_DefaultFramingErrorCallback 0000                                 _I2C_DO_SEND_RESTART 2DD8  
                               fp__EUSART_IsTxReady 0000                              __end_of_NVM_Initialize 2E06  
                            fp__I2C_DO_ADDRESS_NACK 0000                                         Get_days@reg 001D  
                                   _NVM_StatusClear 2E18                                        Get_years@reg 001D  
                           __end_of_I2C_MasterClose 2E30                                  fp__I2C_DO_TX_EMPTY 0000  
                                       ??_vfpfcnvrt 001E                             __end_of_I2C_MasterStart 2E28  
                          __end_of_EUSART_IsTxReady 2B24                         __end_of_lcd_4bit_set_cursor 1D8E  
                           __end_of_I2C_MasterWrite 2DB0                            __end_of_CLOCK_Initialize 2D9E  
            __end_of_INTERRUPT_InterruptManagerHigh 00B6                      _INTERRUPT_InterruptManagerHigh 0008  
                            ??_EUSART_ReceiveEnable 0011                                ?_I2C_DO_SEND_RESTART 0001  
                               _EX_EEPROM_Read_Byte 2D22                                            sprintf@f 0033  
                                          sprintf@s 002C                                      _port_registers 00BA  
                                  Get_years@address 001E                    __end_of_INT1_SetInterruptHandler 2D8A  
                                       _SSPCON1bits 0FC6                                         _SSPCON2bits 0FC5  
                          __end_of_EUSART_Send_Date 1C2A                                  EUSART_Write@txData 0011  
                          __end_of_EUSART_Send_Temp 2306                            __end_of_EUSART_Send_Time 1B72  
                           __end_of_I2C_SetCallback 24A8                      __end_of_PIN_MANAGER_Initialize 29C4  
                                _EUSART_Send_String 20C2                       __end_of_rd1RegCompleteHandler 2AD0  
                                  fp__I2C_DO_RX_ACK 0000                                ?_EX_EEPROM_Read_Byte 0001  
                       lcd_4bit_send_char_data@data 001D                       __end_of_wr1RegCompleteHandler 2A78  
                           Read_Temperature@address 001E                               _MSSP_InterruptHandler 004D  
                              i2_I2C_MasterClearIrq 2E34                                       ??_Get_minutes 001E  
                                     ??_Get_seconds 001E                                     ?_NVM_Initialize 0001  
                        ??_lcd_4bit_send_string_pos 002A                                 ?_EUSART_Send_String 0015  
                                   fp__EUSART_Write 0000                                Read_Temperature@temp 001F  
